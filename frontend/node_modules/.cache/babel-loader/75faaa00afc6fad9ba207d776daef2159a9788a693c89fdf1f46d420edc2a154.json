{"ast":null,"code":"/**\n * 月次詳細画面の年度セレクタ表示/非表示を制御するスクリプト\n * このスクリプトは、月次レポートデータ表示を改善します\n */\n\n(function () {\n  'use strict';\n\n  /**\n   * 年度セレクタを制御する関数\n   * - 月次詳細タブの年度セレクタを表示\n   * - トップパネルの年度セレクタを非表示\n   */\n  function enhanceMonthlyDetailDisplay() {\n    console.log('[MonthlyDetailEnhancer] 年度セレクタの表示/非表示を制御します');\n\n    // スタイルの読み込み確認\n    const styleExists = Array.from(document.styleSheets).some(sheet => {\n      try {\n        return sheet.href && sheet.href.includes('MonthlyDetailEnhancer.css');\n      } catch (e) {\n        return false;\n      }\n    });\n    if (!styleExists) {\n      console.log('[MonthlyDetailEnhancer] スタイルが読み込まれていないため、適用します');\n      applyStyles();\n    } else {\n      console.log('[MonthlyDetailEnhancer] スタイルが既に適用されています');\n    }\n\n    // DOM監視を設定して動的に追加される要素にも対応\n    observeDOM();\n  }\n\n  /**\n   * スタイルを動的に適用する関数\n   */\n  function applyStyles() {\n    const style = document.createElement('style');\n    style.id = 'monthly-detail-enhancer-style';\n    style.textContent = `\n      /* 月次レポート画面のトップパネルの年度セレクタを非表示 */\n      .monthly-report-container .monthly-tab select[value],\n      .monthly-report-container > div > div > div:first-child select[value] {\n        display: none !important;\n      }\n      \n      /* 月次レポート画面のトップパネルを非表示 */\n      .monthly-report-container > div > div:nth-child(3) {\n        display: none !important;\n      }\n      \n      /* 月次詳細タブの年度セレクタは表示する - 詳細な指定で上書き */\n      .monthly-report-detail select#fiscal-year-select {\n        display: inline-block !important;\n      }\n    `;\n    document.head.appendChild(style);\n    console.log('[MonthlyDetailEnhancer] スタイルを動的に適用しました');\n  }\n\n  /**\n   * DOM変更を監視して動的な要素にもスタイルを適用する\n   */\n  function observeDOM() {\n    const observer = new MutationObserver(mutations => {\n      for (const mutation of mutations) {\n        if (mutation.type === 'childList' && mutation.addedNodes.length) {\n          for (const node of mutation.addedNodes) {\n            if (node.nodeType === 1 && node.querySelector) {\n              // 月次詳細タブの年度セレクタを表示\n              const detailSelector = node.querySelector('.monthly-report-detail select#fiscal-year-select');\n              if (detailSelector) {\n                detailSelector.style.display = 'inline-block';\n                console.log('[MonthlyDetailEnhancer] 月次詳細タブの年度セレクタを表示しました');\n              }\n\n              // トップパネルの年度セレクタを非表示\n              const topPanelSelector = node.querySelector('.monthly-report-container > div > div > div:first-child select');\n              if (topPanelSelector) {\n                topPanelSelector.style.display = 'none';\n                console.log('[MonthlyDetailEnhancer] トップパネルの年度セレクタを非表示にしました');\n              }\n            }\n          }\n        }\n      }\n    });\n\n    // document.body全体を監視\n    observer.observe(document.body, {\n      childList: true,\n      subtree: true\n    });\n    console.log('[MonthlyDetailEnhancer] DOM監視を開始しました');\n  }\n\n  // 初期化関数を実行\n  enhanceMonthlyDetailDisplay();\n\n  // デバッグメッセージ\n  console.log('[MonthlyDetailEnhancer] スクリプトが正常に実行されました');\n})();","map":{"version":3,"names":["enhanceMonthlyDetailDisplay","console","log","styleExists","Array","from","document","styleSheets","some","sheet","href","includes","e","applyStyles","observeDOM","style","createElement","id","textContent","head","appendChild","observer","MutationObserver","mutations","mutation","type","addedNodes","length","node","nodeType","querySelector","detailSelector","display","topPanelSelector","observe","body","childList","subtree"],"sources":["/Users/gotouhiroaki/Programming/DAN_work/disability-employment-system/frontend/src/pages/MonthlyReport/MonthlyDetailEnhancer.js"],"sourcesContent":["/**\n * 月次詳細画面の年度セレクタ表示/非表示を制御するスクリプト\n * このスクリプトは、月次レポートデータ表示を改善します\n */\n\n(function() {\n  'use strict';\n\n  /**\n   * 年度セレクタを制御する関数\n   * - 月次詳細タブの年度セレクタを表示\n   * - トップパネルの年度セレクタを非表示\n   */\n  function enhanceMonthlyDetailDisplay() {\n    console.log('[MonthlyDetailEnhancer] 年度セレクタの表示/非表示を制御します');\n    \n    // スタイルの読み込み確認\n    const styleExists = Array.from(document.styleSheets).some(sheet => {\n      try {\n        return sheet.href && sheet.href.includes('MonthlyDetailEnhancer.css');\n      } catch (e) {\n        return false;\n      }\n    });\n    \n    if (!styleExists) {\n      console.log('[MonthlyDetailEnhancer] スタイルが読み込まれていないため、適用します');\n      applyStyles();\n    } else {\n      console.log('[MonthlyDetailEnhancer] スタイルが既に適用されています');\n    }\n    \n    // DOM監視を設定して動的に追加される要素にも対応\n    observeDOM();\n  }\n  \n  /**\n   * スタイルを動的に適用する関数\n   */\n  function applyStyles() {\n    const style = document.createElement('style');\n    style.id = 'monthly-detail-enhancer-style';\n    style.textContent = `\n      /* 月次レポート画面のトップパネルの年度セレクタを非表示 */\n      .monthly-report-container .monthly-tab select[value],\n      .monthly-report-container > div > div > div:first-child select[value] {\n        display: none !important;\n      }\n      \n      /* 月次レポート画面のトップパネルを非表示 */\n      .monthly-report-container > div > div:nth-child(3) {\n        display: none !important;\n      }\n      \n      /* 月次詳細タブの年度セレクタは表示する - 詳細な指定で上書き */\n      .monthly-report-detail select#fiscal-year-select {\n        display: inline-block !important;\n      }\n    `;\n    document.head.appendChild(style);\n    console.log('[MonthlyDetailEnhancer] スタイルを動的に適用しました');\n  }\n  \n  /**\n   * DOM変更を監視して動的な要素にもスタイルを適用する\n   */\n  function observeDOM() {\n    const observer = new MutationObserver(mutations => {\n      for (const mutation of mutations) {\n        if (mutation.type === 'childList' && mutation.addedNodes.length) {\n          for (const node of mutation.addedNodes) {\n            if (node.nodeType === 1 && node.querySelector) {\n              // 月次詳細タブの年度セレクタを表示\n              const detailSelector = node.querySelector('.monthly-report-detail select#fiscal-year-select');\n              if (detailSelector) {\n                detailSelector.style.display = 'inline-block';\n                console.log('[MonthlyDetailEnhancer] 月次詳細タブの年度セレクタを表示しました');\n              }\n              \n              // トップパネルの年度セレクタを非表示\n              const topPanelSelector = node.querySelector('.monthly-report-container > div > div > div:first-child select');\n              if (topPanelSelector) {\n                topPanelSelector.style.display = 'none';\n                console.log('[MonthlyDetailEnhancer] トップパネルの年度セレクタを非表示にしました');\n              }\n            }\n          }\n        }\n      }\n    });\n    \n    // document.body全体を監視\n    observer.observe(document.body, {\n      childList: true,\n      subtree: true\n    });\n    \n    console.log('[MonthlyDetailEnhancer] DOM監視を開始しました');\n  }\n  \n  // 初期化関数を実行\n  enhanceMonthlyDetailDisplay();\n  \n  // デバッグメッセージ\n  console.log('[MonthlyDetailEnhancer] スクリプトが正常に実行されました');\n})();"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,CAAC,YAAW;EACV,YAAY;;EAEZ;AACF;AACA;AACA;AACA;EACE,SAASA,2BAA2BA,CAAA,EAAG;IACrCC,OAAO,CAACC,GAAG,CAAC,6CAA6C,CAAC;;IAE1D;IACA,MAAMC,WAAW,GAAGC,KAAK,CAACC,IAAI,CAACC,QAAQ,CAACC,WAAW,CAAC,CAACC,IAAI,CAACC,KAAK,IAAI;MACjE,IAAI;QACF,OAAOA,KAAK,CAACC,IAAI,IAAID,KAAK,CAACC,IAAI,CAACC,QAAQ,CAAC,2BAA2B,CAAC;MACvE,CAAC,CAAC,OAAOC,CAAC,EAAE;QACV,OAAO,KAAK;MACd;IACF,CAAC,CAAC;IAEF,IAAI,CAACT,WAAW,EAAE;MAChBF,OAAO,CAACC,GAAG,CAAC,gDAAgD,CAAC;MAC7DW,WAAW,CAAC,CAAC;IACf,CAAC,MAAM;MACLZ,OAAO,CAACC,GAAG,CAAC,yCAAyC,CAAC;IACxD;;IAEA;IACAY,UAAU,CAAC,CAAC;EACd;;EAEA;AACF;AACA;EACE,SAASD,WAAWA,CAAA,EAAG;IACrB,MAAME,KAAK,GAAGT,QAAQ,CAACU,aAAa,CAAC,OAAO,CAAC;IAC7CD,KAAK,CAACE,EAAE,GAAG,+BAA+B;IAC1CF,KAAK,CAACG,WAAW,GAAG;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;IACDZ,QAAQ,CAACa,IAAI,CAACC,WAAW,CAACL,KAAK,CAAC;IAChCd,OAAO,CAACC,GAAG,CAAC,wCAAwC,CAAC;EACvD;;EAEA;AACF;AACA;EACE,SAASY,UAAUA,CAAA,EAAG;IACpB,MAAMO,QAAQ,GAAG,IAAIC,gBAAgB,CAACC,SAAS,IAAI;MACjD,KAAK,MAAMC,QAAQ,IAAID,SAAS,EAAE;QAChC,IAAIC,QAAQ,CAACC,IAAI,KAAK,WAAW,IAAID,QAAQ,CAACE,UAAU,CAACC,MAAM,EAAE;UAC/D,KAAK,MAAMC,IAAI,IAAIJ,QAAQ,CAACE,UAAU,EAAE;YACtC,IAAIE,IAAI,CAACC,QAAQ,KAAK,CAAC,IAAID,IAAI,CAACE,aAAa,EAAE;cAC7C;cACA,MAAMC,cAAc,GAAGH,IAAI,CAACE,aAAa,CAAC,kDAAkD,CAAC;cAC7F,IAAIC,cAAc,EAAE;gBAClBA,cAAc,CAAChB,KAAK,CAACiB,OAAO,GAAG,cAAc;gBAC7C/B,OAAO,CAACC,GAAG,CAAC,8CAA8C,CAAC;cAC7D;;cAEA;cACA,MAAM+B,gBAAgB,GAAGL,IAAI,CAACE,aAAa,CAAC,gEAAgE,CAAC;cAC7G,IAAIG,gBAAgB,EAAE;gBACpBA,gBAAgB,CAAClB,KAAK,CAACiB,OAAO,GAAG,MAAM;gBACvC/B,OAAO,CAACC,GAAG,CAAC,gDAAgD,CAAC;cAC/D;YACF;UACF;QACF;MACF;IACF,CAAC,CAAC;;IAEF;IACAmB,QAAQ,CAACa,OAAO,CAAC5B,QAAQ,CAAC6B,IAAI,EAAE;MAC9BC,SAAS,EAAE,IAAI;MACfC,OAAO,EAAE;IACX,CAAC,CAAC;IAEFpC,OAAO,CAACC,GAAG,CAAC,sCAAsC,CAAC;EACrD;;EAEA;EACAF,2BAA2B,CAAC,CAAC;;EAE7B;EACAC,OAAO,CAACC,GAAG,CAAC,0CAA0C,CAAC;AACzD,CAAC,EAAE,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}