{"ast":null,"code":"var _jsxFileName = \"/Users/gotouhiroaki/Programming/DAN_work/disability-employment-system/frontend/src/pages/EmployeeDetailPage.tsx\",\n  _s = $RefreshSig$();\n// frontend/src/pages/EmployeeDetailPage.tsx\nimport React from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { useQuery } from 'react-query';\nimport EmployeeDetail from '../components/EmployeeDetail';\nimport '../pages/UIFixer.js'; // 従業員詳細と月次報告画面の年度表示最適化\n\n// APIからデータを取得するモック関数\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fetchEmployeeData = async id => {\n  // 実際の環境ではAPIからデータを取得する\n  // ここではモックデータを返す\n  await new Promise(resolve => setTimeout(resolve, 500)); // 遅延を模倣\n\n  return {\n    id: parseInt(id),\n    employeeId: `100${id}`,\n    name: \"山田 太郎\",\n    nameKana: \"ヤマダ タロウ\",\n    gender: \"1\",\n    eraType: \"昭和\",\n    birthYear: \"55\",\n    birthMonth: \"5\",\n    birthDay: \"1\",\n    address: \"東京都千代田区丸の内1-1-1\",\n    phone: \"090-1234-5678\",\n    email: \"taro.yamada@example.com\",\n    emergencyContactName: \"山田 花子\",\n    emergencyContactRelation: \"妻\",\n    emergencyContactPhone: \"090-9876-5432\",\n    supervisorName: \"鈴木 部長\",\n    supervisorPosition: \"総務部長\",\n    supervisorPhone: \"03-1234-5678\",\n    exception: \"\",\n    disabilityType: \"身体障害\",\n    physicalVerified: true,\n    physicalGrade: \"1級\",\n    physicalLocation: \"視覚\",\n    physicalCertDateEra: \"令和\",\n    physicalCertDateYear: \"2\",\n    physicalCertDateMonth: \"4\",\n    physicalCertDateDay: \"1\",\n    certificateNumber: \"A-123456\",\n    certificateIssuer: \"東京都\",\n    certificateExpiryEra: \"令和\",\n    certificateExpiryYear: \"7\",\n    certificateExpiryMonth: \"3\",\n    certificateExpiryDay: \"31\",\n    medicalInstructions: \"視力障害のため、大きな文字での資料提供が必要\",\n    workplaceConsiderations: \"PC作業時は拡大ツールの使用が必要\",\n    employmentType: \"正社員\",\n    countValue: \"2.0\",\n    status: \"在籍中\",\n    count: 2,\n    hireDateEra: \"令和\",\n    hireDateYear: \"2\",\n    hireDateMonth: \"4\",\n    hireDateDay: \"1\",\n    department: \"総務部\",\n    position: \"主任\",\n    jobDescription: \"データ入力、書類整理\",\n    workHours: \"9:00 - 17:00\",\n    workDaysPerWeek: \"5日\",\n    // 月次データ\n    monthlyData: {\n      standardHours: [160, 160, 160, 160, 160, 160, 160, 160, 160, 160, 160, 160],\n      actualHours: [160, 160, 152, 160, 160, 160, 144, 160, 160, 160, 160, 152],\n      notes: ['', '', '有給休暇', '', '', '', '診療通院(2日)', '', '', '', '', '有給休暇'],\n      attendanceFlag: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n      reportFlag: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n      countValues: [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]\n    }\n  };\n};\n\n// 社員データを保存するモック関数\nconst saveEmployeeData = async employee => {\n  // 実際の環境ではAPIを呼び出してデータを保存する\n  console.log('保存されたデータ:', employee);\n  await new Promise(resolve => setTimeout(resolve, 500)); // 遅延を模倣\n  return Promise.resolve();\n};\nconst EmployeeDetailPage = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n\n  // React Queryを使用してデータを取得\n  const {\n    data: employee,\n    isLoading,\n    error\n  } = useQuery(['employee', id], () => fetchEmployeeData(id), {\n    enabled: !!id,\n    refetchOnWindowFocus: false\n  });\n\n  // 戻るボタンのハンドラ\n  const handleBack = () => {\n    navigate('/employee-list');\n  };\n\n  // スピナー表示\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '100vh'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"\\u8AAD\\u307F\\u8FBC\\u307F\\u4E2D...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this);\n  }\n\n  // エラー表示\n  if (error || !employee) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '100vh',\n        color: 'red'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"\\u30C7\\u30FC\\u30BF\\u306E\\u8AAD\\u307F\\u8FBC\\u307F\\u4E2D\\u306B\\u30A8\\u30E9\\u30FC\\u304C\\u767A\\u751F\\u3057\\u307E\\u3057\\u305F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(EmployeeDetail, {\n    employee: employee,\n    onBack: handleBack\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 10\n  }, this);\n};\n_s(EmployeeDetailPage, \"NSvt4KPrp5qW/W1vY5MCrsqHIHA=\", false, function () {\n  return [useParams, useNavigate, useQuery];\n});\n_c = EmployeeDetailPage;\nexport default EmployeeDetailPage;\nvar _c;\n$RefreshReg$(_c, \"EmployeeDetailPage\");","map":{"version":3,"names":["React","useParams","useNavigate","useQuery","EmployeeDetail","jsxDEV","_jsxDEV","fetchEmployeeData","id","Promise","resolve","setTimeout","parseInt","employeeId","name","nameKana","gender","eraType","birthYear","birthMonth","birthDay","address","phone","email","emergencyContactName","emergencyContactRelation","emergencyContactPhone","supervisorName","supervisorPosition","supervisorPhone","exception","disabilityType","physicalVerified","physicalGrade","physicalLocation","physicalCertDateEra","physicalCertDateYear","physicalCertDateMonth","physicalCertDateDay","certificateNumber","certificateIssuer","certificateExpiryEra","certificateExpiryYear","certificateExpiryMonth","certificateExpiryDay","medicalInstructions","workplaceConsiderations","employmentType","countValue","status","count","hireDateEra","hireDateYear","hireDateMonth","hireDateDay","department","position","jobDescription","workHours","workDaysPerWeek","monthlyData","standardHours","actualHours","notes","attendanceFlag","reportFlag","countValues","saveEmployeeData","employee","console","log","EmployeeDetailPage","_s","navigate","data","isLoading","error","enabled","refetchOnWindowFocus","handleBack","style","display","justifyContent","alignItems","height","children","fileName","_jsxFileName","lineNumber","columnNumber","color","onBack","_c","$RefreshReg$"],"sources":["/Users/gotouhiroaki/Programming/DAN_work/disability-employment-system/frontend/src/pages/EmployeeDetailPage.tsx"],"sourcesContent":["// frontend/src/pages/EmployeeDetailPage.tsx\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { useQuery } from 'react-query';\nimport EmployeeDetail from '../components/EmployeeDetail';\nimport { Employee } from '../types/Employee';\nimport '../pages/UIFixer.js'; // 従業員詳細と月次報告画面の年度表示最適化\n\n// APIからデータを取得するモック関数\nconst fetchEmployeeData = async (id: string): Promise<Employee> => {\n  // 実際の環境ではAPIからデータを取得する\n  // ここではモックデータを返す\n  await new Promise(resolve => setTimeout(resolve, 500)); // 遅延を模倣\n  \n  return {\n    id: parseInt(id),\n    employeeId: `100${id}`,\n    name: \"山田 太郎\",\n    nameKana: \"ヤマダ タロウ\",\n    gender: \"1\",\n    eraType: \"昭和\",\n    birthYear: \"55\",\n    birthMonth: \"5\",\n    birthDay: \"1\",\n    address: \"東京都千代田区丸の内1-1-1\",\n    phone: \"090-1234-5678\",\n    email: \"taro.yamada@example.com\",\n    \n    emergencyContactName: \"山田 花子\",\n    emergencyContactRelation: \"妻\",\n    emergencyContactPhone: \"090-9876-5432\",\n    \n    supervisorName: \"鈴木 部長\",\n    supervisorPosition: \"総務部長\",\n    supervisorPhone: \"03-1234-5678\",\n    \n    exception: \"\",\n    \n    disabilityType: \"身体障害\",\n    physicalVerified: true,\n    physicalGrade: \"1級\",\n    physicalLocation: \"視覚\",\n    physicalCertDateEra: \"令和\",\n    physicalCertDateYear: \"2\",\n    physicalCertDateMonth: \"4\",\n    physicalCertDateDay: \"1\",\n    \n    certificateNumber: \"A-123456\",\n    certificateIssuer: \"東京都\",\n    certificateExpiryEra: \"令和\",\n    certificateExpiryYear: \"7\",\n    certificateExpiryMonth: \"3\",\n    certificateExpiryDay: \"31\",\n    \n    medicalInstructions: \"視力障害のため、大きな文字での資料提供が必要\",\n    workplaceConsiderations: \"PC作業時は拡大ツールの使用が必要\",\n    \n    employmentType: \"正社員\",\n    countValue: \"2.0\",\n    status: \"在籍中\",\n    count: 2,\n    hireDateEra: \"令和\",\n    hireDateYear: \"2\",\n    hireDateMonth: \"4\",\n    hireDateDay: \"1\",\n    \n    department: \"総務部\",\n    position: \"主任\",\n    jobDescription: \"データ入力、書類整理\",\n    \n    workHours: \"9:00 - 17:00\",\n    workDaysPerWeek: \"5日\",\n    \n    // 月次データ\n    monthlyData: {\n      standardHours: [160, 160, 160, 160, 160, 160, 160, 160, 160, 160, 160, 160],\n      actualHours: [160, 160, 152, 160, 160, 160, 144, 160, 160, 160, 160, 152],\n      notes: ['', '', '有給休暇', '', '', '', '診療通院(2日)', '', '', '', '', '有給休暇'],\n      attendanceFlag: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n      reportFlag: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n      countValues: [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]\n    }\n  };\n};\n\n// 社員データを保存するモック関数\nconst saveEmployeeData = async (employee: Employee): Promise<void> => {\n  // 実際の環境ではAPIを呼び出してデータを保存する\n  console.log('保存されたデータ:', employee);\n  await new Promise(resolve => setTimeout(resolve, 500)); // 遅延を模倣\n  return Promise.resolve();\n};\n\nconst EmployeeDetailPage: React.FC = () => {\n  const { id } = useParams<{ id: string }>();\n  const navigate = useNavigate();\n  \n  // React Queryを使用してデータを取得\n  const { data: employee, isLoading, error } = useQuery(\n    ['employee', id],\n    () => fetchEmployeeData(id!),\n    {\n      enabled: !!id,\n      refetchOnWindowFocus: false,\n    }\n  );\n\n  // 戻るボタンのハンドラ\n  const handleBack = () => {\n    navigate('/employee-list');\n  };\n\n  // スピナー表示\n  if (isLoading) {\n    return (\n      <div style={{ \n        display: 'flex', \n        justifyContent: 'center', \n        alignItems: 'center', \n        height: '100vh' \n      }}>\n        <div>読み込み中...</div>\n      </div>\n    );\n  }\n\n  // エラー表示\n  if (error || !employee) {\n    return (\n      <div style={{ \n        display: 'flex', \n        justifyContent: 'center', \n        alignItems: 'center', \n        height: '100vh',\n        color: 'red'\n      }}>\n        <div>データの読み込み中にエラーが発生しました</div>\n      </div>\n    );\n  }\n\n  return <EmployeeDetail employee={employee} onBack={handleBack} />;\n};\n\nexport default EmployeeDetailPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}