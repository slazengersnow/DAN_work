{"ast":null,"code":"var _jsxFileName = \"/Users/gotouhiroaki/Programming/DAN_work/disability-employment-system/frontend/src/pages/MonthlyReport/MonthlyReportDetail.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback, useMemo } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { handleApiError, getSettings, checkReportExists, getMonthlyReport } from '../../api/reportApi';\nimport { useYearMonth } from './YearMonthContext';\nimport axios from 'axios';\nimport CSVImportModal from './CSVImportModal'; // CSVインポートモーダル\n\n// CSV関連ユーティリティ\nimport { getYearMonthControlStyle } from '../../api/yearMonthControlsHandler';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n// デフォルトデータを関数の外部で定義して再レンダリング時の再作成を防止\nconst defaultDetailData = {\n  months: ['4月', '5月', '6月', '7月', '8月', '9月', '10月', '11月', '12月', '1月', '2月', '3月', '合計'],\n  data: [{\n    id: 1,\n    item: '従業員数',\n    values: Array(13).fill(0),\n    suffix: '名'\n  }, {\n    id: 2,\n    item: 'フルタイム従業員数',\n    values: Array(13).fill(0),\n    suffix: '名'\n  }, {\n    id: 3,\n    item: 'パートタイム従業員数',\n    values: Array(13).fill(0),\n    suffix: '名'\n  }, {\n    id: 4,\n    item: 'トータル従業員数',\n    values: Array(13).fill(0),\n    suffix: '名',\n    isCalculated: true\n  }, {\n    id: 5,\n    item: '1級・2級の障がい者',\n    values: Array(13).fill(0),\n    suffix: '名',\n    isDisability: true\n  }, {\n    id: 6,\n    item: 'その他障がい者',\n    values: Array(13).fill(0),\n    suffix: '名',\n    isDisability: true\n  }, {\n    id: 7,\n    item: '1級・2級の障がい者(パートタイム)',\n    values: Array(13).fill(0),\n    suffix: '名',\n    isDisability: true\n  }, {\n    id: 8,\n    item: 'その他障がい者(パートタイム)',\n    values: Array(13).fill(0),\n    suffix: '名',\n    isDisability: true\n  }, {\n    id: 9,\n    item: '障がい者合計',\n    values: Array(13).fill(0),\n    suffix: '名',\n    isDisability: true,\n    isCalculated: true\n  }, {\n    id: 10,\n    item: '実雇用率',\n    values: Array(13).fill(0),\n    suffix: '%',\n    isRatio: true,\n    isCalculated: true\n  }, {\n    id: 11,\n    item: '法定雇用率',\n    values: Array(13).fill(0),\n    suffix: '%',\n    isRatio: true\n  }, {\n    id: 12,\n    item: '法定雇用者数',\n    values: Array(13).fill(0),\n    suffix: '名',\n    isCalculated: true\n  }, {\n    id: 13,\n    item: '超過・未達',\n    values: Array(13).fill(0),\n    isNegative: true,\n    isCalculated: true,\n    suffix: '名'\n  }]\n};\n\n// APIのベースURL\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5001/api';\n\n// フィールド名と行IDのマッピング - 再レンダリングによる再作成を防止\nconst rowFieldMap = {\n  '1': 'employees_count',\n  '2': 'fulltime_count',\n  '3': 'parttime_count',\n  '5': 'level1_2_count',\n  '6': 'other_disability_count',\n  '7': 'level1_2_parttime_count',\n  '8': 'other_parttime_count',\n  '11': 'legal_employment_rate'\n};\nconst MonthlyReportDetail = props => {\n  _s();\n  const {\n    monthlyDetailData,\n    onDetailCellChange,\n    summaryData,\n    isEmbedded,\n    onRefreshData,\n    onYearChange\n  } = props;\n\n  // ログを削減し、必要な時だけ出力\n  const logInitial = useRef(true);\n  if (logInitial.current) {\n    var _monthlyDetailData$da;\n    console.log('MonthlyReportDetail props:', {\n      isEmbedded,\n      hasSummaryData: !!summaryData,\n      hasMonthlyDetailData: !!monthlyDetailData,\n      detailDataItemCount: monthlyDetailData === null || monthlyDetailData === void 0 ? void 0 : (_monthlyDetailData$da = monthlyDetailData.data) === null || _monthlyDetailData$da === void 0 ? void 0 : _monthlyDetailData$da.length\n    });\n    logInitial.current = false;\n  }\n  const {\n    fiscalYear,\n    month\n  } = useYearMonth();\n  const [selectedYear, setSelectedYear] = useState(fiscalYear);\n\n  // 年度変更追跡用のref\n  const prevSelectedYear = useRef(selectedYear);\n  const prevMonthlyDetailData = useRef(monthlyDetailData);\n  const navigate = useNavigate();\n  const {\n    id\n  } = useParams();\n  const [isEditing, setIsEditing] = useState(false);\n  const [isCreating, setIsCreating] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [successMessage, setSuccessMessage] = useState(null);\n\n  // CSVインポートモーダルの状態\n  const [isImportModalOpen, setIsImportModalOpen] = useState(false);\n\n  // データ保存状態を追跡する新しいステート\n  const [savedData, setSavedData] = useState({});\n\n  // 重要な改善: 年度ごとにローカルデータを管理する\n  const [dataByYear, setDataByYear] = useState({});\n\n  // 年間データをロードする状態管理\n  const [yearDataLoaded, setYearDataLoaded] = useState({});\n\n  // データ初期化状態を年度ごとに管理\n  const [dataInitialized, setDataInitialized] = useState({});\n\n  // データ取得状態フラグ\n  const [dataFetched, setDataFetched] = useState({});\n\n  // 年度切り替え時の処理追跡フラグ\n  const [yearChanged, setYearChanged] = useState(false);\n  const [needsYearDataRefresh, setNeedsYearDataRefresh] = useState(false);\n\n  // useMemoを使用して再計算を防止\n  const displayFiscalYear = useMemo(() => `${selectedYear}年度`, [selectedYear]);\n  const [activeCell, setActiveCell] = useState({\n    row: null,\n    col: null\n  });\n  const [editingDetailRow, setEditingDetailRow] = useState(null);\n  const [editingDetailCol, setEditingDetailCol] = useState(null);\n\n  // 編集された値を明示的に保持する \n  // 重要な改善: 年度ごとに編集値を管理する\n  const [editedValuesByYear, setEditedValuesByYear] = useState({});\n\n  // 改善: 現在の年度のデータ取得を厳密化\n  const localData = useMemo(() => {\n    // まず保存済みデータをチェック\n    if (savedData[selectedYear]) {\n      return savedData[selectedYear];\n    }\n\n    // 次にロード済みデータをチェック\n    if (dataByYear[selectedYear]) {\n      return dataByYear[selectedYear];\n    }\n\n    // どちらもない場合はデフォルトを返す\n    return JSON.parse(JSON.stringify(defaultDetailData));\n  }, [dataByYear, selectedYear, savedData]);\n\n  // 編集値も同様に厳密化\n  const editedValues = useMemo(() => {\n    return editedValuesByYear[selectedYear] || {};\n  }, [editedValuesByYear, selectedYear]);\n  const [settings, setSettings] = useState(null);\n  const [settingsLoaded, setSettingsLoaded] = useState(false);\n  const inputRefs = useRef({});\n  const setInputRef = useCallback((element, key) => {\n    if (element) {\n      inputRefs.current[key] = element;\n    }\n  }, []);\n\n  // 月のインデックス計算（4月始まりの会計年度）\n  const getMonthIndex = useCallback(m => {\n    return m > 3 ? m - 4 : m + 8;\n  }, []);\n\n  // ブラウザストレージへのアクセスエラーを捕捉\n  useEffect(() => {\n    const originalError = console.error;\n    console.error = function (...args) {\n      // ストレージエラーを無視\n      if (args[0] && typeof args[0] === 'string' && (args[0].includes('Access to storage is not allowed') || args[0].includes('Could not find identifiable element'))) {\n        console.log('ブラウザのストレージエラーを無視しました:', args[0]);\n        return;\n      }\n      originalError.apply(console, args);\n    };\n    return () => {\n      // クリーンアップ時に元のエラーハンドラに戻す\n      console.error = originalError;\n    };\n  }, []);\n\n  // recalculateData関数内の一部\n  const recalculateData = useCallback(data => {\n    const newData = {\n      ...data\n    };\n    const fullTimeEmployeesRowIndex = newData.data.findIndex(row => row.id === 2);\n    const partTimeEmployeesRowIndex = newData.data.findIndex(row => row.id === 3);\n    const totalEmployeesRowIndex = newData.data.findIndex(row => row.id === 4);\n    const level1And2RowIndex = newData.data.findIndex(row => row.id === 5);\n    const otherRowIndex = newData.data.findIndex(row => row.id === 6);\n    const level1And2PartTimeRowIndex = newData.data.findIndex(row => row.id === 7);\n    const otherPartTimeRowIndex = newData.data.findIndex(row => row.id === 8);\n    const totalDisabledRowIndex = newData.data.findIndex(row => row.id === 9);\n    const legalRateRowIndex = newData.data.findIndex(row => row.id === 11);\n\n    // 各行の合計を正しく計算 - 各基本項目の合計欄を計算\n    for (let rowIndex = 0; rowIndex < newData.data.length; rowIndex++) {\n      const row = newData.data[rowIndex];\n      // 合計行の計算対象となる基本項目かどうか\n      const isBasicRow = [1, 2, 3, 5, 6, 7, 8].includes(row.id);\n      if (isBasicRow) {\n        // 合計欄（インデックス12）の値を計算\n        row.values[12] = row.values.slice(0, 12).reduce((sum, value) => sum + value, 0);\n      }\n    }\n\n    // トータル従業員数の計算\n    if (fullTimeEmployeesRowIndex !== -1 && partTimeEmployeesRowIndex !== -1 && totalEmployeesRowIndex !== -1) {\n      const fullTimeValues = newData.data[fullTimeEmployeesRowIndex].values;\n      const partTimeValues = newData.data[partTimeEmployeesRowIndex].values;\n      for (let i = 0; i < 13; i++) {\n        newData.data[totalEmployeesRowIndex].values[i] = fullTimeValues[i] + partTimeValues[i] * 0.5;\n      }\n    }\n\n    // 障がい者合計の計算\n    if (level1And2RowIndex !== -1 && otherRowIndex !== -1 && level1And2PartTimeRowIndex !== -1 && otherPartTimeRowIndex !== -1 && totalDisabledRowIndex !== -1) {\n      const level1And2Values = newData.data[level1And2RowIndex].values;\n      const otherValues = newData.data[otherRowIndex].values;\n      const level1And2PartTimeValues = newData.data[level1And2PartTimeRowIndex].values;\n      const otherPartTimeValues = newData.data[otherPartTimeRowIndex].values;\n      for (let i = 0; i < 13; i++) {\n        newData.data[totalDisabledRowIndex].values[i] = level1And2Values[i] * 2 + otherValues[i] + level1And2PartTimeValues[i] * 2 * 0.5 + otherPartTimeValues[i] * 0.5;\n      }\n    }\n\n    // 実雇用率、法定雇用者数、超過・未達の計算\n    if (totalEmployeesRowIndex !== -1 && totalDisabledRowIndex !== -1 && legalRateRowIndex !== -1) {\n      const totalEmployeeValues = newData.data[totalEmployeesRowIndex].values;\n      const totalDisabledValues = newData.data[totalDisabledRowIndex].values;\n      const legalRateValues = newData.data[legalRateRowIndex].values;\n      const actualRateRowIndex = newData.data.findIndex(row => row.id === 10);\n      if (actualRateRowIndex !== -1) {\n        for (let i = 0; i < 12; i++) {\n          // 0-11は通常の月\n          if (totalEmployeeValues[i] > 0) {\n            // 実雇用率の計算を小数点第2位で切り上げに変更\n            const rawRate = totalDisabledValues[i] / totalEmployeeValues[i] * 100;\n            newData.data[actualRateRowIndex].values[i] = Math.ceil(rawRate * 10) / 10;\n          } else {\n            newData.data[actualRateRowIndex].values[i] = 0;\n          }\n        }\n\n        // 合計欄の実雇用率は、合計障がい者数 / 合計従業員数で計算\n        if (totalEmployeeValues[12] > 0) {\n          const totalRawRate = totalDisabledValues[12] / totalEmployeeValues[12] * 100;\n          newData.data[actualRateRowIndex].values[12] = Math.ceil(totalRawRate * 10) / 10;\n        } else {\n          newData.data[actualRateRowIndex].values[12] = 0;\n        }\n      }\n      const legalCountRowIndex = newData.data.findIndex(row => row.id === 12);\n      if (legalCountRowIndex !== -1) {\n        for (let i = 0; i < 12; i++) {\n          // 0-11は通常の月\n          newData.data[legalCountRowIndex].values[i] = Math.ceil(legalRateValues[i] * totalEmployeeValues[i] / 100);\n        }\n\n        // 合計欄の法定雇用者数も計算\n        newData.data[legalCountRowIndex].values[12] = Math.ceil(legalRateValues[12] * totalEmployeeValues[12] / 100);\n      }\n      const overUnderRowIndex = newData.data.findIndex(row => row.id === 13);\n      if (overUnderRowIndex !== -1 && legalCountRowIndex !== -1) {\n        const legalCountValues = newData.data[legalCountRowIndex].values;\n\n        // 0-11（4月から3月まで）のデータを個別に計算\n        for (let i = 0; i < 12; i++) {\n          newData.data[overUnderRowIndex].values[i] = totalDisabledValues[i] - legalCountValues[i];\n        }\n\n        // 合計欄（12）は、4月から3月までの超過・未達の単純合計\n        const totalOverUnder = newData.data[overUnderRowIndex].values.slice(0, 12).reduce((sum, value) => sum + value, 0);\n\n        // 合計値をセット\n        newData.data[overUnderRowIndex].values[12] = totalOverUnder;\n      }\n    }\n    return newData;\n  }, []);\n\n  // 年度データロード - 完全に再設計\n  const loadYearData = useCallback(async year => {\n    if (!isEmbedded) return;\n\n    // 既にロード済みでキャッシュが無効でない場合はスキップ\n    if (yearDataLoaded[year] && dataFetched[year]) {\n      console.log(`${year}年度のデータは既にロード済み`);\n      return;\n    }\n    console.log(`${year}年度のデータをロードします`);\n    setIsLoading(true);\n    try {\n      // 全ての月のデータをロード\n      const monthsToLoad = [4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3];\n      const allData = [];\n\n      // まずデフォルトの年度データを用意\n      let yearData = savedData[year] ? JSON.parse(JSON.stringify(savedData[year])) : JSON.parse(JSON.stringify(defaultDetailData));\n\n      // 各月のデータを順番に取得\n      for (const m of monthsToLoad) {\n        try {\n          const response = await getMonthlyReport(year, m);\n          if (response && response.data) {\n            console.log(`${year}年度${m}月のデータをAPIから取得しました`);\n\n            // 月インデックスを計算\n            const monthIndex = getMonthIndex(m);\n\n            // APIデータをローカルデータに反映\n            const apiData = response.data;\n\n            // フィールドを順に更新\n            Object.entries(rowFieldMap).forEach(([rowId, fieldName]) => {\n              if (apiData[fieldName] !== undefined) {\n                const rowIndex = yearData.data.findIndex(row => row.id === Number(rowId));\n                if (rowIndex !== -1) {\n                  yearData.data[rowIndex].values[monthIndex] = apiData[fieldName];\n                }\n              }\n            });\n            allData.push(response.data);\n          }\n        } catch (error) {\n          console.warn(`${year}年度${m}月のデータ取得エラー:`, error);\n          // エラーでも続行\n        }\n      }\n      if (allData.length > 0) {\n        // 計算フィールドを更新\n        yearData = recalculateData(yearData);\n\n        // 状態に反映\n        setSavedData(prev => ({\n          ...prev,\n          [year]: yearData\n        }));\n        setDataByYear(prev => ({\n          ...prev,\n          [year]: yearData\n        }));\n\n        // データロード完了フラグをセット\n        setYearDataLoaded(prev => ({\n          ...prev,\n          [year]: true\n        }));\n\n        // データ取得済みフラグをセット\n        setDataFetched(prev => ({\n          ...prev,\n          [year]: true\n        }));\n        setDataInitialized(prev => ({\n          ...prev,\n          [year]: true\n        }));\n        console.log(`${year}年度の全データをロード完了: ${allData.length}ヶ月分`);\n      } else {\n        console.log(`${year}年度のデータはAPIに存在しません`);\n\n        // デフォルトデータを設定\n        const newDefaultData = JSON.parse(JSON.stringify(defaultDetailData));\n        setDataByYear(prev => ({\n          ...prev,\n          [year]: newDefaultData\n        }));\n\n        // データ初期化済みフラグをセット\n        setDataInitialized(prev => ({\n          ...prev,\n          [year]: true\n        }));\n\n        // 新規作成モードをセット\n        if (!isCreating) {\n          setIsCreating(true);\n        }\n      }\n    } catch (error) {\n      console.error(`${year}年度のデータ取得中にエラーが発生しました:`, error);\n\n      // エラー時はデフォルトデータを使用\n      const newDefaultData = JSON.parse(JSON.stringify(defaultDetailData));\n      setDataByYear(prev => ({\n        ...prev,\n        [year]: newDefaultData\n      }));\n\n      // データ初期化済みフラグをセット\n      setDataInitialized(prev => ({\n        ...prev,\n        [year]: true\n      }));\n    } finally {\n      setIsLoading(false);\n    }\n  }, [isEmbedded, getMonthIndex, recalculateData, savedData, yearDataLoaded, dataFetched, isCreating]);\n\n  // 法定雇用率フィールドかどうかを判定する関数\n  const isLegalRateField = useCallback(rowId => {\n    return rowId === 11; // 法定雇用率フィールドのIDは11\n  }, []);\n\n  // CSVインポートモーダルを開くハンドラー\n  const handleOpenImportModal = useCallback(() => {\n    setIsImportModalOpen(true);\n  }, []);\n\n  // CSVインポートモーダルを閉じるハンドラー\n  const handleCloseImportModal = useCallback(() => {\n    setIsImportModalOpen(false);\n  }, []);\n\n  // インポート成功時のハンドラー\n  const handleImportSuccess = useCallback(() => {\n    // データキャッシュをクリア\n    setDataFetched(prev => {\n      const newFetched = {\n        ...prev\n      };\n      newFetched[selectedYear] = false;\n      return newFetched;\n    });\n    setYearDataLoaded(prev => {\n      const newLoaded = {\n        ...prev\n      };\n      newLoaded[selectedYear] = false;\n      return newLoaded;\n    });\n    setDataInitialized(prev => {\n      const newInit = {\n        ...prev\n      };\n      newInit[selectedYear] = false;\n      return newInit;\n    });\n\n    // 成功メッセージを表示\n    setSuccessMessage('CSVデータのインポートが完了しました');\n    setTimeout(() => setSuccessMessage(null), 3000);\n\n    // データを再取得\n    if (onRefreshData) {\n      onRefreshData();\n    }\n\n    // 必要に応じてデータを再読み込み\n    loadYearData(selectedYear);\n  }, [selectedYear, onRefreshData, loadYearData]);\n\n  // 初期ロードと年度変更時のデータロード\n  useEffect(() => {\n    if (isEmbedded) {\n      // 現在の年度のデータが初期化されていない場合\n      if (!dataInitialized[selectedYear]) {\n        if (monthlyDetailData) {\n          console.log(`プロップスから${selectedYear}年度のデータを初期化`);\n\n          // ディープコピーして確実に独立したデータを使用\n          const newData = JSON.parse(JSON.stringify(monthlyDetailData));\n          setDataByYear(prev => ({\n            ...prev,\n            [selectedYear]: newData\n          }));\n\n          // データが初期化されたことを記録\n          setDataInitialized(prev => ({\n            ...prev,\n            [selectedYear]: true\n          }));\n          setIsCreating(false);\n        } else {\n          // APIからデータをロード\n          loadYearData(selectedYear);\n        }\n      }\n      // 年度変更後のデータ再取得フラグがセットされている場合\n      else if (needsYearDataRefresh) {\n        console.log(`年度変更後のデータ再取得: ${selectedYear}年度`);\n\n        // データ再取得済みの場合はフラグをリセット\n        setNeedsYearDataRefresh(false);\n\n        // この年度のデータが既にロード済みでもAPIから最新を取得\n        loadYearData(selectedYear);\n      }\n    }\n  }, [isEmbedded, monthlyDetailData, selectedYear, dataInitialized, needsYearDataRefresh, loadYearData]);\n\n  // 年度変更時の親コンポーネント通知 - 改善版\n  useEffect(() => {\n    if (yearChanged && onYearChange) {\n      console.log(`親コンポーネントに年度変更を通知: ${selectedYear}`);\n      try {\n        // 親コンポーネントに年度変更を通知\n        onYearChange(selectedYear);\n\n        // 年度変更フラグをリセット\n        setYearChanged(false);\n\n        // 年度データの再取得フラグをセット\n        setNeedsYearDataRefresh(true);\n\n        // 編集モードを終了\n        if (isEditing) {\n          setIsEditing(false);\n        }\n      } catch (error) {\n        console.error('年度変更通知中にエラーが発生しました:', error);\n        setYearChanged(false);\n\n        // エラー発生時も再取得フラグはセット\n        setNeedsYearDataRefresh(true);\n      }\n    }\n  }, [yearChanged, selectedYear, onYearChange, isEditing]);\n\n  // 年度変更検知 - 改善版\n  useEffect(() => {\n    if (prevSelectedYear.current !== selectedYear) {\n      console.log(`年度が変更されました: ${prevSelectedYear.current} → ${selectedYear}`);\n      prevSelectedYear.current = selectedYear;\n\n      // 編集中の場合、変更前の編集内容を保存\n      if (isEditing) {\n        const prevYear = prevSelectedYear.current;\n        const yearEdits = editedValuesByYear[prevYear];\n        if (yearEdits && Object.keys(yearEdits).length > 0) {\n          // 編集中のデータを保存\n          console.log(`年度変更前の編集内容を保存: ${prevYear}年度`);\n\n          // 必要に応じて保存処理を実行...\n\n          // 編集値をリセット\n          setEditedValuesByYear(prev => ({\n            ...prev,\n            [prevYear]: {}\n          }));\n        }\n      }\n\n      // 年度変更フラグをセット\n      setYearChanged(true);\n    }\n  }, [selectedYear, isEditing, editedValuesByYear]);\n\n  // URL パラメータからの年度取得\n  useEffect(() => {\n    if (id && id.includes('-')) {\n      const [year] = id.split('-');\n      if (!isNaN(Number(year))) {\n        setSelectedYear(Number(year));\n      }\n    }\n  }, [id]);\n\n  // 開発環境でのデータ出力 - 必要な場合のみ\n  useEffect(() => {\n    if (process.env.NODE_ENV === 'development' && dataByYear[selectedYear]) {\n      // 頻繁に出力しないようにする\n      const timer = setTimeout(() => {\n        var _dataByYear$selectedY;\n        console.log(\"表示されているデータ:\", (_dataByYear$selectedY = dataByYear[selectedYear]) === null || _dataByYear$selectedY === void 0 ? void 0 : _dataByYear$selectedY.data);\n      }, 1000);\n      return () => clearTimeout(timer);\n    }\n  }, [dataByYear, selectedYear]);\n\n  // 設定情報の取得\n  const fetchSettings = useCallback(async () => {\n    if (settingsLoaded) {\n      return null;\n    }\n    try {\n      console.log('設定情報を取得します');\n      try {\n        const response = await getSettings();\n        if (response && response.data && response.success) {\n          setSettings(response.data);\n          setSettingsLoaded(true);\n          return response.data;\n        }\n      } catch (error) {\n        console.error('設定APIエラー:', error);\n        setSettingsLoaded(true);\n      }\n      console.log('設定情報が取得できません');\n      return null;\n    } catch (error) {\n      console.error('設定情報の処理中にエラーが発生しました:', error);\n      setSettingsLoaded(true);\n      return null;\n    }\n  }, [settingsLoaded]);\n  useEffect(() => {\n    if (!settingsLoaded) {\n      fetchSettings();\n    }\n  }, [fetchSettings, settingsLoaded]);\n\n  // 設定変更イベントリスナー\n  useEffect(() => {\n    const handleSettingsChange = () => {\n      console.log('設定変更を検知しました');\n      setSettingsLoaded(false);\n      fetchSettings();\n    };\n    window.addEventListener('settings-changed', handleSettingsChange);\n    return () => {\n      window.removeEventListener('settings-changed', handleSettingsChange);\n    };\n  }, [fetchSettings]);\n\n  // フィールドの種類をチェックするヘルパー関数\n  const isCalculatedField = useCallback(rowId => {\n    const row = localData.data.find(r => r.id === rowId);\n    return (row === null || row === void 0 ? void 0 : row.isCalculated) || false;\n  }, [localData.data]);\n\n  // 年度選択変更ハンドラ - 完全に再設計\n  const handleYearSelectChange = useCallback(e => {\n    const newYear = Number(e.target.value);\n\n    // 年度が同じなら何もしない\n    if (newYear === selectedYear) {\n      return;\n    }\n    console.log(`年度選択変更: ${selectedYear} → ${newYear}`);\n\n    // 編集中の場合は確認\n    if (isEditing && Object.keys(editedValuesByYear[selectedYear] || {}).length > 0) {\n      if (!window.confirm('編集中の内容が破棄されます。本当に年度を変更しますか？')) {\n        return;\n      }\n\n      // 保存されていない編集内容をクリア\n      setEditedValuesByYear(prev => ({\n        ...prev,\n        [selectedYear]: {} // 前の年度の編集内容をクリア\n      }));\n    }\n\n    // 年度を変更\n    setSelectedYear(newYear);\n\n    // 編集モードを終了\n    if (isEditing) {\n      setIsEditing(false);\n    }\n  }, [selectedYear, isEditing, editedValuesByYear]);\n  const toggleEditMode = useCallback(() => {\n    console.log('編集モード切り替え: 現在の状態 =', isEditing, ' → 新しい状態 =', !isEditing);\n    if (isEditing) {\n      // 編集モード終了時に値をリセット\n      if (isEmbedded && monthlyDetailData) {\n        console.log('編集モード終了: データを元に戻します');\n\n        // 編集中の年度のデータだけをリセット - ディープコピーを使用\n        setDataByYear(prev => ({\n          ...prev,\n          [selectedYear]: savedData[selectedYear] || JSON.parse(JSON.stringify(defaultDetailData))\n        }));\n      }\n      setErrorMessage(null);\n\n      // 編集中の年度の編集値だけをリセット\n      setEditedValuesByYear(prev => ({\n        ...prev,\n        [selectedYear]: {}\n      }));\n    }\n    setIsEditing(prevState => !prevState);\n  }, [isEditing, isEmbedded, monthlyDetailData, selectedYear, savedData]);\n  const toggleCreateMode = useCallback(() => {\n    console.log('新規作成モード開始');\n    setIsCreating(true);\n    setIsEditing(true);\n\n    // 編集値をリセット\n    setEditedValuesByYear(prev => ({\n      ...prev,\n      [selectedYear]: {}\n    }));\n\n    // 選択中の年度のデータをデフォルトにリセット - ディープコピーを使用\n    setDataByYear(prev => ({\n      ...prev,\n      [selectedYear]: JSON.parse(JSON.stringify(defaultDetailData))\n    }));\n  }, [selectedYear]);\n  const handleBack = useCallback(() => {\n    navigate('/monthly-report?tab=monthly');\n  }, [navigate]);\n  const handleCellClick = useCallback((rowId, colIndex) => {\n    if (colIndex >= 12) return;\n    if (!isEditing) return;\n    if (isCalculatedField(rowId)) return;\n    setActiveCell({\n      row: rowId,\n      col: colIndex\n    });\n    // セル編集開始\n    if (!isCalculatedField(rowId)) {\n      setEditingDetailRow(rowId);\n      setEditingDetailCol(colIndex);\n      setTimeout(() => {\n        const inputKey = `input-${rowId}-${colIndex}`;\n        console.log(`フォーカス設定: ${inputKey}`);\n        if (inputRefs.current[inputKey]) {\n          var _inputRefs$current$in;\n          (_inputRefs$current$in = inputRefs.current[inputKey]) === null || _inputRefs$current$in === void 0 ? void 0 : _inputRefs$current$in.focus();\n        }\n      }, 10);\n    }\n  }, [isEditing, isCalculatedField]);\n  const handleDetailCellSave = useCallback(() => {\n    console.log('セル編集完了');\n    setEditingDetailRow(null);\n    setEditingDetailCol(null);\n  }, []);\n  const handleKeyDown = useCallback((e, rowId, colIndex) => {\n    if (isCalculatedField(rowId)) return;\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      handleDetailCellSave();\n      const currentRowIndex = localData.data.findIndex(row => row.id === rowId);\n      for (let i = currentRowIndex + 1; i < localData.data.length; i++) {\n        if (!isCalculatedField(localData.data[i].id)) {\n          const nextRowId = localData.data[i].id;\n          setEditingDetailRow(nextRowId);\n          setEditingDetailCol(colIndex);\n          setTimeout(() => {\n            const inputKey = `input-${nextRowId}-${colIndex}`;\n            if (inputRefs.current[inputKey]) {\n              var _inputRefs$current$in2;\n              (_inputRefs$current$in2 = inputRefs.current[inputKey]) === null || _inputRefs$current$in2 === void 0 ? void 0 : _inputRefs$current$in2.focus();\n            }\n          }, 10);\n          break;\n        }\n      }\n    } else if (e.key === 'Tab') {\n      e.preventDefault();\n      handleDetailCellSave();\n      if (e.shiftKey) {\n        if (colIndex > 0) {\n          setEditingDetailRow(rowId);\n          setEditingDetailCol(colIndex - 1);\n        } else {\n          const currentRowIndex = localData.data.findIndex(row => row.id === rowId);\n          if (currentRowIndex > 0) {\n            let prevRowId = null;\n            for (let i = currentRowIndex - 1; i >= 0; i--) {\n              if (!isCalculatedField(localData.data[i].id)) {\n                prevRowId = localData.data[i].id;\n                break;\n              }\n            }\n            if (prevRowId !== null) {\n              setEditingDetailRow(prevRowId);\n              setEditingDetailCol(11);\n            }\n          }\n        }\n      } else {\n        if (colIndex < 11) {\n          setEditingDetailRow(rowId);\n          setEditingDetailCol(colIndex + 1);\n        } else {\n          const currentRowIndex = localData.data.findIndex(row => row.id === rowId);\n          if (currentRowIndex < localData.data.length - 1) {\n            let nextRowId = null;\n            for (let i = currentRowIndex + 1; i < localData.data.length; i++) {\n              if (!isCalculatedField(localData.data[i].id)) {\n                nextRowId = localData.data[i].id;\n                break;\n              }\n            }\n            if (nextRowId !== null) {\n              setEditingDetailRow(nextRowId);\n              setEditingDetailCol(0);\n            }\n          }\n        }\n      }\n      setTimeout(() => {\n        const inputKey = `input-${editingDetailRow}-${editingDetailCol}`;\n        if (inputRefs.current[inputKey]) {\n          var _inputRefs$current$in3;\n          (_inputRefs$current$in3 = inputRefs.current[inputKey]) === null || _inputRefs$current$in3 === void 0 ? void 0 : _inputRefs$current$in3.focus();\n        }\n      }, 10);\n    } else if (e.key === 'ArrowUp' || e.key === 'ArrowDown' || e.key === 'ArrowLeft' || e.key === 'ArrowRight') {\n      e.preventDefault();\n      handleDetailCellSave();\n      const currentRowIndex = localData.data.findIndex(row => row.id === rowId);\n      if (e.key === 'ArrowUp' && currentRowIndex > 0) {\n        let prevRowId = null;\n        for (let i = currentRowIndex - 1; i >= 0; i--) {\n          if (!isCalculatedField(localData.data[i].id)) {\n            prevRowId = localData.data[i].id;\n            break;\n          }\n        }\n        if (prevRowId !== null) {\n          setEditingDetailRow(prevRowId);\n          setEditingDetailCol(colIndex);\n        }\n      } else if (e.key === 'ArrowDown' && currentRowIndex < localData.data.length - 1) {\n        let nextRowId = null;\n        for (let i = currentRowIndex + 1; i < localData.data.length; i++) {\n          if (!isCalculatedField(localData.data[i].id)) {\n            nextRowId = localData.data[i].id;\n            break;\n          }\n        }\n        if (nextRowId !== null) {\n          setEditingDetailRow(nextRowId);\n          setEditingDetailCol(colIndex);\n        }\n      } else if (e.key === 'ArrowLeft' && colIndex > 0) {\n        setEditingDetailRow(rowId);\n        setEditingDetailCol(colIndex - 1);\n      } else if (e.key === 'ArrowRight' && colIndex < 11) {\n        setEditingDetailRow(rowId);\n        setEditingDetailCol(colIndex + 1);\n      }\n      setTimeout(() => {\n        const inputKey = `input-${editingDetailRow}-${editingDetailCol}`;\n        if (inputRefs.current[inputKey]) {\n          var _inputRefs$current$in4;\n          (_inputRefs$current$in4 = inputRefs.current[inputKey]) === null || _inputRefs$current$in4 === void 0 ? void 0 : _inputRefs$current$in4.focus();\n        }\n      }, 10);\n    }\n  }, [isCalculatedField, handleDetailCellSave, localData.data, editingDetailRow, editingDetailCol]);\n\n  // 法定雇用率フィールドの小数点入力対応 - 修正版\n  const handleLocalCellChange = useCallback((rowId, colIndex, value) => {\n    // 法定雇用率フィールド専用の入力判定\n    const isLegalRate = isLegalRateField(rowId);\n\n    // 空の入力を0または0.0として扱う\n    if (value === '') {\n      value = isLegalRate ? '0.0' : '0';\n    }\n\n    // 小数点入力パターンチェック - 法定雇用率フィールドのみ特別扱い\n    const validateInput = () => {\n      if (isLegalRate) {\n        // 法定雇用率フィールド用のパターン - 小数点を許可\n        return /^([0-9]*\\.?[0-9]*)?$/.test(value);\n      } else {\n        // その他フィールド用のパターン - 整数のみ\n        return /^[0-9]*$/.test(value);\n      }\n    };\n\n    // 入力検証\n    if (!validateInput()) {\n      return;\n    }\n\n    // 値の処理 (数値変換と表示用文字列の分離)\n    let numValue;\n    let displayValue = value;\n\n    // 法定雇用率の特別処理\n    if (isLegalRate) {\n      // 小数点のみの入力\n      if (value === '.') {\n        numValue = 0;\n        displayValue = '0.';\n      }\n      // 末尾が小数点の数値\n      else if (value.endsWith('.')) {\n        // 数値としては '.0' を付加して解釈\n        numValue = parseFloat(value + '0');\n        // 表示用には末尾の小数点を保持\n        displayValue = value;\n      }\n      // 通常の数値または小数\n      else {\n        numValue = parseFloat(value);\n        displayValue = value;\n\n        // 整数値の場合、内部的には小数点形式で保持\n        if (Number.isInteger(numValue)) {\n          // 表示用には原文ママ\n          // numValueは変更不要\n        }\n      }\n    } else {\n      // 通常フィールドの数値変換\n      numValue = parseInt(value, 10);\n      if (isNaN(numValue)) numValue = 0;\n    }\n\n    // 月インデックス計算\n    const monthIndex = getMonthIndex(month);\n\n    // 現在の月のセルを編集している場合は編集値を記録\n    if (colIndex === monthIndex && rowFieldMap[rowId.toString()]) {\n      const fieldName = rowFieldMap[rowId.toString()];\n\n      // 現在の年度の編集値を更新\n      setEditedValuesByYear(prev => {\n        const yearEdits = prev[selectedYear] || {};\n        if (isLegalRate) {\n          // 法定雇用率の場合は数値と表示値を別々に保存\n          return {\n            ...prev,\n            [selectedYear]: {\n              ...yearEdits,\n              [fieldName]: numValue,\n              [`${fieldName}_display`]: displayValue\n            }\n          };\n        } else {\n          // 通常フィールドの場合は数値のみ保存\n          return {\n            ...prev,\n            [selectedYear]: {\n              ...yearEdits,\n              [fieldName]: numValue\n            }\n          };\n        }\n      });\n    }\n\n    // 現在の年度のローカルデータを更新\n    setDataByYear(prev => {\n      const currentData = prev[selectedYear] || JSON.parse(JSON.stringify(defaultDetailData));\n      const newData = {\n        ...currentData\n      };\n      const rowIndex = newData.data.findIndex(row => row.id === rowId);\n      if (rowIndex !== -1 && colIndex < 12) {\n        // 値を更新\n        const updatedValues = [...newData.data[rowIndex].values];\n        updatedValues[colIndex] = numValue;\n\n        // 合計の再計算\n        updatedValues[12] = updatedValues.slice(0, 12).reduce((a, b) => a + b, 0);\n        newData.data[rowIndex].values = updatedValues;\n\n        // 修正したデータで自動計算実行\n        return {\n          ...prev,\n          [selectedYear]: recalculateData(newData)\n        };\n      }\n      return prev;\n    });\n\n    // 埋め込みモードの場合、親コンポーネントにも変更を通知\n    if (isEmbedded && onDetailCellChange) {\n      onDetailCellChange(rowId, colIndex, displayValue);\n    }\n  }, [isLegalRateField, getMonthIndex, month, selectedYear, recalculateData, isEmbedded, onDetailCellChange]);\n\n  // 存在チェックの実装\n  const checkIfReportExists = useCallback(async (year, month) => {\n    try {\n      // checkReportExists関数を使用\n      return await checkReportExists(year, month);\n    } catch (error) {\n      console.error('レポート存在チェックエラー:', error);\n      return false;\n    }\n  }, []);\n  const handleErrorSafely = useCallback(error => {\n    // ブラウザ拡張機能関連のエラーを無視\n    if (error instanceof Error && (error.message.includes('Access to storage is not allowed') || error.message.includes('Could not find identifiable element'))) {\n      console.log('無視可能なエラー:', error.message);\n      return 'ブラウザの設定により一部機能が制限されていますが、処理は継続されました。';\n    }\n\n    // 通常のエラー処理\n    return handleApiError(error);\n  }, []);\n\n  // データの直接保存機能\n  const directSave = useCallback(async data => {\n    console.log('直接保存を実行します:', data);\n    try {\n      // 法定雇用率値の処理を改善\n      if (data.legal_employment_rate !== undefined) {\n        // 整数値の場合は小数点表示を強制\n        if (Number.isInteger(data.legal_employment_rate)) {\n          data.legal_employment_rate = parseFloat(data.legal_employment_rate.toFixed(1));\n        }\n      }\n\n      // 既存データの確認\n      const exists = await checkIfReportExists(data.fiscal_year, data.month);\n      let response;\n      try {\n        if (exists) {\n          // 更新処理\n          console.log('PUT リクエスト実行:', `${API_BASE_URL}/monthly-reports/${data.fiscal_year}/${data.month}`);\n          response = await axios.put(`${API_BASE_URL}/monthly-reports/${data.fiscal_year}/${data.month}`, data);\n        } else {\n          // 新規作成処理\n          console.log('POST リクエスト実行:', `${API_BASE_URL}/monthly-reports`);\n          response = await axios.post(`${API_BASE_URL}/monthly-reports`, data);\n        }\n        console.log('API応答:', response.data);\n        return response.data;\n      } catch (error) {\n        if (error instanceof Error && error.message.includes('Access to storage is not allowed')) {\n          console.log('ストレージエラーが発生しましたが、処理を継続します');\n          // エラーにもかかわらず成功したとみなす\n          return {\n            success: true,\n            message: 'データが保存されました（ブラウザ警告あり）',\n            data: data\n          };\n        }\n        throw error;\n      }\n    } catch (error) {\n      console.error('API エラー:', error);\n      throw error;\n    }\n  }, [checkIfReportExists]);\n  const safeRefetchData = useCallback(async () => {\n    try {\n      if (onRefreshData) {\n        onRefreshData();\n      }\n    } catch (error) {\n      if (error instanceof Error && (error.message.includes('Access to storage is not allowed') || error.message.includes('Could not find identifiable element'))) {\n        console.log('データ再取得中にストレージエラーが発生しましたが、処理を継続します');\n\n        // 手動でデータを更新\n        setDataByYear(prev => {\n          const currentData = prev[selectedYear] || JSON.parse(JSON.stringify(defaultDetailData));\n          const newData = {\n            ...currentData\n          };\n\n          // 現在の編集値を反映\n          const edits = editedValuesByYear[selectedYear] || {};\n          Object.entries(edits).forEach(([key, value]) => {\n            var _Object$entries$find;\n            if (key.endsWith('_display')) return;\n            const rowId = (_Object$entries$find = Object.entries(rowFieldMap).find(([, fieldName]) => fieldName === key)) === null || _Object$entries$find === void 0 ? void 0 : _Object$entries$find[0];\n            if (rowId) {\n              const rowIndex = newData.data.findIndex(row => row.id === Number(rowId));\n              if (rowIndex !== -1) {\n                const monthIndex = getMonthIndex(month);\n                if (monthIndex < newData.data[rowIndex].values.length) {\n                  newData.data[rowIndex].values[monthIndex] = Number(value);\n                }\n              }\n            }\n          });\n          return {\n            ...prev,\n            [selectedYear]: recalculateData(newData)\n          };\n        });\n      } else {\n        console.error('データ再取得エラー:', error);\n        throw error;\n      }\n    }\n  }, [onRefreshData, selectedYear, editedValuesByYear, getMonthIndex, month, recalculateData]);\n\n  // DOMから直接値を取得するよう修正された保存ハンドラー\n  const handleSave = useCallback(async () => {\n    console.log('保存ボタンクリック');\n    setIsLoading(true);\n    setErrorMessage(null);\n    try {\n      // 現在の月のインデックス（0ベース）\n      const currentMonthIndex = getMonthIndex(month);\n\n      // DOMから直接値を取得\n      const tableRows = document.querySelectorAll('table tbody tr');\n      const saveData = {\n        fiscal_year: selectedYear,\n        month: month,\n        employees_count: 0,\n        fulltime_count: 0,\n        parttime_count: 0,\n        level1_2_count: 0,\n        other_disability_count: 0,\n        level1_2_parttime_count: 0,\n        other_parttime_count: 0,\n        legal_employment_rate: 0\n      };\n\n      // テーブルから値を抽出\n      tableRows.forEach(row => {\n        const rowId = row.getAttribute('data-row-id');\n        if (!rowId) return;\n        const inputs = row.querySelectorAll('input');\n        if (inputs.length > currentMonthIndex) {\n          const value = Number(inputs[currentMonthIndex].value || 0);\n\n          // 対応するフィールドを更新\n          if (rowId === '1') saveData.employees_count = value;\n          if (rowId === '2') saveData.fulltime_count = value;\n          if (rowId === '3') saveData.parttime_count = value;\n          if (rowId === '5') saveData.level1_2_count = value;\n          if (rowId === '6') saveData.other_disability_count = value;\n          if (rowId === '7') saveData.level1_2_parttime_count = value;\n          if (rowId === '8') saveData.other_parttime_count = value;\n          if (rowId === '11') saveData.legal_employment_rate = value;\n        }\n      });\n\n      // 法定雇用率の特別処理\n      const yearEditedValues = editedValuesByYear[selectedYear] || {};\n      if ('legal_employment_rate_display' in yearEditedValues) {\n        const displayValue = yearEditedValues.legal_employment_rate_display;\n        if (typeof displayValue === 'string') {\n          if (displayValue === '.') {\n            saveData.legal_employment_rate = 0.0;\n          } else if (displayValue === '0.') {\n            saveData.legal_employment_rate = 0.0;\n          } else if (displayValue.endsWith('.')) {\n            // '2.' → '2.0' に変換\n            saveData.legal_employment_rate = parseFloat(displayValue + '0');\n          } else if (displayValue.includes('.')) {\n            // すでに小数点がある場合はそのまま使用\n            saveData.legal_employment_rate = parseFloat(displayValue);\n          } else {\n            // 整数値に対して小数点表示を強制 (例: \"2\" → 2.0)\n            saveData.legal_employment_rate = parseFloat(parseFloat(displayValue).toFixed(1));\n          }\n        }\n      } else {\n        // 法定雇用率が編集されていない場合でも、整数値には小数点表示を強制\n        if (Number.isInteger(saveData.legal_employment_rate)) {\n          saveData.legal_employment_rate = parseFloat(saveData.legal_employment_rate.toFixed(1));\n        }\n      }\n      console.log('実際の保存データ (DOM取得):', saveData);\n\n      // 保存処理\n      const result = await directSave(saveData);\n      console.log('保存成功:', result);\n      if (result && result.success) {\n        // 編集モードをオフに\n        setIsEditing(false);\n        setIsCreating(false);\n\n        // 現在の年度の編集値をクリア\n        setEditedValuesByYear(prev => ({\n          ...prev,\n          [selectedYear]: {}\n        }));\n\n        // 成功メッセージを表示\n        setSuccessMessage(`データを${isCreating ? '作成' : '保存'}しました`);\n        setTimeout(() => setSuccessMessage(null), 3000);\n\n        // 保存したデータを保持\n        const currentData = dataByYear[selectedYear] || JSON.parse(JSON.stringify(defaultDetailData));\n\n        // 保存済みデータに追加\n        setSavedData(prev => ({\n          ...prev,\n          [selectedYear]: JSON.parse(JSON.stringify(currentData))\n        }));\n\n        // 親コンポーネントに通知してデータを再取得\n        if (isEmbedded && onRefreshData) {\n          // 時間をずらして親コンポーネントの再取得処理を実行\n          setTimeout(() => {\n            try {\n              safeRefetchData();\n            } catch (e) {\n              console.error('データ再取得中にエラーが発生しました:', e);\n            }\n          }, 500);\n        }\n      }\n    } catch (error) {\n      console.error('月次詳細データ保存エラー:', error);\n      setErrorMessage(handleErrorSafely(error));\n    } finally {\n      setIsLoading(false);\n    }\n  }, [directSave, getMonthIndex, handleErrorSafely, isCreating, isEmbedded, month, onRefreshData, safeRefetchData, selectedYear, dataByYear, editedValuesByYear]);\n\n  // スタイル定義 - メモ化して再レンダリング時の再作成を防止\n  const cellStyle = useMemo(() => ({\n    width: '100%',\n    height: '22px',\n    border: 'none',\n    textAlign: 'center',\n    backgroundColor: 'transparent',\n    fontSize: '12px',\n    padding: '0'\n  }), []);\n  const readonlyCellStyle = useMemo(() => ({\n    ...cellStyle,\n    backgroundColor: '#f8f9fa'\n  }), [cellStyle]);\n  const legalRateCellStyle = useMemo(() => ({\n    ...cellStyle,\n    backgroundColor: '#e5f7ff',\n    // 薄い青色の背景で法定雇用率フィールドを視覚的に区別\n    fontWeight: 'bold'\n  }), [cellStyle]);\n  const currentStatus = isEmbedded && summaryData !== null && summaryData !== void 0 && summaryData.status ? summaryData.status : '未確定';\n  const isConfirmed = currentStatus === '確定済';\n\n  // デバッグ情報 - 開発環境でのみ表示\n  const DebugInfo = process.env.NODE_ENV === 'development' ? /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'fixed',\n      bottom: 10,\n      right: 10,\n      background: 'rgba(0,0,0,0.7)',\n      color: 'white',\n      padding: '5px 10px',\n      borderRadius: '4px',\n      fontSize: '12px',\n      zIndex: 9999\n    },\n    children: [\"\\u7DE8\\u96C6\\u30E2\\u30FC\\u30C9: \", isEditing ? 'ON' : 'OFF', \" | \\u65B0\\u898F\\u4F5C\\u6210\\u30E2\\u30FC\\u30C9: \", isCreating ? 'ON' : 'OFF', \" | \\u5E74\\u5EA6: \", selectedYear, \" | \\u6708: \", month, \" | \\u6708\\u30A4\\u30F3\\u30C7\\u30C3\\u30AF\\u30B9: \", getMonthIndex(month)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1305,\n    columnNumber: 5\n  }, this) : null;\n\n  // データがない場合の表示を改善\n  if (!monthlyDetailData && !dataByYear[selectedYear] && !savedData[selectedYear] && !isCreating && isEmbedded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"monthly-report-detail\",\n      style: {\n        padding: isEmbedded ? '0' : '20px'\n      },\n      children: [DebugInfo, /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '1rem',\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            margin: 0\n          },\n          children: \"\\u6708\\u6B21\\u8A73\\u7D30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1330,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            gap: '15px',\n            alignItems: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"fiscal-year-select\",\n              value: selectedYear,\n              onChange: handleYearSelectChange,\n              style: {\n                padding: '4px 8px',\n                borderRadius: '4px',\n                border: '1px solid #ddd'\n              },\n              disabled: isLoading,\n              children: Array.from({\n                length: 11\n              }, (_, i) => new Date().getFullYear() - 5 + i).map(year => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: year,\n                children: [year, \"\\u5E74\\u5EA6\"]\n              }, year, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1342,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1334,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1333,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: toggleCreateMode,\n            style: {\n              padding: '8px 16px',\n              backgroundColor: '#28a745',\n              color: 'white',\n              border: 'none',\n              borderRadius: '4px',\n              cursor: 'pointer'\n            },\n            disabled: isLoading || isConfirmed,\n            children: \"\\u65B0\\u898F\\u4F5C\\u6210\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1347,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleOpenImportModal,\n            style: {\n              backgroundColor: '#10b981',\n              // 緑色に変更\n              color: 'white',\n              border: 'none',\n              borderRadius: '4px',\n              padding: '8px 16px',\n              cursor: 'pointer',\n              display: 'flex',\n              alignItems: 'center',\n              gap: '8px',\n              fontSize: '0.9rem'\n            },\n            disabled: isLoading || isConfirmed,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontSize: '1.2rem'\n              },\n              children: \"\\u2191\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1379,\n              columnNumber: 15\n            }, this), \"CSV\\u30A4\\u30F3\\u30DD\\u30FC\\u30C8\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1363,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1332,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1329,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: '40px 20px',\n          textAlign: 'center',\n          backgroundColor: '#f8f9fa',\n          borderRadius: '4px',\n          marginTop: '20px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [selectedYear, \"\\u5E74\\u5EA6\\u306E\\u6708\\u6B21\\u8A73\\u7D30\\u30C7\\u30FC\\u30BF\\u304C\\u3042\\u308A\\u307E\\u305B\\u3093\\u3002\\u65B0\\u898F\\u4F5C\\u6210\\u30DC\\u30BF\\u30F3\\u304B\\u3089\\u30C7\\u30FC\\u30BF\\u3092\\u4F5C\\u6210\\u3059\\u308B\\u304B\\u3001CSV\\u30A4\\u30F3\\u30DD\\u30FC\\u30C8\\u6A5F\\u80FD\\u3092\\u4F7F\\u7528\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\\u3002\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1392,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1385,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CSVImportModal, {\n        isOpen: isImportModalOpen,\n        onClose: handleCloseImportModal,\n        onImportSuccess: handleImportSuccess,\n        fiscalYear: selectedYear\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1396,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1327,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"monthly-report-detail\",\n    style: {\n      padding: isEmbedded ? '0' : '20px'\n    },\n    children: [DebugInfo, !isEmbedded && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleBack,\n        style: {\n          padding: '8px 16px',\n          backgroundColor: '#6c757d',\n          color: 'white',\n          border: 'none',\n          borderRadius: '4px',\n          cursor: 'pointer',\n          marginBottom: '15px'\n        },\n        children: \"\\u2190 \\u6708\\u6B21\\u5831\\u544A\\u4E00\\u89A7\\u306B\\u623B\\u308B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1412,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          fontSize: '1.5rem',\n          marginBottom: '1rem'\n        },\n        children: \"\\u6708\\u6B21\\u5831\\u544A\\u8A73\\u7D30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1427,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: '#f0f8ff',\n          padding: '15px',\n          borderRadius: '4px',\n          marginBottom: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            fontSize: '1.2rem',\n            marginTop: 0,\n            marginBottom: '10px'\n          },\n          children: [displayFiscalYear, \"\\u96C6\\u8A08\\u30B5\\u30DE\\u30EA\\u30FC\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1435,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexWrap: 'wrap',\n            gap: '15px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\u5E38\\u7528\\u52B4\\u50CD\\u8005\\u6570: 525\\u540D\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1437,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"|\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1438,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\u969C\\u5BB3\\u8005\\u6570: 5\\u540D\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1439,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"|\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1440,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\u96C7\\u7528\\u30AB\\u30A6\\u30F3\\u30C8: 5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1441,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"|\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1442,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\u5B9F\\u96C7\\u7528\\u7387: 2.43%\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1443,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"|\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1444,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\u6CD5\\u5B9A\\u96C7\\u7528\\u7387: 2.5%\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1445,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1436,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1429,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: '#d4edda',\n        color: '#155724',\n        padding: '10px',\n        borderRadius: '4px',\n        marginBottom: '15px'\n      },\n      children: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1452,\n      columnNumber: 9\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: '#f8d7da',\n        color: '#721c24',\n        padding: '10px',\n        borderRadius: '4px',\n        marginBottom: '15px'\n      },\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1464,\n      columnNumber: 9\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: '#e9ecef',\n        padding: '10px',\n        borderRadius: '4px',\n        marginBottom: '15px',\n        textAlign: 'center'\n      },\n      children: \"\\u30C7\\u30FC\\u30BF\\u3092\\u51E6\\u7406\\u4E2D...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1476,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '15px',\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          gap: '15px',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            margin: '0'\n          },\n          children: \"\\u6708\\u6B21\\u8A73\\u7D30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1489,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: getYearMonthControlStyle(),\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"fiscal-year-select\",\n            value: selectedYear,\n            onChange: handleYearSelectChange,\n            style: {\n              padding: '4px 8px',\n              borderRadius: '4px',\n              border: '1px solid #ddd'\n            },\n            disabled: isLoading || isEditing,\n            children: Array.from({\n              length: 11\n            }, (_, i) => new Date().getFullYear() - 5 + i).map(year => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: year,\n              children: [year, \"\\u5E74\\u5EA6\"]\n            }, year, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1500,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1492,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1491,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1488,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          gap: '10px'\n        },\n        children: [!isEditing && /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: toggleEditMode,\n          style: {\n            padding: '8px 16px',\n            backgroundColor: '#6c757d',\n            color: 'white',\n            border: 'none',\n            borderRadius: '4px',\n            cursor: 'pointer'\n          },\n          disabled: isLoading || isConfirmed,\n          children: \"\\u7DE8\\u96C6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1508,\n          columnNumber: 13\n        }, this), !isEditing && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleOpenImportModal,\n          style: {\n            backgroundColor: '#10b981',\n            // 緑色に変更\n            color: 'white',\n            border: 'none',\n            borderRadius: '4px',\n            padding: '8px 16px',\n            cursor: 'pointer',\n            display: 'flex',\n            alignItems: 'center',\n            gap: '8px',\n            fontSize: '0.9rem'\n          },\n          disabled: isLoading || isConfirmed,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              fontSize: '1.2rem'\n            },\n            children: \"\\u2191\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1542,\n            columnNumber: 15\n          }, this), \"CSV\\u30A4\\u30F3\\u30DD\\u30FC\\u30C8\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1526,\n          columnNumber: 13\n        }, this), isEditing && /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: toggleEditMode,\n          style: {\n            padding: '8px 16px',\n            backgroundColor: '#f8f9fa',\n            color: '#333',\n            border: '1px solid #ddd',\n            borderRadius: '4px',\n            cursor: 'pointer'\n          },\n          disabled: isLoading,\n          children: \"\\u30AD\\u30E3\\u30F3\\u30BB\\u30EB\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1548,\n          columnNumber: 13\n        }, this), isEditing && /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleSave,\n          style: {\n            padding: '8px 16px',\n            backgroundColor: '#3a66d4',\n            color: 'white',\n            border: 'none',\n            borderRadius: '4px',\n            cursor: 'pointer'\n          },\n          disabled: isLoading,\n          children: isLoading ? '保存中...' : '保存'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1566,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1506,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1487,\n      columnNumber: 7\n    }, this), localData.data.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: 'white',\n        border: '1px solid #dee2e6',\n        borderRadius: '4px',\n        overflow: 'auto'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        style: {\n          width: '100%',\n          borderCollapse: 'collapse',\n          fontSize: '12px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            style: {\n              height: '28px',\n              backgroundColor: '#f8f9fa',\n              borderBottom: '2px solid #dee2e6'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                textAlign: 'left',\n                padding: '4px 6px',\n                position: 'sticky',\n                left: 0,\n                backgroundColor: '#f8f9fa',\n                zIndex: 1,\n                width: '180px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1599,\n              columnNumber: 17\n            }, this), localData.months.map((month, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                padding: '2px',\n                textAlign: 'center',\n                fontWeight: 'normal'\n              },\n              children: month\n            }, `month-${index}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1609,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1598,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1597,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: 14,\n              style: {\n                textAlign: 'left',\n                padding: '4px 6px',\n                fontWeight: 'bold',\n                backgroundColor: '#f8f9fa',\n                borderTop: '1px solid #dee2e6',\n                borderBottom: '1px solid #dee2e6',\n                fontSize: '12px'\n              },\n              children: \"\\u5F93\\u696D\\u54E1\\u6570\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1617,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1616,\n            columnNumber: 15\n          }, this), localData.data.map(row => {\n            const needsSpacerBefore = row.id === 5 || row.id === 10;\n            const isHeaderRow = row.id === 5;\n            return /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [needsSpacerBefore && /*#__PURE__*/_jsxDEV(\"tr\", {\n                className: \"spacer-row\",\n                children: /*#__PURE__*/_jsxDEV(\"td\", {\n                  colSpan: 14,\n                  style: {\n                    padding: '3px',\n                    backgroundColor: '#f8f9fa'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1638,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1637,\n                columnNumber: 23\n              }, this), isHeaderRow && /*#__PURE__*/_jsxDEV(\"tr\", {\n                className: \"header-row\",\n                children: /*#__PURE__*/_jsxDEV(\"th\", {\n                  colSpan: 14,\n                  style: {\n                    textAlign: 'left',\n                    padding: '4px 6px',\n                    fontWeight: 'bold',\n                    backgroundColor: '#f8f9fa',\n                    borderTop: '1px solid #dee2e6',\n                    borderBottom: '1px solid #dee2e6',\n                    fontSize: '12px'\n                  },\n                  children: \"\\u969C\\u304C\\u3044\\u8005\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1643,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1642,\n                columnNumber: 23\n              }, this), row.id === 10 && /*#__PURE__*/_jsxDEV(\"tr\", {\n                className: \"header-row\",\n                children: /*#__PURE__*/_jsxDEV(\"th\", {\n                  colSpan: 14,\n                  style: {\n                    textAlign: 'left',\n                    padding: '4px 6px',\n                    fontWeight: 'bold',\n                    backgroundColor: '#f8f9fa',\n                    borderTop: '1px solid #dee2e6',\n                    borderBottom: '1px solid #dee2e6',\n                    fontSize: '12px'\n                  },\n                  children: \"\\u96C7\\u7528\\u7387\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1658,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1657,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                style: {\n                  backgroundColor: 'white',\n                  height: '22px'\n                },\n                \"data-row-id\": row.id,\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    textAlign: 'left',\n                    padding: '0 6px',\n                    position: 'sticky',\n                    left: 0,\n                    backgroundColor: 'white',\n                    zIndex: 1,\n                    borderRight: '1px solid #f0f0f0',\n                    whiteSpace: 'nowrap',\n                    fontSize: '12px'\n                  },\n                  children: [row.item, row.suffix && /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      fontSize: '10px',\n                      color: '#666'\n                    },\n                    children: [\" (\", row.suffix, \")\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1687,\n                    columnNumber: 40\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1675,\n                  columnNumber: 23\n                }, this), row.values.map((value, colIndex) => {\n                  var _editedValuesByYear$s;\n                  const isCalcField = isCalculatedField(row.id);\n                  const isNegativeValue = row.isNegative && value < 0;\n                  const isActive = activeCell.row === row.id && activeCell.col === colIndex;\n                  const isEditable = isEditing && !isCalcField && colIndex < 12;\n                  const isActiveEditing = editingDetailRow === row.id && editingDetailCol === colIndex;\n                  const isLegal = isLegalRateField(row.id);\n\n                  // 法定雇用率の特別表示 - 編集モード時の表示ロジックを修正\n                  let displayValue = value.toString();\n\n                  // 法定雇用率フィールドで現在編集中の月を表示する場合\n                  if (isLegal && colIndex === getMonthIndex(month) && (_editedValuesByYear$s = editedValuesByYear[selectedYear]) !== null && _editedValuesByYear$s !== void 0 && _editedValuesByYear$s.legal_employment_rate_display) {\n                    displayValue = editedValuesByYear[selectedYear].legal_employment_rate_display;\n                  }\n                  // 小数点表示の特別処理\n                  else if (isLegal) {\n                    // 小数点以下を常に表示\n                    if (Number.isInteger(value)) {\n                      // 整数値に小数点を追加 (例: 2 → \"2.0\")\n                      displayValue = value.toFixed(1);\n                    } else {\n                      // すでに小数点がある場合はそのまま\n                      displayValue = Number(value).toFixed(1);\n                    }\n                  }\n                  // 実雇用率のフォーマット\n                  else if (row.id === 10) {\n                    // 小数点第1位まで表示\n                    displayValue = Number(value).toFixed(1);\n                  }\n                  return /*#__PURE__*/_jsxDEV(\"td\", {\n                    style: {\n                      padding: '0',\n                      textAlign: 'center',\n                      backgroundColor: isActive ? '#e9f2ff' : 'white'\n                    },\n                    onClick: () => isEditable ? handleCellClick(row.id, colIndex) : null,\n                    children: isActiveEditing && isEditing && !isCalcField ? /*#__PURE__*/_jsxDEV(\"input\", {\n                      ref: el => {\n                        setInputRef(el, `input-${row.id}-${colIndex}`);\n                      },\n                      type: \"text\",\n                      style: isLegal ? legalRateCellStyle : cellStyle,\n                      value: displayValue,\n                      onChange: e => handleLocalCellChange(row.id, colIndex, e.target.value),\n                      onClick: e => e.stopPropagation(),\n                      onKeyDown: e => handleKeyDown(e, row.id, colIndex),\n                      onBlur: handleDetailCellSave,\n                      onFocus: () => setActiveCell({\n                        row: row.id,\n                        col: colIndex\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1733,\n                      columnNumber: 31\n                    }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      style: {\n                        ...(isCalcField ? readonlyCellStyle : isLegal ? legalRateCellStyle : cellStyle),\n                        color: isNegativeValue ? 'red' : 'inherit'\n                      },\n                      value: displayValue,\n                      readOnly: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1747,\n                      columnNumber: 31\n                    }, this)\n                  }, `value-${row.id}-${colIndex}`, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1723,\n                    columnNumber: 27\n                  }, this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1671,\n                columnNumber: 21\n              }, this)]\n            }, `row-${row.id}`, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1635,\n              columnNumber: 19\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1615,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1592,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1586,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '30px',\n        textAlign: 'center',\n        backgroundColor: '#f8f9fa',\n        borderRadius: '4px',\n        border: '1px solid #dee2e6',\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontSize: '16px',\n          color: '#666'\n        },\n        children: \"\\u6708\\u6B21\\u8A73\\u7D30\\u30C7\\u30FC\\u30BF\\u304C\\u3042\\u308A\\u307E\\u305B\\u3093\\u3002\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1778,\n        columnNumber: 11\n      }, this), !isEmbedded && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleBack,\n        style: {\n          padding: '8px 16px',\n          backgroundColor: '#6c757d',\n          color: 'white',\n          border: 'none',\n          borderRadius: '4px',\n          marginTop: '15px',\n          cursor: 'pointer'\n        },\n        children: \"\\u623B\\u308B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1780,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1770,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(CSVImportModal, {\n      isOpen: isImportModalOpen,\n      onClose: handleCloseImportModal,\n      onImportSuccess: handleImportSuccess,\n      fiscalYear: selectedYear\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1799,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1407,\n    columnNumber: 5\n  }, this);\n};\n_s(MonthlyReportDetail, \"oyM2zbhvlGQHRfHXRDpoL1rSKK4=\", false, function () {\n  return [useYearMonth, useNavigate, useParams];\n});\n_c = MonthlyReportDetail;\nexport default MonthlyReportDetail;\nvar _c;\n$RefreshReg$(_c, \"MonthlyReportDetail\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","useMemo","useParams","useNavigate","handleApiError","getSettings","checkReportExists","getMonthlyReport","useYearMonth","axios","CSVImportModal","getYearMonthControlStyle","jsxDEV","_jsxDEV","Fragment","_Fragment","defaultDetailData","months","data","id","item","values","Array","fill","suffix","isCalculated","isDisability","isRatio","isNegative","API_BASE_URL","process","env","REACT_APP_API_URL","rowFieldMap","MonthlyReportDetail","props","_s","monthlyDetailData","onDetailCellChange","summaryData","isEmbedded","onRefreshData","onYearChange","logInitial","current","_monthlyDetailData$da","console","log","hasSummaryData","hasMonthlyDetailData","detailDataItemCount","length","fiscalYear","month","selectedYear","setSelectedYear","prevSelectedYear","prevMonthlyDetailData","navigate","isEditing","setIsEditing","isCreating","setIsCreating","isLoading","setIsLoading","errorMessage","setErrorMessage","successMessage","setSuccessMessage","isImportModalOpen","setIsImportModalOpen","savedData","setSavedData","dataByYear","setDataByYear","yearDataLoaded","setYearDataLoaded","dataInitialized","setDataInitialized","dataFetched","setDataFetched","yearChanged","setYearChanged","needsYearDataRefresh","setNeedsYearDataRefresh","displayFiscalYear","activeCell","setActiveCell","row","col","editingDetailRow","setEditingDetailRow","editingDetailCol","setEditingDetailCol","editedValuesByYear","setEditedValuesByYear","localData","JSON","parse","stringify","editedValues","settings","setSettings","settingsLoaded","setSettingsLoaded","inputRefs","setInputRef","element","key","getMonthIndex","m","originalError","error","args","includes","apply","recalculateData","newData","fullTimeEmployeesRowIndex","findIndex","partTimeEmployeesRowIndex","totalEmployeesRowIndex","level1And2RowIndex","otherRowIndex","level1And2PartTimeRowIndex","otherPartTimeRowIndex","totalDisabledRowIndex","legalRateRowIndex","rowIndex","isBasicRow","slice","reduce","sum","value","fullTimeValues","partTimeValues","i","level1And2Values","otherValues","level1And2PartTimeValues","otherPartTimeValues","totalEmployeeValues","totalDisabledValues","legalRateValues","actualRateRowIndex","rawRate","Math","ceil","totalRawRate","legalCountRowIndex","overUnderRowIndex","legalCountValues","totalOverUnder","loadYearData","year","monthsToLoad","allData","yearData","response","monthIndex","apiData","Object","entries","forEach","rowId","fieldName","undefined","Number","push","warn","prev","newDefaultData","isLegalRateField","handleOpenImportModal","handleCloseImportModal","handleImportSuccess","newFetched","newLoaded","newInit","setTimeout","prevYear","yearEdits","keys","split","isNaN","NODE_ENV","timer","_dataByYear$selectedY","clearTimeout","fetchSettings","success","handleSettingsChange","window","addEventListener","removeEventListener","isCalculatedField","find","r","handleYearSelectChange","e","newYear","target","confirm","toggleEditMode","prevState","toggleCreateMode","handleBack","handleCellClick","colIndex","inputKey","_inputRefs$current$in","focus","handleDetailCellSave","handleKeyDown","preventDefault","currentRowIndex","nextRowId","_inputRefs$current$in2","shiftKey","prevRowId","_inputRefs$current$in3","_inputRefs$current$in4","handleLocalCellChange","isLegalRate","validateInput","test","numValue","displayValue","endsWith","parseFloat","isInteger","parseInt","toString","currentData","updatedValues","a","b","checkIfReportExists","handleErrorSafely","Error","message","directSave","legal_employment_rate","toFixed","exists","fiscal_year","put","post","safeRefetchData","edits","_Object$entries$find","handleSave","currentMonthIndex","tableRows","document","querySelectorAll","saveData","employees_count","fulltime_count","parttime_count","level1_2_count","other_disability_count","level1_2_parttime_count","other_parttime_count","getAttribute","inputs","yearEditedValues","legal_employment_rate_display","result","cellStyle","width","height","border","textAlign","backgroundColor","fontSize","padding","readonlyCellStyle","legalRateCellStyle","fontWeight","currentStatus","status","isConfirmed","DebugInfo","style","position","bottom","right","background","color","borderRadius","zIndex","children","fileName","_jsxFileName","lineNumber","columnNumber","className","marginBottom","display","justifyContent","alignItems","margin","gap","onChange","disabled","from","_","Date","getFullYear","map","type","onClick","cursor","marginTop","isOpen","onClose","onImportSuccess","flexWrap","overflow","borderCollapse","borderBottom","left","index","colSpan","borderTop","needsSpacerBefore","isHeaderRow","borderRight","whiteSpace","_editedValuesByYear$s","isCalcField","isNegativeValue","isActive","isEditable","isActiveEditing","isLegal","ref","el","stopPropagation","onKeyDown","onBlur","onFocus","readOnly","_c","$RefreshReg$"],"sources":["/Users/gotouhiroaki/Programming/DAN_work/disability-employment-system/frontend/src/pages/MonthlyReport/MonthlyReportDetail.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback, useMemo } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { MonthlyDetailData, MonthlyTotal } from './types';\nimport { \n  updateDetailCell, \n  updateMonthlySummary,\n  handleApiError,\n  getSettings,\n  checkReportExists,\n  createMonthlyReport,\n  getMonthlyReport\n} from '../../api/reportApi';\nimport { useYearMonth } from './YearMonthContext';\nimport axios from 'axios';\nimport CSVImportModal from './CSVImportModal'; // CSVインポートモーダル\nimport { generateCSVTemplate, downloadCSV } from './utils'; // CSV関連ユーティリティ\nimport { shouldShowYearMonthControls, getYearMonthControlStyle } from '../../api/yearMonthControlsHandler';\n\ninterface MonthlyReportDetailProps {\n  monthlyDetailData?: MonthlyDetailData | null;\n  onDetailCellChange?: (rowId: number, colIndex: number, value: string) => void;\n  summaryData?: MonthlyTotal | null;\n  isEmbedded?: boolean;\n  onRefreshData?: () => void;\n  onYearChange?: (year: number) => void;\n}\n\ninterface Settings {\n  legal_employment_rates: {\n    fiscal_year: number;\n    month: number;\n    rate: number;\n  }[];\n}\n\n// デフォルトデータを関数の外部で定義して再レンダリング時の再作成を防止\nconst defaultDetailData: MonthlyDetailData = {\n  months: ['4月', '5月', '6月', '7月', '8月', '9月', '10月', '11月', '12月', '1月', '2月', '3月', '合計'],\n  data: [\n    { id: 1, item: '従業員数', values: Array(13).fill(0), suffix: '名' },\n    { id: 2, item: 'フルタイム従業員数', values: Array(13).fill(0), suffix: '名' },\n    { id: 3, item: 'パートタイム従業員数', values: Array(13).fill(0), suffix: '名' },\n    { id: 4, item: 'トータル従業員数', values: Array(13).fill(0), suffix: '名', isCalculated: true },\n    { id: 5, item: '1級・2級の障がい者', values: Array(13).fill(0), suffix: '名', isDisability: true },\n    { id: 6, item: 'その他障がい者', values: Array(13).fill(0), suffix: '名', isDisability: true },\n    { id: 7, item: '1級・2級の障がい者(パートタイム)', values: Array(13).fill(0), suffix: '名', isDisability: true },\n    { id: 8, item: 'その他障がい者(パートタイム)', values: Array(13).fill(0), suffix: '名', isDisability: true },\n    { id: 9, item: '障がい者合計', values: Array(13).fill(0), suffix: '名', isDisability: true, isCalculated: true },\n    { id: 10, item: '実雇用率', values: Array(13).fill(0), suffix: '%', isRatio: true, isCalculated: true },\n    { id: 11, item: '法定雇用率', values: Array(13).fill(0), suffix: '%', isRatio: true },\n    { id: 12, item: '法定雇用者数', values: Array(13).fill(0), suffix: '名', isCalculated: true },\n    { id: 13, item: '超過・未達', values: Array(13).fill(0), isNegative: true, isCalculated: true, suffix: '名' }\n  ]\n};\n\n// APIのベースURL\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5001/api';\n\n// フィールド名と行IDのマッピング - 再レンダリングによる再作成を防止\nconst rowFieldMap: {[key: string]: string} = {\n  '1': 'employees_count',\n  '2': 'fulltime_count',\n  '3': 'parttime_count',\n  '5': 'level1_2_count',\n  '6': 'other_disability_count',\n  '7': 'level1_2_parttime_count',\n  '8': 'other_parttime_count',\n  '11': 'legal_employment_rate'\n};\n\nconst MonthlyReportDetail: React.FC<MonthlyReportDetailProps> = (props) => {\n  const { monthlyDetailData, onDetailCellChange, summaryData, isEmbedded, onRefreshData, onYearChange } = props;\n  \n  // ログを削減し、必要な時だけ出力\n  const logInitial = useRef<boolean>(true);\n  if (logInitial.current) {\n    console.log('MonthlyReportDetail props:', {\n      isEmbedded,\n      hasSummaryData: !!summaryData,\n      hasMonthlyDetailData: !!monthlyDetailData,\n      detailDataItemCount: monthlyDetailData?.data?.length\n    });\n    logInitial.current = false;\n  }\n  \n  const { fiscalYear, month } = useYearMonth();\n  const [selectedYear, setSelectedYear] = useState<number>(fiscalYear);\n  \n  // 年度変更追跡用のref\n  const prevSelectedYear = useRef<number>(selectedYear);\n  const prevMonthlyDetailData = useRef<MonthlyDetailData | null | undefined>(monthlyDetailData);\n  \n  const navigate = useNavigate();\n  const { id } = useParams<{ id: string }>();\n  \n  const [isEditing, setIsEditing] = useState<boolean>(false);\n  const [isCreating, setIsCreating] = useState<boolean>(false);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [errorMessage, setErrorMessage] = useState<string | null>(null);\n  const [successMessage, setSuccessMessage] = useState<string | null>(null);\n  \n  // CSVインポートモーダルの状態\n  const [isImportModalOpen, setIsImportModalOpen] = useState<boolean>(false);\n  \n  // データ保存状態を追跡する新しいステート\n  const [savedData, setSavedData] = useState<{[key: number]: MonthlyDetailData}>({});\n  \n  // 重要な改善: 年度ごとにローカルデータを管理する\n  const [dataByYear, setDataByYear] = useState<{[key: number]: MonthlyDetailData}>({});\n  \n  // 年間データをロードする状態管理\n  const [yearDataLoaded, setYearDataLoaded] = useState<{[key: number]: boolean}>({});\n  \n  // データ初期化状態を年度ごとに管理\n  const [dataInitialized, setDataInitialized] = useState<{[key: number]: boolean}>({});\n  \n  // データ取得状態フラグ\n  const [dataFetched, setDataFetched] = useState<{[key: number]: boolean}>({});\n  \n  // 年度切り替え時の処理追跡フラグ\n  const [yearChanged, setYearChanged] = useState<boolean>(false);\n  const [needsYearDataRefresh, setNeedsYearDataRefresh] = useState<boolean>(false);\n  \n  // useMemoを使用して再計算を防止\n  const displayFiscalYear = useMemo(() => `${selectedYear}年度`, [selectedYear]);\n  \n  const [activeCell, setActiveCell] = useState<{row: number | null, col: number | null}>({row: null, col: null});\n  const [editingDetailRow, setEditingDetailRow] = useState<number | null>(null);\n  const [editingDetailCol, setEditingDetailCol] = useState<number | null>(null);\n  \n  // 編集された値を明示的に保持する \n  // 重要な改善: 年度ごとに編集値を管理する\n  const [editedValuesByYear, setEditedValuesByYear] = useState<{[key: number]: {[key: string]: any}}>({});\n  \n  // 改善: 現在の年度のデータ取得を厳密化\n  const localData = useMemo(() => {\n    // まず保存済みデータをチェック\n    if (savedData[selectedYear]) {\n      return savedData[selectedYear];\n    }\n    \n    // 次にロード済みデータをチェック\n    if (dataByYear[selectedYear]) {\n      return dataByYear[selectedYear];\n    }\n    \n    // どちらもない場合はデフォルトを返す\n    return JSON.parse(JSON.stringify(defaultDetailData));\n  }, [dataByYear, selectedYear, savedData]);\n  \n  // 編集値も同様に厳密化\n  const editedValues = useMemo(() => {\n    return editedValuesByYear[selectedYear] || {};\n  }, [editedValuesByYear, selectedYear]);\n  \n  const [settings, setSettings] = useState<Settings | null>(null);\n  const [settingsLoaded, setSettingsLoaded] = useState<boolean>(false);\n  \n  const inputRefs = useRef<{[key: string]: HTMLInputElement | null}>({});\n  const setInputRef = useCallback((element: HTMLInputElement | null, key: string) => {\n    if (element) {\n      inputRefs.current[key] = element;\n    }\n  }, []);\n\n  // 月のインデックス計算（4月始まりの会計年度）\n  const getMonthIndex = useCallback((m: number) => {\n    return (m > 3) ? m - 4 : m + 8;\n  }, []);\n\n  // ブラウザストレージへのアクセスエラーを捕捉\n  useEffect(() => {\n    const originalError = console.error;\n    console.error = function(...args) {\n      // ストレージエラーを無視\n      if (args[0] && typeof args[0] === 'string' && \n        (args[0].includes('Access to storage is not allowed') || \n          args[0].includes('Could not find identifiable element'))) {\n        console.log('ブラウザのストレージエラーを無視しました:', args[0]);\n        return;\n      }\n      originalError.apply(console, args);\n    };\n    \n    return () => {\n      // クリーンアップ時に元のエラーハンドラに戻す\n      console.error = originalError;\n    };\n  }, []);\n\n  // recalculateData関数内の一部\n  const recalculateData = useCallback((data: MonthlyDetailData): MonthlyDetailData => {\n    const newData = {...data};\n    \n    const fullTimeEmployeesRowIndex = newData.data.findIndex(row => row.id === 2);\n    const partTimeEmployeesRowIndex = newData.data.findIndex(row => row.id === 3);\n    const totalEmployeesRowIndex = newData.data.findIndex(row => row.id === 4);\n    \n    const level1And2RowIndex = newData.data.findIndex(row => row.id === 5);\n    const otherRowIndex = newData.data.findIndex(row => row.id === 6);\n    const level1And2PartTimeRowIndex = newData.data.findIndex(row => row.id === 7);\n    const otherPartTimeRowIndex = newData.data.findIndex(row => row.id === 8);\n    const totalDisabledRowIndex = newData.data.findIndex(row => row.id === 9);\n    \n    const legalRateRowIndex = newData.data.findIndex(row => row.id === 11);\n    \n    // 各行の合計を正しく計算 - 各基本項目の合計欄を計算\n    for (let rowIndex = 0; rowIndex < newData.data.length; rowIndex++) {\n      const row = newData.data[rowIndex];\n      // 合計行の計算対象となる基本項目かどうか\n      const isBasicRow = [1, 2, 3, 5, 6, 7, 8].includes(row.id);\n      \n      if (isBasicRow) {\n        // 合計欄（インデックス12）の値を計算\n        row.values[12] = row.values.slice(0, 12).reduce((sum, value) => sum + value, 0);\n      }\n    }\n    \n    // トータル従業員数の計算\n    if (fullTimeEmployeesRowIndex !== -1 && partTimeEmployeesRowIndex !== -1 && totalEmployeesRowIndex !== -1) {\n      const fullTimeValues = newData.data[fullTimeEmployeesRowIndex].values;\n      const partTimeValues = newData.data[partTimeEmployeesRowIndex].values;\n      \n      for (let i = 0; i < 13; i++) {\n        newData.data[totalEmployeesRowIndex].values[i] = \n          fullTimeValues[i] + (partTimeValues[i] * 0.5);\n      }\n    }\n    \n    // 障がい者合計の計算\n    if (level1And2RowIndex !== -1 && otherRowIndex !== -1 && \n        level1And2PartTimeRowIndex !== -1 && otherPartTimeRowIndex !== -1 && \n        totalDisabledRowIndex !== -1) {\n        \n      const level1And2Values = newData.data[level1And2RowIndex].values;\n      const otherValues = newData.data[otherRowIndex].values;\n      const level1And2PartTimeValues = newData.data[level1And2PartTimeRowIndex].values;\n      const otherPartTimeValues = newData.data[otherPartTimeRowIndex].values;\n      \n      for (let i = 0; i < 13; i++) {\n        newData.data[totalDisabledRowIndex].values[i] = \n          level1And2Values[i] * 2 + otherValues[i] + \n          level1And2PartTimeValues[i] * 2 * 0.5 + otherPartTimeValues[i] * 0.5;\n      }\n    }\n    \n    // 実雇用率、法定雇用者数、超過・未達の計算\n    if (totalEmployeesRowIndex !== -1 && totalDisabledRowIndex !== -1 && legalRateRowIndex !== -1) {\n      const totalEmployeeValues = newData.data[totalEmployeesRowIndex].values;\n      const totalDisabledValues = newData.data[totalDisabledRowIndex].values;\n      const legalRateValues = newData.data[legalRateRowIndex].values;\n      \n      const actualRateRowIndex = newData.data.findIndex(row => row.id === 10);\n      if (actualRateRowIndex !== -1) {\n        for (let i = 0; i < 12; i++) { // 0-11は通常の月\n          if (totalEmployeeValues[i] > 0) {\n            // 実雇用率の計算を小数点第2位で切り上げに変更\n            const rawRate = (totalDisabledValues[i] / totalEmployeeValues[i]) * 100;\n            newData.data[actualRateRowIndex].values[i] = Math.ceil(rawRate * 10) / 10;\n          } else {\n            newData.data[actualRateRowIndex].values[i] = 0;\n          }\n        }\n        \n        // 合計欄の実雇用率は、合計障がい者数 / 合計従業員数で計算\n        if (totalEmployeeValues[12] > 0) {\n          const totalRawRate = (totalDisabledValues[12] / totalEmployeeValues[12]) * 100;\n          newData.data[actualRateRowIndex].values[12] = Math.ceil(totalRawRate * 10) / 10;\n        } else {\n          newData.data[actualRateRowIndex].values[12] = 0;\n        }\n      }\n      \n      const legalCountRowIndex = newData.data.findIndex(row => row.id === 12);\n      if (legalCountRowIndex !== -1) {\n        for (let i = 0; i < 12; i++) { // 0-11は通常の月\n          newData.data[legalCountRowIndex].values[i] = \n            Math.ceil((legalRateValues[i] * totalEmployeeValues[i]) / 100);\n        }\n        \n        // 合計欄の法定雇用者数も計算\n        newData.data[legalCountRowIndex].values[12] = \n          Math.ceil((legalRateValues[12] * totalEmployeeValues[12]) / 100);\n      }\n      \n      const overUnderRowIndex = newData.data.findIndex(row => row.id === 13);\n      if (overUnderRowIndex !== -1 && legalCountRowIndex !== -1) {\n        const legalCountValues = newData.data[legalCountRowIndex].values;\n        \n        // 0-11（4月から3月まで）のデータを個別に計算\n        for (let i = 0; i < 12; i++) {\n          newData.data[overUnderRowIndex].values[i] = \n            totalDisabledValues[i] - legalCountValues[i];\n        }\n        \n        // 合計欄（12）は、4月から3月までの超過・未達の単純合計\n        const totalOverUnder = newData.data[overUnderRowIndex].values.slice(0, 12)\n          .reduce((sum, value) => sum + value, 0);\n          \n        // 合計値をセット\n        newData.data[overUnderRowIndex].values[12] = totalOverUnder;\n      }\n    }\n    \n    return newData;\n  }, []);\n\n  // 年度データロード - 完全に再設計\n  const loadYearData = useCallback(async (year: number) => {\n    if (!isEmbedded) return;\n    \n    // 既にロード済みでキャッシュが無効でない場合はスキップ\n    if (yearDataLoaded[year] && dataFetched[year]) {\n      console.log(`${year}年度のデータは既にロード済み`);\n      return;\n    }\n    \n    console.log(`${year}年度のデータをロードします`);\n    setIsLoading(true);\n    \n    try {\n      // 全ての月のデータをロード\n      const monthsToLoad = [4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3];\n      const allData: any[] = [];\n      \n      // まずデフォルトの年度データを用意\n      let yearData = savedData[year] ? JSON.parse(JSON.stringify(savedData[year])) : \n                   JSON.parse(JSON.stringify(defaultDetailData));\n      \n      // 各月のデータを順番に取得\n      for (const m of monthsToLoad) {\n        try {\n          const response = await getMonthlyReport(year, m);\n          if (response && response.data) {\n            console.log(`${year}年度${m}月のデータをAPIから取得しました`);\n            \n            // 月インデックスを計算\n            const monthIndex = getMonthIndex(m);\n            \n            // APIデータをローカルデータに反映\n            const apiData = response.data;\n            \n            // フィールドを順に更新\n            Object.entries(rowFieldMap).forEach(([rowId, fieldName]) => {\n              if (apiData[fieldName] !== undefined) {\n                const rowIndex = yearData.data.findIndex(row => row.id === Number(rowId));\n                if (rowIndex !== -1) {\n                  yearData.data[rowIndex].values[monthIndex] = apiData[fieldName];\n                }\n              }\n            });\n            \n            allData.push(response.data);\n          }\n        } catch (error) {\n          console.warn(`${year}年度${m}月のデータ取得エラー:`, error);\n          // エラーでも続行\n        }\n      }\n      \n      if (allData.length > 0) {\n        // 計算フィールドを更新\n        yearData = recalculateData(yearData);\n        \n        // 状態に反映\n        setSavedData(prev => ({\n          ...prev,\n          [year]: yearData\n        }));\n        \n        setDataByYear(prev => ({\n          ...prev,\n          [year]: yearData\n        }));\n        \n        // データロード完了フラグをセット\n        setYearDataLoaded(prev => ({\n          ...prev,\n          [year]: true\n        }));\n        \n        // データ取得済みフラグをセット\n        setDataFetched(prev => ({\n          ...prev,\n          [year]: true\n        }));\n        \n        setDataInitialized(prev => ({\n          ...prev,\n          [year]: true\n        }));\n        \n        console.log(`${year}年度の全データをロード完了: ${allData.length}ヶ月分`);\n      } else {\n        console.log(`${year}年度のデータはAPIに存在しません`);\n        \n        // デフォルトデータを設定\n        const newDefaultData = JSON.parse(JSON.stringify(defaultDetailData));\n        \n        setDataByYear(prev => ({\n          ...prev,\n          [year]: newDefaultData\n        }));\n        \n        // データ初期化済みフラグをセット\n        setDataInitialized(prev => ({\n          ...prev,\n          [year]: true\n        }));\n        \n        // 新規作成モードをセット\n        if (!isCreating) {\n          setIsCreating(true);\n        }\n      }\n    } catch (error) {\n      console.error(`${year}年度のデータ取得中にエラーが発生しました:`, error);\n      \n      // エラー時はデフォルトデータを使用\n      const newDefaultData = JSON.parse(JSON.stringify(defaultDetailData));\n      \n      setDataByYear(prev => ({\n        ...prev,\n        [year]: newDefaultData\n      }));\n      \n      // データ初期化済みフラグをセット\n      setDataInitialized(prev => ({\n        ...prev,\n        [year]: true\n      }));\n    } finally {\n      setIsLoading(false);\n    }\n  }, [isEmbedded, getMonthIndex, recalculateData, savedData, yearDataLoaded, dataFetched, isCreating]);\n\n  // 法定雇用率フィールドかどうかを判定する関数\n  const isLegalRateField = useCallback((rowId: number): boolean => {\n    return rowId === 11; // 法定雇用率フィールドのIDは11\n  }, []);\n\n  // CSVインポートモーダルを開くハンドラー\n  const handleOpenImportModal = useCallback(() => {\n    setIsImportModalOpen(true);\n  }, []);\n\n  // CSVインポートモーダルを閉じるハンドラー\n  const handleCloseImportModal = useCallback(() => {\n    setIsImportModalOpen(false);\n  }, []);\n\n  // インポート成功時のハンドラー\n  const handleImportSuccess = useCallback(() => {\n    // データキャッシュをクリア\n    setDataFetched(prev => {\n      const newFetched = {...prev};\n      newFetched[selectedYear] = false;\n      return newFetched;\n    });\n    \n    setYearDataLoaded(prev => {\n      const newLoaded = {...prev};\n      newLoaded[selectedYear] = false;\n      return newLoaded;\n    });\n    \n    setDataInitialized(prev => {\n      const newInit = {...prev};\n      newInit[selectedYear] = false;\n      return newInit;\n    });\n    \n    // 成功メッセージを表示\n    setSuccessMessage('CSVデータのインポートが完了しました');\n    setTimeout(() => setSuccessMessage(null), 3000);\n    \n    // データを再取得\n    if (onRefreshData) {\n      onRefreshData();\n    }\n    \n    // 必要に応じてデータを再読み込み\n    loadYearData(selectedYear);\n  }, [selectedYear, onRefreshData, loadYearData]);\n\n  // 初期ロードと年度変更時のデータロード\n  useEffect(() => {\n    if (isEmbedded) {\n      // 現在の年度のデータが初期化されていない場合\n      if (!dataInitialized[selectedYear]) {\n        if (monthlyDetailData) {\n          console.log(`プロップスから${selectedYear}年度のデータを初期化`);\n          \n          // ディープコピーして確実に独立したデータを使用\n          const newData = JSON.parse(JSON.stringify(monthlyDetailData));\n          \n          setDataByYear(prev => ({\n            ...prev,\n            [selectedYear]: newData\n          }));\n          \n          // データが初期化されたことを記録\n          setDataInitialized(prev => ({\n            ...prev,\n            [selectedYear]: true\n          }));\n          \n          setIsCreating(false);\n        } else {\n          // APIからデータをロード\n          loadYearData(selectedYear);\n        }\n      }\n      // 年度変更後のデータ再取得フラグがセットされている場合\n      else if (needsYearDataRefresh) {\n        console.log(`年度変更後のデータ再取得: ${selectedYear}年度`);\n        \n        // データ再取得済みの場合はフラグをリセット\n        setNeedsYearDataRefresh(false);\n        \n        // この年度のデータが既にロード済みでもAPIから最新を取得\n        loadYearData(selectedYear);\n      }\n    }\n  }, [isEmbedded, monthlyDetailData, selectedYear, dataInitialized, \n      needsYearDataRefresh, loadYearData]);\n\n  // 年度変更時の親コンポーネント通知 - 改善版\n  useEffect(() => {\n    if (yearChanged && onYearChange) {\n      console.log(`親コンポーネントに年度変更を通知: ${selectedYear}`);\n      try {\n        // 親コンポーネントに年度変更を通知\n        onYearChange(selectedYear);\n        \n        // 年度変更フラグをリセット\n        setYearChanged(false);\n        \n        // 年度データの再取得フラグをセット\n        setNeedsYearDataRefresh(true);\n        \n        // 編集モードを終了\n        if (isEditing) {\n          setIsEditing(false);\n        }\n      } catch (error) {\n        console.error('年度変更通知中にエラーが発生しました:', error);\n        setYearChanged(false);\n        \n        // エラー発生時も再取得フラグはセット\n        setNeedsYearDataRefresh(true);\n      }\n    }\n  }, [yearChanged, selectedYear, onYearChange, isEditing]);\n\n  // 年度変更検知 - 改善版\n  useEffect(() => {\n    if (prevSelectedYear.current !== selectedYear) {\n      console.log(`年度が変更されました: ${prevSelectedYear.current} → ${selectedYear}`);\n      prevSelectedYear.current = selectedYear;\n      \n      // 編集中の場合、変更前の編集内容を保存\n      if (isEditing) {\n        const prevYear = prevSelectedYear.current;\n        const yearEdits = editedValuesByYear[prevYear];\n        \n        if (yearEdits && Object.keys(yearEdits).length > 0) {\n          // 編集中のデータを保存\n          console.log(`年度変更前の編集内容を保存: ${prevYear}年度`);\n          \n          // 必要に応じて保存処理を実行...\n          \n          // 編集値をリセット\n          setEditedValuesByYear(prev => ({\n            ...prev,\n            [prevYear]: {}\n          }));\n        }\n      }\n      \n      // 年度変更フラグをセット\n      setYearChanged(true);\n    }\n  }, [selectedYear, isEditing, editedValuesByYear]);\n\n  // URL パラメータからの年度取得\n  useEffect(() => {\n    if (id && id.includes('-')) {\n      const [year] = id.split('-');\n      if (!isNaN(Number(year))) {\n        setSelectedYear(Number(year));\n      }\n    }\n  }, [id]);\n\n  // 開発環境でのデータ出力 - 必要な場合のみ\n  useEffect(() => {\n    if (process.env.NODE_ENV === 'development' && dataByYear[selectedYear]) {\n      // 頻繁に出力しないようにする\n      const timer = setTimeout(() => {\n        console.log(\"表示されているデータ:\", dataByYear[selectedYear]?.data);\n      }, 1000);\n      \n      return () => clearTimeout(timer);\n    }\n  }, [dataByYear, selectedYear]);\n\n  // 設定情報の取得\n  const fetchSettings = useCallback(async () => {\n    if (settingsLoaded) {\n      return null;\n    }\n    \n    try {\n      console.log('設定情報を取得します');\n      \n      try {\n        const response = await getSettings();\n        if (response && response.data && response.success) {\n          setSettings(response.data);\n          setSettingsLoaded(true);\n          return response.data;\n        }\n      } catch (error) {\n        console.error('設定APIエラー:', error);\n        setSettingsLoaded(true);\n      }\n      \n      console.log('設定情報が取得できません');\n      return null;\n    } catch (error) {\n      console.error('設定情報の処理中にエラーが発生しました:', error);\n      setSettingsLoaded(true);\n      return null;\n    }\n  }, [settingsLoaded]);\n\n  useEffect(() => {\n    if (!settingsLoaded) {\n      fetchSettings();\n    }\n  }, [fetchSettings, settingsLoaded]);\n\n  // 設定変更イベントリスナー\n  useEffect(() => {\n    const handleSettingsChange = () => {\n      console.log('設定変更を検知しました');\n      setSettingsLoaded(false);\n      fetchSettings();\n    };\n    \n    window.addEventListener('settings-changed', handleSettingsChange);\n    \n    return () => {\n      window.removeEventListener('settings-changed', handleSettingsChange);\n    };\n  }, [fetchSettings]);\n\n  // フィールドの種類をチェックするヘルパー関数\n  const isCalculatedField = useCallback((rowId: number): boolean => {\n    const row = localData.data.find(r => r.id === rowId);\n    return row?.isCalculated || false;\n  }, [localData.data]);\n\n  // 年度選択変更ハンドラ - 完全に再設計\n  const handleYearSelectChange = useCallback((e: React.ChangeEvent<HTMLSelectElement>) => {\n    const newYear = Number(e.target.value);\n    \n    // 年度が同じなら何もしない\n    if (newYear === selectedYear) {\n      return;\n    }\n    \n    console.log(`年度選択変更: ${selectedYear} → ${newYear}`);\n    \n    // 編集中の場合は確認\n    if (isEditing && Object.keys(editedValuesByYear[selectedYear] || {}).length > 0) {\n      if (!window.confirm('編集中の内容が破棄されます。本当に年度を変更しますか？')) {\n        return;\n      }\n      \n      // 保存されていない編集内容をクリア\n      setEditedValuesByYear(prev => ({\n        ...prev,\n        [selectedYear]: {} // 前の年度の編集内容をクリア\n      }));\n    }\n    \n    // 年度を変更\n    setSelectedYear(newYear);\n    \n    // 編集モードを終了\n    if (isEditing) {\n      setIsEditing(false);\n    }\n  }, [selectedYear, isEditing, editedValuesByYear]);\n\n  const toggleEditMode = useCallback(() => {\n    console.log('編集モード切り替え: 現在の状態 =', isEditing, ' → 新しい状態 =', !isEditing); \n    \n    if (isEditing) {\n      // 編集モード終了時に値をリセット\n      if (isEmbedded && monthlyDetailData) {\n        console.log('編集モード終了: データを元に戻します');\n        \n        // 編集中の年度のデータだけをリセット - ディープコピーを使用\n        setDataByYear(prev => ({\n          ...prev,\n          [selectedYear]: savedData[selectedYear] || JSON.parse(JSON.stringify(defaultDetailData))\n        }));\n      }\n      \n      setErrorMessage(null);\n      \n      // 編集中の年度の編集値だけをリセット\n      setEditedValuesByYear(prev => ({\n        ...prev,\n        [selectedYear]: {}\n      }));\n    }\n    \n    setIsEditing(prevState => !prevState);\n  }, [isEditing, isEmbedded, monthlyDetailData, selectedYear, savedData]);\n\n  const toggleCreateMode = useCallback(() => {\n    console.log('新規作成モード開始');\n    setIsCreating(true);\n    setIsEditing(true);\n    \n    // 編集値をリセット\n    setEditedValuesByYear(prev => ({\n      ...prev,\n      [selectedYear]: {}\n    }));\n    \n    // 選択中の年度のデータをデフォルトにリセット - ディープコピーを使用\n    setDataByYear(prev => ({\n      ...prev,\n      [selectedYear]: JSON.parse(JSON.stringify(defaultDetailData))\n    }));\n  }, [selectedYear]);\n  \n  const handleBack = useCallback(() => {\n    navigate('/monthly-report?tab=monthly');\n  }, [navigate]);\n\n  const handleCellClick = useCallback((rowId: number, colIndex: number) => {\n    if (colIndex >= 12) return;\n    if (!isEditing) return;\n    if (isCalculatedField(rowId)) return;\n    \n    setActiveCell({row: rowId, col: colIndex});\n    // セル編集開始\n    if (!isCalculatedField(rowId)) {\n      setEditingDetailRow(rowId);\n      setEditingDetailCol(colIndex);\n      \n      setTimeout(() => {\n        const inputKey = `input-${rowId}-${colIndex}`;\n        console.log(`フォーカス設定: ${inputKey}`);\n        if (inputRefs.current[inputKey]) {\n          inputRefs.current[inputKey]?.focus();\n        }\n      }, 10);\n    }\n  }, [isEditing, isCalculatedField]);\n\n  const handleDetailCellSave = useCallback(() => {\n    console.log('セル編集完了');\n    setEditingDetailRow(null);\n    setEditingDetailCol(null);\n  }, []);\n\n  const handleKeyDown = useCallback((e: React.KeyboardEvent<HTMLInputElement>, rowId: number, colIndex: number) => {\n    if (isCalculatedField(rowId)) return;\n    \n    if (e.key === 'Enter') {\n      e.preventDefault();\n      handleDetailCellSave();\n      \n      const currentRowIndex = localData.data.findIndex(row => row.id === rowId);\n      for (let i = currentRowIndex + 1; i < localData.data.length; i++) {\n        if (!isCalculatedField(localData.data[i].id)) {\n          const nextRowId = localData.data[i].id;\n          setEditingDetailRow(nextRowId);\n          setEditingDetailCol(colIndex);\n          \n          setTimeout(() => {\n            const inputKey = `input-${nextRowId}-${colIndex}`;\n            if (inputRefs.current[inputKey]) {\n              inputRefs.current[inputKey]?.focus();\n            }\n          }, 10);\n          break;\n        }\n      }\n    }\n    else if (e.key === 'Tab') {\n      e.preventDefault();\n      handleDetailCellSave();\n      \n      if (e.shiftKey) {\n        if (colIndex > 0) {\n          setEditingDetailRow(rowId);\n          setEditingDetailCol(colIndex - 1);\n        } else {\n          const currentRowIndex = localData.data.findIndex(row => row.id === rowId);\n          if (currentRowIndex > 0) {\n            let prevRowId: number | null = null;\n            for (let i = currentRowIndex - 1; i >= 0; i--) {\n              if (!isCalculatedField(localData.data[i].id)) {\n                prevRowId = localData.data[i].id;\n                break;\n              }\n            }\n            if (prevRowId !== null) {\n              setEditingDetailRow(prevRowId);\n              setEditingDetailCol(11);\n            }\n          }\n        }\n      } else {\n        if (colIndex < 11) {\n          setEditingDetailRow(rowId);\n          setEditingDetailCol(colIndex + 1);\n        } else {\n          const currentRowIndex = localData.data.findIndex(row => row.id === rowId);\n          if (currentRowIndex < localData.data.length - 1) {\n            let nextRowId: number | null = null;\n            for (let i = currentRowIndex + 1; i < localData.data.length; i++) {\n              if (!isCalculatedField(localData.data[i].id)) {\n                nextRowId = localData.data[i].id;\n                break;\n              }\n            }\n            if (nextRowId !== null) {\n              setEditingDetailRow(nextRowId);\n              setEditingDetailCol(0);\n            }\n          }\n        }\n      }\n      \n      setTimeout(() => {\n        const inputKey = `input-${editingDetailRow}-${editingDetailCol}`;\n        if (inputRefs.current[inputKey]) {\n          inputRefs.current[inputKey]?.focus();\n        }\n      }, 10);\n    }\n    else if (e.key === 'ArrowUp' || e.key === 'ArrowDown' || e.key === 'ArrowLeft' || e.key === 'ArrowRight') {\n      e.preventDefault();\n      handleDetailCellSave();\n      \n      const currentRowIndex = localData.data.findIndex(row => row.id === rowId);\n      \n      if (e.key === 'ArrowUp' && currentRowIndex > 0) {\n        let prevRowId: number | null = null;\n        for (let i = currentRowIndex - 1; i >= 0; i--) {\n          if (!isCalculatedField(localData.data[i].id)) {\n            prevRowId = localData.data[i].id;\n            break;\n          }\n        }\n        if (prevRowId !== null) {\n          setEditingDetailRow(prevRowId);\n          setEditingDetailCol(colIndex);\n        }\n      }\n      else if (e.key === 'ArrowDown' && currentRowIndex < localData.data.length - 1) {\n        let nextRowId: number | null = null;\n        for (let i = currentRowIndex + 1; i < localData.data.length; i++) {\n          if (!isCalculatedField(localData.data[i].id)) {\n            nextRowId = localData.data[i].id;\n            break;\n          }\n        }\n        if (nextRowId !== null) {\n          setEditingDetailRow(nextRowId);\n          setEditingDetailCol(colIndex);\n        }\n      }\n      else if (e.key === 'ArrowLeft' && colIndex > 0) {\n        setEditingDetailRow(rowId);\n        setEditingDetailCol(colIndex - 1);\n      }\n      else if (e.key === 'ArrowRight' && colIndex < 11) {\n        setEditingDetailRow(rowId);\n        setEditingDetailCol(colIndex + 1);\n      }\n      \n      setTimeout(() => {\n        const inputKey = `input-${editingDetailRow}-${editingDetailCol}`;\n        if (inputRefs.current[inputKey]) {\n          inputRefs.current[inputKey]?.focus();\n        }\n      }, 10);\n    }\n  }, [isCalculatedField, handleDetailCellSave, localData.data, editingDetailRow, editingDetailCol]);\n\n  // 法定雇用率フィールドの小数点入力対応 - 修正版\n  const handleLocalCellChange = useCallback((rowId: number, colIndex: number, value: string) => {\n    // 法定雇用率フィールド専用の入力判定\n    const isLegalRate = isLegalRateField(rowId);\n    \n    // 空の入力を0または0.0として扱う\n    if (value === '') {\n      value = isLegalRate ? '0.0' : '0';\n    }\n    \n    // 小数点入力パターンチェック - 法定雇用率フィールドのみ特別扱い\n    const validateInput = (): boolean => {\n      if (isLegalRate) {\n        // 法定雇用率フィールド用のパターン - 小数点を許可\n        return /^([0-9]*\\.?[0-9]*)?$/.test(value);\n      } else {\n        // その他フィールド用のパターン - 整数のみ\n        return /^[0-9]*$/.test(value);\n      }\n    };\n    \n    // 入力検証\n    if (!validateInput()) {\n      return;\n    }\n    \n    // 値の処理 (数値変換と表示用文字列の分離)\n    let numValue: number;\n    let displayValue = value;\n    \n    // 法定雇用率の特別処理\n    if (isLegalRate) {\n      // 小数点のみの入力\n      if (value === '.') {\n        numValue = 0;\n        displayValue = '0.';\n      } \n      // 末尾が小数点の数値\n      else if (value.endsWith('.')) {\n        // 数値としては '.0' を付加して解釈\n        numValue = parseFloat(value + '0');\n        // 表示用には末尾の小数点を保持\n        displayValue = value;\n      } \n      // 通常の数値または小数\n      else {\n        numValue = parseFloat(value);\n        displayValue = value;\n        \n        // 整数値の場合、内部的には小数点形式で保持\n        if (Number.isInteger(numValue)) {\n          // 表示用には原文ママ\n          // numValueは変更不要\n        }\n      }\n    } else {\n      // 通常フィールドの数値変換\n      numValue = parseInt(value, 10);\n      if (isNaN(numValue)) numValue = 0;\n    }\n    \n    // 月インデックス計算\n    const monthIndex = getMonthIndex(month);\n    \n    // 現在の月のセルを編集している場合は編集値を記録\n    if (colIndex === monthIndex && rowFieldMap[rowId.toString()]) {\n      const fieldName = rowFieldMap[rowId.toString()];\n      \n      // 現在の年度の編集値を更新\n      setEditedValuesByYear(prev => {\n        const yearEdits = prev[selectedYear] || {};\n        \n        if (isLegalRate) {\n          // 法定雇用率の場合は数値と表示値を別々に保存\n          return {\n            ...prev,\n            [selectedYear]: {\n              ...yearEdits,\n              [fieldName]: numValue,\n              [`${fieldName}_display`]: displayValue\n            }\n          };\n        } else {\n          // 通常フィールドの場合は数値のみ保存\n          return {\n            ...prev,\n            [selectedYear]: {\n              ...yearEdits,\n              [fieldName]: numValue\n            }\n          };\n        }\n      });\n    }\n    \n    // 現在の年度のローカルデータを更新\n    setDataByYear(prev => {\n      const currentData = prev[selectedYear] || JSON.parse(JSON.stringify(defaultDetailData));\n      const newData = {...currentData};\n      const rowIndex = newData.data.findIndex(row => row.id === rowId);\n      \n      if (rowIndex !== -1 && colIndex < 12) {\n        // 値を更新\n        const updatedValues = [...newData.data[rowIndex].values];\n        updatedValues[colIndex] = numValue;\n        \n        // 合計の再計算\n        updatedValues[12] = updatedValues.slice(0, 12).reduce((a, b) => a + b, 0);\n        \n        newData.data[rowIndex].values = updatedValues;\n        \n        // 修正したデータで自動計算実行\n        return {\n          ...prev,\n          [selectedYear]: recalculateData(newData)\n        };\n      }\n      \n      return prev;\n    });\n    \n    // 埋め込みモードの場合、親コンポーネントにも変更を通知\n    if (isEmbedded && onDetailCellChange) {\n      onDetailCellChange(rowId, colIndex, displayValue);\n    }\n  }, [isLegalRateField, getMonthIndex, month, selectedYear, recalculateData, isEmbedded, onDetailCellChange]);\n\n  // 存在チェックの実装\n  const checkIfReportExists = useCallback(async (year: number, month: number): Promise<boolean> => {\n    try {\n      // checkReportExists関数を使用\n      return await checkReportExists(year, month);\n    } catch (error) {\n      console.error('レポート存在チェックエラー:', error);\n      return false;\n    }\n  }, []);\n\n  const handleErrorSafely = useCallback((error: any): string => {\n    // ブラウザ拡張機能関連のエラーを無視\n    if (error instanceof Error && \n      (error.message.includes('Access to storage is not allowed') || \n        error.message.includes('Could not find identifiable element'))) {\n      console.log('無視可能なエラー:', error.message);\n      return 'ブラウザの設定により一部機能が制限されていますが、処理は継続されました。';\n    }\n    \n    // 通常のエラー処理\n    return handleApiError(error);\n  }, []);\n\n  // データの直接保存機能\n  const directSave = useCallback(async (data: any) => {\n    console.log('直接保存を実行します:', data);\n    \n    try {\n      // 法定雇用率値の処理を改善\n      if (data.legal_employment_rate !== undefined) {\n        // 整数値の場合は小数点表示を強制\n        if (Number.isInteger(data.legal_employment_rate)) {\n          data.legal_employment_rate = parseFloat(data.legal_employment_rate.toFixed(1));\n        }\n      }\n      \n      // 既存データの確認\n      const exists = await checkIfReportExists(data.fiscal_year, data.month);\n      \n      let response;\n      \n      try {\n        if (exists) {\n          // 更新処理\n          console.log('PUT リクエスト実行:', `${API_BASE_URL}/monthly-reports/${data.fiscal_year}/${data.month}`);\n          response = await axios.put(\n            `${API_BASE_URL}/monthly-reports/${data.fiscal_year}/${data.month}`, \n            data\n          );\n        } else {\n          // 新規作成処理\n          console.log('POST リクエスト実行:', `${API_BASE_URL}/monthly-reports`);\n          response = await axios.post(\n            `${API_BASE_URL}/monthly-reports`, \n            data\n          );\n        }\n        \n        console.log('API応答:', response.data);\n        return response.data;\n      } catch (error) {\n        if (error instanceof Error && error.message.includes('Access to storage is not allowed')) {\n          console.log('ストレージエラーが発生しましたが、処理を継続します');\n          // エラーにもかかわらず成功したとみなす\n          return { \n            success: true, \n            message: 'データが保存されました（ブラウザ警告あり）',\n            data: data\n          };\n        }\n        throw error;\n      }\n    } catch (error) {\n      console.error('API エラー:', error);\n      throw error;\n    }\n  }, [checkIfReportExists]);\n\n  const safeRefetchData = useCallback(async () => {\n    try {\n      if (onRefreshData) {\n        onRefreshData();\n      }\n    } catch (error) {\n      if (error instanceof Error && \n        (error.message.includes('Access to storage is not allowed') || \n          error.message.includes('Could not find identifiable element'))) {\n        console.log('データ再取得中にストレージエラーが発生しましたが、処理を継続します');\n        \n        // 手動でデータを更新\n        setDataByYear(prev => {\n          const currentData = prev[selectedYear] || JSON.parse(JSON.stringify(defaultDetailData));\n          const newData = {...currentData};\n          \n          // 現在の編集値を反映\n          const edits = editedValuesByYear[selectedYear] || {};\n          Object.entries(edits).forEach(([key, value]) => {\n            if (key.endsWith('_display')) return;\n            \n            const rowId = Object.entries(rowFieldMap).find(([, fieldName]) => fieldName === key)?.[0];\n            if (rowId) {\n              const rowIndex = newData.data.findIndex(row => row.id === Number(rowId));\n              if (rowIndex !== -1) {\n                const monthIndex = getMonthIndex(month);\n                if (monthIndex < newData.data[rowIndex].values.length) {\n                  newData.data[rowIndex].values[monthIndex] = Number(value);\n                }\n              }\n            }\n          });\n          \n          return {\n            ...prev,\n            [selectedYear]: recalculateData(newData)\n          };\n        });\n      } else {\n        console.error('データ再取得エラー:', error);\n        throw error;\n      }\n    }\n  }, [onRefreshData, selectedYear, editedValuesByYear, getMonthIndex, month, recalculateData]);\n\n  // DOMから直接値を取得するよう修正された保存ハンドラー\n  const handleSave = useCallback(async () => {\n    console.log('保存ボタンクリック'); \n    \n    setIsLoading(true);\n    setErrorMessage(null);\n    \n    try {\n      // 現在の月のインデックス（0ベース）\n      const currentMonthIndex = getMonthIndex(month);\n      \n      // DOMから直接値を取得\n      const tableRows = document.querySelectorAll('table tbody tr');\n      \n      const saveData = {\n        fiscal_year: selectedYear,\n        month: month,\n        employees_count: 0,\n        fulltime_count: 0,\n        parttime_count: 0,\n        level1_2_count: 0,\n        other_disability_count: 0,\n        level1_2_parttime_count: 0,\n        other_parttime_count: 0,\n        legal_employment_rate: 0\n      };\n      \n      // テーブルから値を抽出\n      tableRows.forEach(row => {\n        const rowId = row.getAttribute('data-row-id');\n        if (!rowId) return;\n        \n        const inputs = row.querySelectorAll('input');\n        if (inputs.length > currentMonthIndex) {\n          const value = Number(inputs[currentMonthIndex].value || 0);\n          \n          // 対応するフィールドを更新\n          if (rowId === '1') saveData.employees_count = value;\n          if (rowId === '2') saveData.fulltime_count = value;\n          if (rowId === '3') saveData.parttime_count = value;\n          if (rowId === '5') saveData.level1_2_count = value;\n          if (rowId === '6') saveData.other_disability_count = value;\n          if (rowId === '7') saveData.level1_2_parttime_count = value;\n          if (rowId === '8') saveData.other_parttime_count = value;\n          if (rowId === '11') saveData.legal_employment_rate = value;\n        }\n      });\n      \n      // 法定雇用率の特別処理\n      const yearEditedValues = editedValuesByYear[selectedYear] || {};\n      if ('legal_employment_rate_display' in yearEditedValues) {\n        const displayValue = yearEditedValues.legal_employment_rate_display;\n        if (typeof displayValue === 'string') {\n          if (displayValue === '.') {\n            saveData.legal_employment_rate = 0.0;\n          } else if (displayValue === '0.') {\n            saveData.legal_employment_rate = 0.0;\n          } else if (displayValue.endsWith('.')) {\n            // '2.' → '2.0' に変換\n            saveData.legal_employment_rate = parseFloat(displayValue + '0');\n          } else if (displayValue.includes('.')) {\n            // すでに小数点がある場合はそのまま使用\n            saveData.legal_employment_rate = parseFloat(displayValue);\n          } else {\n            // 整数値に対して小数点表示を強制 (例: \"2\" → 2.0)\n            saveData.legal_employment_rate = parseFloat(parseFloat(displayValue).toFixed(1));\n          }\n        }\n      } else {\n        // 法定雇用率が編集されていない場合でも、整数値には小数点表示を強制\n        if (Number.isInteger(saveData.legal_employment_rate)) {\n          saveData.legal_employment_rate = parseFloat(saveData.legal_employment_rate.toFixed(1));\n        }\n      }\n      \n      console.log('実際の保存データ (DOM取得):', saveData);\n      \n      // 保存処理\n      const result = await directSave(saveData);\n      \n      console.log('保存成功:', result);\n      \n      if (result && result.success) {\n        // 編集モードをオフに\n        setIsEditing(false);\n        setIsCreating(false);\n        \n        // 現在の年度の編集値をクリア\n        setEditedValuesByYear(prev => ({\n          ...prev,\n          [selectedYear]: {}\n        }));\n        \n        // 成功メッセージを表示\n        setSuccessMessage(`データを${isCreating ? '作成' : '保存'}しました`);\n        setTimeout(() => setSuccessMessage(null), 3000);\n        \n        // 保存したデータを保持\n        const currentData = dataByYear[selectedYear] || JSON.parse(JSON.stringify(defaultDetailData));\n        \n        // 保存済みデータに追加\n        setSavedData(prev => ({\n          ...prev,\n          [selectedYear]: JSON.parse(JSON.stringify(currentData))\n        }));\n        \n        // 親コンポーネントに通知してデータを再取得\n        if (isEmbedded && onRefreshData) {\n          // 時間をずらして親コンポーネントの再取得処理を実行\n          setTimeout(() => {\n            try {\n              safeRefetchData();\n            } catch (e) {\n              console.error('データ再取得中にエラーが発生しました:', e);\n            }\n          }, 500);\n        }\n      }\n    } catch (error) {\n      console.error('月次詳細データ保存エラー:', error);\n      setErrorMessage(handleErrorSafely(error));\n    } finally {\n      setIsLoading(false);\n    }\n  }, [directSave, getMonthIndex, handleErrorSafely, isCreating, isEmbedded, month, onRefreshData, safeRefetchData, selectedYear, dataByYear, editedValuesByYear]);\n\n  // スタイル定義 - メモ化して再レンダリング時の再作成を防止\n  const cellStyle = useMemo(() => ({\n    width: '100%',\n    height: '22px',\n    border: 'none',\n    textAlign: 'center' as const,\n    backgroundColor: 'transparent',\n    fontSize: '12px',\n    padding: '0'\n  }), []);\n\n  const readonlyCellStyle = useMemo(() => ({\n    ...cellStyle,\n    backgroundColor: '#f8f9fa'\n  }), [cellStyle]);\n\n  const legalRateCellStyle = useMemo(() => ({\n    ...cellStyle,\n    backgroundColor: '#e5f7ff', // 薄い青色の背景で法定雇用率フィールドを視覚的に区別\n    fontWeight: 'bold' as const\n  }), [cellStyle]);\n\n  const currentStatus = isEmbedded && summaryData?.status ? summaryData.status : '未確定';\n  const isConfirmed = currentStatus === '確定済';\n\n  // デバッグ情報 - 開発環境でのみ表示\n  const DebugInfo = process.env.NODE_ENV === 'development' ? (\n    <div style={{\n      position: 'fixed',\n      bottom: 10,\n      right: 10,\n      background: 'rgba(0,0,0,0.7)',\n      color: 'white',\n      padding: '5px 10px',\n      borderRadius: '4px',\n      fontSize: '12px',\n      zIndex: 9999\n    }}>\n      編集モード: {isEditing ? 'ON' : 'OFF'} | \n      新規作成モード: {isCreating ? 'ON' : 'OFF'} | \n      年度: {selectedYear} | \n      月: {month} | \n      月インデックス: {getMonthIndex(month)}\n    </div>\n  ) : null;\n\n  // データがない場合の表示を改善\n  if (!monthlyDetailData && !dataByYear[selectedYear] && !savedData[selectedYear] && !isCreating && isEmbedded) {\n    return (\n      <div className=\"monthly-report-detail\" style={{ padding: isEmbedded ? '0' : '20px' }}>\n        {DebugInfo}\n        <div style={{ marginBottom: '1rem', display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n          <h3 style={{ margin: 0 }}>月次詳細</h3>\n          \n          <div style={{ display: 'flex', gap: '15px', alignItems: 'center' }}>\n            <div>\n              <select\n                id=\"fiscal-year-select\"\n                value={selectedYear}\n                onChange={handleYearSelectChange}\n                style={{ padding: '4px 8px', borderRadius: '4px', border: '1px solid #ddd' }}\n                disabled={isLoading}\n              >\n                {Array.from({ length: 11 }, (_, i) => new Date().getFullYear() - 5 + i).map(year => (\n                  <option key={year} value={year}>{year}年度</option>\n                ))}\n              </select>\n            </div>\n            \n            <button \n              type=\"button\"\n              onClick={toggleCreateMode}\n              style={{ \n                padding: '8px 16px',\n                backgroundColor: '#28a745',\n                color: 'white',\n                border: 'none',\n                borderRadius: '4px',\n                cursor: 'pointer'\n              }}\n              disabled={isLoading || isConfirmed}\n            >\n              新規作成\n            </button>\n            \n            <button\n              onClick={handleOpenImportModal}\n              style={{\n                backgroundColor: '#10b981', // 緑色に変更\n                color: 'white',\n                border: 'none',\n                borderRadius: '4px',\n                padding: '8px 16px',\n                cursor: 'pointer',\n                display: 'flex',\n                alignItems: 'center',\n                gap: '8px',\n                fontSize: '0.9rem'\n              }}\n              disabled={isLoading || isConfirmed}\n            >\n              <span style={{ fontSize: '1.2rem' }}>↑</span>\n              CSVインポート\n            </button>\n          </div>\n        </div>\n        \n        <div style={{ \n          padding: '40px 20px', \n          textAlign: 'center', \n          backgroundColor: '#f8f9fa',\n          borderRadius: '4px',\n          marginTop: '20px'\n          }}>\n          <p>{selectedYear}年度の月次詳細データがありません。新規作成ボタンからデータを作成するか、CSVインポート機能を使用してください。</p>\n        </div>\n        \n        {/* CSVインポートモーダル */}\n        <CSVImportModal\n          isOpen={isImportModalOpen}\n          onClose={handleCloseImportModal}\n          onImportSuccess={handleImportSuccess}\n          fiscalYear={selectedYear}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"monthly-report-detail\" style={{ padding: isEmbedded ? '0' : '20px' }}>\n      {DebugInfo}\n      \n      {!isEmbedded && (\n        <>\n          <button \n            onClick={handleBack}\n            style={{\n              padding: '8px 16px',\n              backgroundColor: '#6c757d',\n              color: 'white',\n              border: 'none',\n              borderRadius: '4px',\n              cursor: 'pointer',\n              marginBottom: '15px'\n            }}\n          >\n            ← 月次報告一覧に戻る\n          </button>\n          \n          <h1 style={{ fontSize: '1.5rem', marginBottom: '1rem' }}>月次報告詳細</h1>\n          \n          <div style={{ \n            backgroundColor: '#f0f8ff', \n            padding: '15px', \n            borderRadius: '4px', \n            marginBottom: '20px' \n          }}>\n            <h2 style={{ fontSize: '1.2rem', marginTop: 0, marginBottom: '10px' }}>{displayFiscalYear}集計サマリー</h2>\n            <div style={{ display: 'flex', flexWrap: 'wrap', gap: '15px' }}>\n              <span>常用労働者数: 525名</span>\n              <span>|</span>\n              <span>障害者数: 5名</span>\n              <span>|</span>\n              <span>雇用カウント: 5</span>\n              <span>|</span>\n              <span>実雇用率: 2.43%</span>\n              <span>|</span>\n              <span>法定雇用率: 2.5%</span>\n            </div>\n          </div>\n        </>\n      )}\n\n      {successMessage && (\n        <div style={{ \n          backgroundColor: '#d4edda', \n          color: '#155724', \n          padding: '10px', \n          borderRadius: '4px', \n          marginBottom: '15px' \n        }}>\n          {successMessage}\n        </div>\n      )}\n\n      {errorMessage && (\n        <div style={{ \n          backgroundColor: '#f8d7da', \n          color: '#721c24', \n          padding: '10px', \n          borderRadius: '4px', \n          marginBottom: '15px' \n        }}>\n          {errorMessage}\n        </div>\n      )}\n        \n      {isLoading && (\n        <div style={{ \n          backgroundColor: '#e9ecef', \n          padding: '10px', \n          borderRadius: '4px', \n          marginBottom: '15px',\n          textAlign: 'center'\n        }}>\n          データを処理中...\n        </div>\n      )}\n\n      <div style={{ marginBottom: '15px', display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n        <div style={{ display: 'flex', gap: '15px', alignItems: 'center' }}>\n          <h3 style={{ margin: '0' }}>月次詳細</h3>\n          \n          <div style={getYearMonthControlStyle()}>\n            <select\n              id=\"fiscal-year-select\"\n              value={selectedYear}\n              onChange={handleYearSelectChange}\n              style={{ padding: '4px 8px', borderRadius: '4px', border: '1px solid #ddd' }}\n              disabled={isLoading || isEditing}\n            >\n              {Array.from({ length: 11 }, (_, i) => new Date().getFullYear() - 5 + i).map(year => (\n                <option key={year} value={year}>{year}年度</option>\n              ))}\n            </select>\n          </div>\n        </div>\n        \n        <div style={{ display: 'flex', gap: '10px' }}>\n          {!isEditing && (\n            <button \n              type=\"button\"\n              onClick={toggleEditMode}\n              style={{\n                padding: '8px 16px',\n                backgroundColor: '#6c757d',\n                color: 'white',\n                border: 'none',\n                borderRadius: '4px',\n                cursor: 'pointer'\n              }}\n              disabled={isLoading || isConfirmed}\n            >\n              編集\n            </button>\n          )}\n          \n          {!isEditing && (\n            <button\n              onClick={handleOpenImportModal}\n              style={{\n                backgroundColor: '#10b981', // 緑色に変更\n                color: 'white',\n                border: 'none',\n                borderRadius: '4px',\n                padding: '8px 16px',\n                cursor: 'pointer',\n                display: 'flex',\n                alignItems: 'center',\n                gap: '8px',\n                fontSize: '0.9rem'\n              }}\n              disabled={isLoading || isConfirmed}\n            >\n              <span style={{ fontSize: '1.2rem' }}>↑</span>\n              CSVインポート\n            </button>\n          )}\n          \n          {isEditing && (\n            <button \n              type=\"button\"\n              onClick={toggleEditMode}\n              style={{\n                padding: '8px 16px',\n                backgroundColor: '#f8f9fa',\n                color: '#333',\n                border: '1px solid #ddd',\n                borderRadius: '4px',\n                cursor: 'pointer'\n              }}\n              disabled={isLoading}\n            >\n              キャンセル\n            </button>\n          )}\n          \n          {isEditing && (\n            <button \n              type=\"button\"\n              onClick={handleSave}\n              style={{\n                padding: '8px 16px',\n                backgroundColor: '#3a66d4',\n                color: 'white',\n                border: 'none',\n                borderRadius: '4px',\n                cursor: 'pointer'\n              }}\n              disabled={isLoading}\n            >\n              {isLoading ? '保存中...' : '保存'}\n            </button>\n          )}\n        </div>\n      </div>\n      \n      {localData.data.length > 0 ? (\n        <div style={{ \n          backgroundColor: 'white', \n          border: '1px solid #dee2e6', \n          borderRadius: '4px',\n          overflow: 'auto'\n        }}>\n          <table style={{ \n            width: '100%', \n            borderCollapse: 'collapse',\n            fontSize: '12px'\n          }}>\n            <thead>\n              <tr style={{ height: '28px', backgroundColor: '#f8f9fa', borderBottom: '2px solid #dee2e6' }}>\n                <th style={{ \n                  textAlign: 'left', \n                  padding: '4px 6px', \n                  position: 'sticky', \n                  left: 0, \n                  backgroundColor: '#f8f9fa', \n                  zIndex: 1,\n                  width: '180px'\n                }}></th>\n                {localData.months.map((month, index) => (\n                  <th key={`month-${index}`} style={{ padding: '2px', textAlign: 'center', fontWeight: 'normal' }}>\n                    {month}\n                  </th>\n                ))}\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td colSpan={14} style={{ \n                  textAlign: 'left', \n                  padding: '4px 6px', \n                  fontWeight: 'bold',\n                  backgroundColor: '#f8f9fa',\n                  borderTop: '1px solid #dee2e6',\n                  borderBottom: '1px solid #dee2e6',\n                  fontSize: '12px'\n                }}>\n                  従業員数\n                </td>\n              </tr>\n              \n              {localData.data.map((row) => {\n                const needsSpacerBefore = row.id === 5 || row.id === 10;\n                const isHeaderRow = row.id === 5;\n                \n                return (\n                  <React.Fragment key={`row-${row.id}`}>\n                    {needsSpacerBefore && (\n                      <tr className=\"spacer-row\">\n                        <td colSpan={14} style={{ padding: '3px', backgroundColor: '#f8f9fa' }}></td>\n                      </tr>\n                    )}\n                    {isHeaderRow && (\n                      <tr className=\"header-row\">\n                        <th colSpan={14} style={{ \n                          textAlign: 'left', \n                          padding: '4px 6px',\n                          fontWeight: 'bold',\n                          backgroundColor: '#f8f9fa',\n                          borderTop: '1px solid #dee2e6',\n                          borderBottom: '1px solid #dee2e6',\n                          fontSize: '12px'\n                        }}>\n                          障がい者\n                        </th>\n                      </tr>\n                    )}\n                    {row.id === 10 && (\n                      <tr className=\"header-row\">\n                        <th colSpan={14} style={{ \n                          textAlign: 'left', \n                          padding: '4px 6px',\n                          fontWeight: 'bold',\n                          backgroundColor: '#f8f9fa',\n                          borderTop: '1px solid #dee2e6',\n                          borderBottom: '1px solid #dee2e6',\n                          fontSize: '12px'\n                        }}>\n                          雇用率\n                        </th>\n                      </tr>\n                    )}\n                    <tr \n                      style={{ backgroundColor: 'white', height: '22px' }}\n                      data-row-id={row.id}\n                    >\n                      <td style={{ \n                        textAlign: 'left', \n                        padding: '0 6px', \n                        position: 'sticky', \n                        left: 0, \n                        backgroundColor: 'white', \n                        zIndex: 1,\n                        borderRight: '1px solid #f0f0f0',\n                        whiteSpace: 'nowrap',\n                        fontSize: '12px'\n                      }}>\n                        {row.item}\n                        {row.suffix && <span style={{ fontSize: '10px', color: '#666' }}> ({row.suffix})</span>}\n                      </td>\n                      {row.values.map((value, colIndex) => {\n                        const isCalcField = isCalculatedField(row.id);\n                        const isNegativeValue = row.isNegative && value < 0;\n                        const isActive = activeCell.row === row.id && activeCell.col === colIndex;\n                        const isEditable = isEditing && !isCalcField && colIndex < 12;\n                        const isActiveEditing = editingDetailRow === row.id && editingDetailCol === colIndex;\n                        const isLegal = isLegalRateField(row.id);\n                        \n                        // 法定雇用率の特別表示 - 編集モード時の表示ロジックを修正\n                        let displayValue = value.toString();\n                        \n                        // 法定雇用率フィールドで現在編集中の月を表示する場合\n                        if (isLegal && colIndex === getMonthIndex(month) && \n                            editedValuesByYear[selectedYear]?.legal_employment_rate_display) {\n                          displayValue = editedValuesByYear[selectedYear].legal_employment_rate_display;\n                        }\n                        // 小数点表示の特別処理\n                        else if (isLegal) {\n                          // 小数点以下を常に表示\n                          if (Number.isInteger(value)) {\n                            // 整数値に小数点を追加 (例: 2 → \"2.0\")\n                            displayValue = value.toFixed(1);\n                          } else {\n                            // すでに小数点がある場合はそのまま\n                            displayValue = Number(value).toFixed(1);\n                          }\n                        }\n                        // 実雇用率のフォーマット\n                        else if (row.id === 10) {\n                          // 小数点第1位まで表示\n                          displayValue = Number(value).toFixed(1);\n                        }\n                        \n                        return (\n                          <td \n                            key={`value-${row.id}-${colIndex}`} \n                            style={{ \n                              padding: '0', \n                              textAlign: 'center',\n                              backgroundColor: isActive ? '#e9f2ff' : 'white'\n                            }}\n                            onClick={() => isEditable ? handleCellClick(row.id, colIndex) : null}\n                          >\n                            {(isActiveEditing && isEditing && !isCalcField) ? (\n                              <input\n                                ref={(el: HTMLInputElement | null) => {\n                                  setInputRef(el, `input-${row.id}-${colIndex}`);\n                                }}\n                                type=\"text\"\n                                style={isLegal ? legalRateCellStyle : cellStyle}\n                                value={displayValue}\n                                onChange={(e) => handleLocalCellChange(row.id, colIndex, e.target.value)}\n                                onClick={(e) => e.stopPropagation()}\n                                onKeyDown={(e) => handleKeyDown(e, row.id, colIndex)}\n                                onBlur={handleDetailCellSave}\n                                onFocus={() => setActiveCell({row: row.id, col: colIndex})}\n                              />\n                            ) : (\n                              <input\n                                type=\"text\"\n                                style={{\n                                  ...(isCalcField \n                                    ? readonlyCellStyle \n                                    : isLegal ? legalRateCellStyle : cellStyle),\n                                  color: isNegativeValue ? 'red' : 'inherit'\n                                }}\n                                value={displayValue}\n                                readOnly\n                              />\n                            )}\n                          </td>\n                        );\n                      })}\n                    </tr>\n                  </React.Fragment>\n                );\n              })}\n            </tbody>\n          </table>\n        </div>\n      ) : (\n        <div style={{ \n          padding: '30px', \n          textAlign: 'center', \n          backgroundColor: '#f8f9fa',\n          borderRadius: '4px',\n          border: '1px solid #dee2e6',\n          marginBottom: '20px'\n        }}>\n          <p style={{ fontSize: '16px', color: '#666' }}>月次詳細データがありません。</p>\n          {!isEmbedded && (\n            <button\n              onClick={handleBack}\n              style={{\n                padding: '8px 16px',\n                backgroundColor: '#6c757d',\n                color: 'white',\n                border: 'none',\n                borderRadius: '4px',\n                marginTop: '15px',\n                cursor: 'pointer'\n              }}\n            >\n              戻る\n            </button>\n          )}\n        </div>\n      )}\n      \n      {/* CSVインポートモーダル */}\n      <CSVImportModal\n        isOpen={isImportModalOpen}\n        onClose={handleCloseImportModal}\n        onImportSuccess={handleImportSuccess}\n        fiscalYear={selectedYear}\n      />\n    </div>\n  );\n};\n\nexport default MonthlyReportDetail;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}