{"ast":null,"code":"var _jsxFileName = \"/Users/gotouhiroaki/Programming/DAN_work/disability-employment-system/frontend/src/components/PaymentReport/HistoryTab.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { paymentReportApi } from '../../api/paymentReportApi';\n\n// PaymentReport型を拡張\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// インポートコンポーネント\nconst ImportPaymentHistory = ({\n  onImportComplete,\n  onClose\n}) => {\n  _s();\n  const [importing, setImporting] = useState(false);\n  const [importError, setImportError] = useState(null);\n\n  // テンプレートダウンロード処理\n  const handleDownloadTemplate = async () => {\n    try {\n      // CSVテンプレートの内容（BOM付きUTF-8でエンコード）\n      const BOM = new Uint8Array([0xEF, 0xBB, 0xBF]);\n      const templateContent = `年度,種別,金額,申告日,支払/受取日,状態\n2024年度,調整金,533412,2025/05/14,2025/07/16,受取済\n2023年度,納付金,-300000,2024/05/15,2024/06/30,支払済\n,,,,,`;\n\n      // CSVファイルを作成（BOMを追加してUTF-8エンコーディングを明示）\n      const blob = new Blob([BOM, templateContent], {\n        type: 'text/csv;charset=utf-8;'\n      });\n      const url = URL.createObjectURL(blob);\n      const link = document.createElement('a');\n      link.setAttribute('href', url);\n      link.setAttribute('download', 'noufukin_shinkoku_template.csv');\n      link.style.visibility = 'hidden';\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n      URL.revokeObjectURL(url);\n      console.log('納付金申告テンプレートをダウンロードしました');\n    } catch (error) {\n      console.error('テンプレートダウンロードエラー:', error);\n      alert('テンプレートのダウンロード中にエラーが発生しました');\n    }\n  };\n\n  // CSVファイル選択処理\n  const handleFileSelect = () => {\n    const fileInput = document.createElement('input');\n    fileInput.type = 'file';\n    fileInput.accept = '.csv';\n    fileInput.onchange = async e => {\n      var _files;\n      const file = (_files = e.target.files) === null || _files === void 0 ? void 0 : _files[0];\n      if (file) {\n        try {\n          setImporting(true);\n          setImportError(null);\n\n          // FileReader でファイルを読み込む\n          const reader = new FileReader();\n          reader.onload = async event => {\n            if (event.target && event.target.result) {\n              const csvContent = event.target.result;\n\n              // CSVをパースしてデータに変換\n              const importedData = parseCSV(csvContent);\n\n              // APIを呼び出してデータを保存\n              try {\n                // APIでデータを保存（本実装時はこちらを使用）\n                for (const record of importedData) {\n                  await saveImportedRecord(record);\n                }\n                console.log('CSVインポート完了:', importedData);\n\n                // インポート完了通知\n                if (onImportComplete) {\n                  onImportComplete(importedData);\n                }\n\n                // モーダルを閉じる\n                if (onClose) {\n                  onClose();\n                }\n                setImporting(false);\n                alert('CSVインポートが完了しました');\n              } catch (saveError) {\n                console.error('データ保存エラー:', saveError);\n                setImportError('データの保存中にエラーが発生しました');\n                setImporting(false);\n              }\n            }\n          };\n          reader.onerror = () => {\n            setImportError('ファイルの読み込み中にエラーが発生しました');\n            setImporting(false);\n          };\n          reader.readAsText(file, 'UTF-8');\n        } catch (error) {\n          console.error('CSVインポートエラー:', error);\n          setImportError('CSVインポート中にエラーが発生しました');\n          setImporting(false);\n        }\n      }\n    };\n    fileInput.click();\n  };\n\n  // CSVをパースする関数\n  const parseCSV = csvContent => {\n    // BOMを除去する\n    const content = csvContent.replace(/^\\uFEFF/, '');\n\n    // 行に分割\n    const rows = content.split(/\\r?\\n/).filter(row => row.trim() !== '');\n\n    // ヘッダー行を取得\n    const headers = rows[0].split(',');\n\n    // データ行をパース\n    const data = rows.slice(1).map(row => {\n      const values = row.split(',');\n      const record = {};\n      headers.forEach((header, index) => {\n        // ヘッダーに対応する値を設定\n        let value = values[index] ? values[index].trim() : '';\n\n        // データ型の変換\n        if (header === '金額') {\n          // 数値に変換\n          value = value ? parseInt(value, 10) : 0;\n        }\n        record[header] = value;\n      });\n      return record;\n    });\n    return data;\n  };\n\n  // インポートしたレコードを保存する関数\n  const saveImportedRecord = async record => {\n    // 年度から数値部分を抽出\n    const yearMatch = record['年度'].match(/(\\d{4})/);\n    const year = yearMatch ? parseInt(yearMatch[1], 10) : new Date().getFullYear();\n\n    // 金額の正負を確認（納付金はマイナス、調整金はプラス）\n    const isPayment = record['種別'] === '納付金';\n    const amount = Math.abs(record['金額']);\n\n    // PaymentReport APIに送信するデータを作成\n    const paymentData = {\n      year,\n      fiscal_year: year,\n      payment_amount: isPayment ? -amount : amount,\n      status: record['状態'] === '作成中' ? '作成中' : '確定済み',\n      type: record['種別'],\n      application_date: record['申告日'] || '',\n      payment_date: record['支払/受取日'] || '',\n      notes: `${year}年度の${record['種別']}（CSVインポート）`\n    };\n\n    // APIを呼び出して保存\n    await paymentReportApi.savePaymentReport(year, paymentData);\n  };\n\n  // スタイル定義\n  const importContainerStyle = {\n    position: 'fixed',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    backgroundColor: 'white',\n    padding: '20px',\n    borderRadius: '4px',\n    boxShadow: '0 2px 10px rgba(0, 0, 0, 0.2)',\n    width: '80%',\n    maxWidth: '500px',\n    zIndex: 1000\n  };\n  const importTitleStyle = {\n    fontSize: '18px',\n    marginBottom: '20px',\n    textAlign: 'center'\n  };\n  const importButtonsStyle = {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: '10px'\n  };\n  const buttonBaseStyle = {\n    padding: '10px',\n    border: 'none',\n    borderRadius: '4px',\n    cursor: 'pointer',\n    fontSize: '14px'\n  };\n  const downloadButtonStyle = {\n    ...buttonBaseStyle,\n    backgroundColor: '#4A60DD',\n    color: 'white'\n  };\n  const selectButtonStyle = {\n    ...buttonBaseStyle,\n    backgroundColor: '#f1f1f1',\n    border: '1px solid #ddd',\n    color: '#333333' // フォントカラーを濃い色に変更\n  };\n  const closeButtonStyle = {\n    ...buttonBaseStyle,\n    backgroundColor: '#6c757d',\n    color: 'white',\n    marginTop: '10px',\n    alignSelf: 'flex-end',\n    width: 'auto',\n    padding: '8px 15px'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: importContainerStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      style: importTitleStyle,\n      children: \"\\u7D0D\\u4ED8\\u91D1\\u7533\\u544A\\u306E\\u30A4\\u30F3\\u30DD\\u30FC\\u30C8\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this), importError && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: '#f8d7da',\n        color: '#721c24',\n        padding: '8px 12px',\n        borderRadius: '4px',\n        marginBottom: '1rem'\n      },\n      children: importError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: importButtonsStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDownloadTemplate,\n        style: downloadButtonStyle,\n        disabled: importing,\n        children: \"\\u30A4\\u30F3\\u30DD\\u30FC\\u30C8\\u30C6\\u30F3\\u30D7\\u30EC\\u30FC\\u30C8\\u3092\\u30C0\\u30A6\\u30F3\\u30ED\\u30FC\\u30C9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleFileSelect,\n        style: selectButtonStyle,\n        disabled: importing,\n        children: importing ? 'インポート中...' : 'CSVファイルを選択'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this), onClose && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClose,\n        style: closeButtonStyle,\n        disabled: importing,\n        children: \"\\u9589\\u3058\\u308B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 238,\n    columnNumber: 5\n  }, this);\n};\n_s(ImportPaymentHistory, \"OrQIJ6YjqzSSonlKzZ+btqd6ROw=\");\n_c = ImportPaymentHistory; // 表示用の履歴データ型定義\nconst HistoryTab = ({\n  fiscalYear\n}) => {\n  _s2();\n  // API連携用の状態\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // 履歴データの状態\n  const [historyData, setHistoryData] = useState([{\n    id: 1,\n    year: '2024年度',\n    type: '調整金',\n    amount: 533412,\n    applicationDate: '2025/05/14',\n    paymentDate: '2025/07/16',\n    status: '受取済'\n  }, {\n    id: 2,\n    year: '2023年度',\n    type: '調整金',\n    amount: 487200,\n    applicationDate: '2024/05/15',\n    paymentDate: '2024/07/22',\n    status: '受取済'\n  }, {\n    id: 3,\n    year: '2022年度',\n    type: '納付金',\n    amount: -240000,\n    applicationDate: '2023/05/12',\n    paymentDate: '2023/06/30',\n    status: '支払済'\n  }, {\n    id: 4,\n    year: '2021年度',\n    type: '納付金',\n    amount: -600000,\n    applicationDate: '2022/05/16',\n    paymentDate: '2022/07/05',\n    status: '支払済'\n  }, {\n    id: 5,\n    year: '2020年度',\n    type: '納付金',\n    amount: -840000,\n    applicationDate: '2021/05/14',\n    paymentDate: '2021/07/12',\n    status: '支払済'\n  }]);\n\n  // 日付フォーマット用のヘルパー関数\n  const formatDate = (dateString, addDays = 0) => {\n    if (!dateString) return '-';\n    try {\n      const date = new Date(dateString);\n      if (addDays) {\n        date.setDate(date.getDate() + addDays);\n      }\n      return `${date.getFullYear()}/${(date.getMonth() + 1).toString().padStart(2, '0')}/${date.getDate().toString().padStart(2, '0')}`;\n    } catch (e) {\n      return '-';\n    }\n  };\n\n  // APIからデータを取得する関数を独立させる\n  const fetchPaymentReports = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      // APIから納付金レポート履歴を取得\n      const reports = await paymentReportApi.getAllPaymentReports();\n\n      // APIのレスポンスを表示用のフォーマットに変換\n      const formattedData = reports.map(report => {\n        var _report$payment_amoun, _report$payment_amoun2, _report$payment_amoun3;\n        // 拡張された型にキャスト\n        const extReport = report;\n\n        // 種別を判定（納付金か調整金か）\n        const type = extReport.type || (((_report$payment_amoun = report.payment_amount) !== null && _report$payment_amoun !== void 0 ? _report$payment_amoun : 0) < 0 ? '納付金' : '調整金');\n\n        // 支払状態を判定\n        const status = report.status === '作成中' ? '作成中' : ((_report$payment_amoun2 = report.payment_amount) !== null && _report$payment_amoun2 !== void 0 ? _report$payment_amoun2 : 0) < 0 ? '支払済' : '受取済';\n\n        // 日付をフォーマット\n        const applicationDate = extReport.application_date || formatDate(report.updated_at);\n        const paymentDate = extReport.payment_date || (status !== '作成中' ? formatDate(report.updated_at, 45) : '-');\n\n        // 金額のデフォルト値を設定\n        const amount = (_report$payment_amoun3 = report.payment_amount) !== null && _report$payment_amoun3 !== void 0 ? _report$payment_amoun3 : 0;\n        return {\n          id: report.id || 0,\n          year: `${extReport.fiscal_year || report.year || new Date().getFullYear()}年度`,\n          type,\n          amount: amount,\n          applicationDate,\n          paymentDate,\n          status\n        };\n      });\n\n      // データが取得できた場合、それを使用\n      if (formattedData.length > 0) {\n        setHistoryData(formattedData);\n      }\n      setLoading(false);\n    } catch (err) {\n      setLoading(false);\n      setError(err instanceof Error ? err.message : '納付金レポート履歴の取得に失敗しました');\n      console.error('納付金レポート履歴の取得エラー:', err);\n    }\n  };\n\n  // APIからデータを取得\n  useEffect(() => {\n    fetchPaymentReports();\n  }, []);\n\n  // 状態管理\n  const [showImport, setShowImport] = useState(false);\n\n  // インポート完了ハンドラ\n  const handleImportComplete = importedData => {\n    console.log('インポート完了', importedData);\n    // データの再読み込み\n    fetchPaymentReports();\n  };\n\n  // インポートモーダルを閉じる\n  const handleCloseImport = () => {\n    setShowImport(false);\n  };\n\n  // 金額の表示フォーマット\n  const formatNumber = num => {\n    return num.toFixed(0).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  };\n\n  // 調整金・納付金の表示色\n  const getPaymentColor = amount => {\n    return amount >= 0 ? '#28a745' : '#dc3545';\n  };\n\n  // ステータスバッジのスタイル\n  const getStatusStyle = status => {\n    const baseStyle = {\n      display: 'inline-block',\n      padding: '4px 8px',\n      borderRadius: '9999px',\n      fontSize: '12px'\n    };\n    if (status === '受取済') {\n      return {\n        ...baseStyle,\n        backgroundColor: '#d1fae5',\n        color: '#065f46'\n      };\n    } else if (status === '支払済') {\n      return {\n        ...baseStyle,\n        backgroundColor: '#dbeafe',\n        color: '#1e40af'\n      };\n    } else {\n      return {\n        ...baseStyle,\n        backgroundColor: '#f3f4f6',\n        color: '#374151'\n      };\n    }\n  };\n\n  // スタイル定義\n  const containerStyle = {\n    position: 'relative',\n    padding: '20px'\n  };\n  const headerStyle = {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: '20px'\n  };\n  const titleStyle = {\n    fontSize: '18px',\n    fontWeight: 600\n  };\n  const importBtnStyle = {\n    backgroundColor: '#4A60DD',\n    color: 'white',\n    padding: '8px 15px',\n    border: 'none',\n    borderRadius: '4px',\n    cursor: 'pointer'\n  };\n  const tableContainerStyle = {\n    overflowX: 'auto'\n  };\n  const tableStyle = {\n    width: '100%',\n    borderCollapse: 'collapse'\n  };\n  const thStyle = {\n    padding: '12px',\n    border: '1px solid #e2e8f0',\n    textAlign: 'left',\n    backgroundColor: '#f8fafc',\n    fontWeight: 600\n  };\n  const tdStyle = {\n    padding: '12px',\n    border: '1px solid #e2e8f0',\n    textAlign: 'left'\n  };\n  const amountCellStyle = {\n    ...tdStyle,\n    textAlign: 'right'\n  };\n  const overlayStyle = {\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    width: '100%',\n    height: '100%',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    zIndex: 50\n  };\n  const loadingStyle = {\n    textAlign: 'center',\n    padding: '20px',\n    color: '#4A60DD'\n  };\n  const errorStyle = {\n    backgroundColor: '#fee2e2',\n    color: '#b91c1c',\n    padding: '10px',\n    borderRadius: '4px',\n    marginBottom: '15px'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: containerStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: headerStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: titleStyle,\n        children: \"\\u969C\\u5BB3\\u8005\\u96C7\\u7528\\u7D0D\\u4ED8\\u91D1\\u30FB\\u8ABF\\u6574\\u91D1\\u7533\\u544A\\u5C65\\u6B74\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 568,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowImport(true),\n        style: importBtnStyle,\n        children: \"CSV\\u30A4\\u30F3\\u30DD\\u30FC\\u30C8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 569,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 567,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: errorStyle,\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 579,\n      columnNumber: 9\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: loadingStyle,\n      children: \"\\u30C7\\u30FC\\u30BF\\u3092\\u8AAD\\u307F\\u8FBC\\u307F\\u4E2D...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 586,\n      columnNumber: 9\n    }, this) :\n    /*#__PURE__*/\n    /* 履歴テーブル */\n    _jsxDEV(\"div\", {\n      style: tableContainerStyle,\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        style: tableStyle,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              style: thStyle,\n              children: \"\\u5E74\\u5EA6\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 595,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: thStyle,\n              children: \"\\u7A2E\\u5225\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 596,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: thStyle,\n              children: \"\\u91D1\\u984D\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 597,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: thStyle,\n              children: \"\\u7533\\u544A\\u65E5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 598,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: thStyle,\n              children: \"\\u652F\\u6255/\\u53D7\\u53D6\\u65E5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 599,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: thStyle,\n              children: \"\\u72B6\\u614B\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 600,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 594,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 593,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: historyData.length === 0 ? /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: 6,\n              style: {\n                ...tdStyle,\n                textAlign: 'center'\n              },\n              children: \"\\u7533\\u544A\\u5C65\\u6B74\\u304C\\u3042\\u308A\\u307E\\u305B\\u3093\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 606,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 605,\n            columnNumber: 17\n          }, this) : historyData.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              style: tdStyle,\n              children: item.year\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 613,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: tdStyle,\n              children: item.type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 614,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                ...amountCellStyle,\n                color: getPaymentColor(item.amount)\n              },\n              children: [item.amount < 0 ? '-' : '', formatNumber(Math.abs(item.amount)), \"\\u5186\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 615,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: tdStyle,\n              children: item.applicationDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 618,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: tdStyle,\n              children: item.paymentDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 619,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: tdStyle,\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                style: getStatusStyle(item.status),\n                children: item.status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 621,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 620,\n              columnNumber: 21\n            }, this)]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 612,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 603,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 592,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 591,\n      columnNumber: 9\n    }, this), showImport && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: overlayStyle,\n      children: /*#__PURE__*/_jsxDEV(ImportPaymentHistory, {\n        onImportComplete: handleImportComplete,\n        onClose: handleCloseImport\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 636,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 635,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 565,\n    columnNumber: 5\n  }, this);\n};\n_s2(HistoryTab, \"AJvvJrLyZTBTmv8vx30i2AJ7LPc=\");\n_c2 = HistoryTab;\nexport default HistoryTab;\nvar _c, _c2;\n$RefreshReg$(_c, \"ImportPaymentHistory\");\n$RefreshReg$(_c2, \"HistoryTab\");","map":{"version":3,"names":["React","useState","useEffect","paymentReportApi","jsxDEV","_jsxDEV","ImportPaymentHistory","onImportComplete","onClose","_s","importing","setImporting","importError","setImportError","handleDownloadTemplate","BOM","Uint8Array","templateContent","blob","Blob","type","url","URL","createObjectURL","link","document","createElement","setAttribute","style","visibility","body","appendChild","click","removeChild","revokeObjectURL","console","log","error","alert","handleFileSelect","fileInput","accept","onchange","e","_files","file","target","files","reader","FileReader","onload","event","result","csvContent","importedData","parseCSV","record","saveImportedRecord","saveError","onerror","readAsText","content","replace","rows","split","filter","row","trim","headers","data","slice","map","values","forEach","header","index","value","parseInt","yearMatch","match","year","Date","getFullYear","isPayment","amount","Math","abs","paymentData","fiscal_year","payment_amount","status","application_date","payment_date","notes","savePaymentReport","importContainerStyle","position","top","left","transform","backgroundColor","padding","borderRadius","boxShadow","width","maxWidth","zIndex","importTitleStyle","fontSize","marginBottom","textAlign","importButtonsStyle","display","flexDirection","gap","buttonBaseStyle","border","cursor","downloadButtonStyle","color","selectButtonStyle","closeButtonStyle","marginTop","alignSelf","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","HistoryTab","fiscalYear","_s2","loading","setLoading","setError","historyData","setHistoryData","id","applicationDate","paymentDate","formatDate","dateString","addDays","date","setDate","getDate","getMonth","toString","padStart","fetchPaymentReports","reports","getAllPaymentReports","formattedData","report","_report$payment_amoun","_report$payment_amoun2","_report$payment_amoun3","extReport","updated_at","length","err","Error","message","showImport","setShowImport","handleImportComplete","handleCloseImport","formatNumber","num","toFixed","getPaymentColor","getStatusStyle","baseStyle","containerStyle","headerStyle","justifyContent","alignItems","titleStyle","fontWeight","importBtnStyle","tableContainerStyle","overflowX","tableStyle","borderCollapse","thStyle","tdStyle","amountCellStyle","overlayStyle","height","loadingStyle","errorStyle","colSpan","item","_c2","$RefreshReg$"],"sources":["/Users/gotouhiroaki/Programming/DAN_work/disability-employment-system/frontend/src/components/PaymentReport/HistoryTab.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { paymentReportApi, PaymentReport } from '../../api/paymentReportApi';\n\n// PaymentReport型を拡張\ninterface ExtendedPaymentReport extends PaymentReport {\n  type?: string;\n  application_date?: string;\n  payment_date?: string;\n  fiscal_year?: number;\n}\n\n// インポートコンポーネント\nconst ImportPaymentHistory: React.FC<{\n  onImportComplete?: (importedData: any[]) => void;\n  onClose?: () => void;\n}> = ({ onImportComplete, onClose }) => {\n  const [importing, setImporting] = useState(false);\n  const [importError, setImportError] = useState<string | null>(null);\n\n  // テンプレートダウンロード処理\n  const handleDownloadTemplate = async () => {\n    try {\n      // CSVテンプレートの内容（BOM付きUTF-8でエンコード）\n      const BOM = new Uint8Array([0xEF, 0xBB, 0xBF]);\n      const templateContent = `年度,種別,金額,申告日,支払/受取日,状態\n2024年度,調整金,533412,2025/05/14,2025/07/16,受取済\n2023年度,納付金,-300000,2024/05/15,2024/06/30,支払済\n,,,,,`;\n      \n      // CSVファイルを作成（BOMを追加してUTF-8エンコーディングを明示）\n      const blob = new Blob([BOM, templateContent], { type: 'text/csv;charset=utf-8;' });\n      const url = URL.createObjectURL(blob);\n      const link = document.createElement('a');\n      link.setAttribute('href', url);\n      link.setAttribute('download', 'noufukin_shinkoku_template.csv');\n      link.style.visibility = 'hidden';\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n      URL.revokeObjectURL(url);\n      console.log('納付金申告テンプレートをダウンロードしました');\n    } catch (error) {\n      console.error('テンプレートダウンロードエラー:', error);\n      alert('テンプレートのダウンロード中にエラーが発生しました');\n    }\n  };\n\n  // CSVファイル選択処理\n  const handleFileSelect = () => {\n    const fileInput = document.createElement('input');\n    fileInput.type = 'file';\n    fileInput.accept = '.csv';\n    \n    fileInput.onchange = async (e) => {\n      const file = (e.target as HTMLInputElement).files?.[0];\n      if (file) {\n        try {\n          setImporting(true);\n          setImportError(null);\n          \n          // FileReader でファイルを読み込む\n          const reader = new FileReader();\n          \n          reader.onload = async (event) => {\n            if (event.target && event.target.result) {\n              const csvContent = event.target.result as string;\n              \n              // CSVをパースしてデータに変換\n              const importedData = parseCSV(csvContent);\n              \n              // APIを呼び出してデータを保存\n              try {\n                // APIでデータを保存（本実装時はこちらを使用）\n                for (const record of importedData) {\n                  await saveImportedRecord(record);\n                }\n                \n                console.log('CSVインポート完了:', importedData);\n                \n                // インポート完了通知\n                if (onImportComplete) {\n                  onImportComplete(importedData);\n                }\n                \n                // モーダルを閉じる\n                if (onClose) {\n                  onClose();\n                }\n                \n                setImporting(false);\n                alert('CSVインポートが完了しました');\n              } catch (saveError) {\n                console.error('データ保存エラー:', saveError);\n                setImportError('データの保存中にエラーが発生しました');\n                setImporting(false);\n              }\n            }\n          };\n          \n          reader.onerror = () => {\n            setImportError('ファイルの読み込み中にエラーが発生しました');\n            setImporting(false);\n          };\n          \n          reader.readAsText(file, 'UTF-8');\n          \n        } catch (error) {\n          console.error('CSVインポートエラー:', error);\n          setImportError('CSVインポート中にエラーが発生しました');\n          setImporting(false);\n        }\n      }\n    };\n    \n    fileInput.click();\n  };\n\n  // CSVをパースする関数\n  const parseCSV = (csvContent: string) => {\n    // BOMを除去する\n    const content = csvContent.replace(/^\\uFEFF/, '');\n    \n    // 行に分割\n    const rows = content.split(/\\r?\\n/).filter(row => row.trim() !== '');\n    \n    // ヘッダー行を取得\n    const headers = rows[0].split(',');\n    \n    // データ行をパース\n    const data = rows.slice(1).map(row => {\n      const values = row.split(',');\n      const record: Record<string, any> = {};\n      \n      headers.forEach((header, index) => {\n        // ヘッダーに対応する値を設定\n        let value: any = values[index] ? values[index].trim() : '';\n        \n        // データ型の変換\n        if (header === '金額') {\n          // 数値に変換\n          value = value ? parseInt(value, 10) : 0;\n        }\n        \n        record[header] = value;\n      });\n      \n      return record;\n    });\n    \n    return data;\n  };\n\n  // インポートしたレコードを保存する関数\n  const saveImportedRecord = async (record: Record<string, any>) => {\n    // 年度から数値部分を抽出\n    const yearMatch = record['年度'].match(/(\\d{4})/);\n    const year = yearMatch ? parseInt(yearMatch[1], 10) : new Date().getFullYear();\n    \n    // 金額の正負を確認（納付金はマイナス、調整金はプラス）\n    const isPayment = record['種別'] === '納付金';\n    const amount = Math.abs(record['金額']);\n    \n    // PaymentReport APIに送信するデータを作成\n    const paymentData = {\n      year,\n      fiscal_year: year,\n      payment_amount: isPayment ? -amount : amount,\n      status: record['状態'] === '作成中' ? '作成中' : '確定済み',\n      type: record['種別'],\n      application_date: record['申告日'] || '',\n      payment_date: record['支払/受取日'] || '',\n      notes: `${year}年度の${record['種別']}（CSVインポート）`\n    };\n    \n    // APIを呼び出して保存\n    await paymentReportApi.savePaymentReport(year, paymentData);\n  };\n\n  // スタイル定義\n  const importContainerStyle: React.CSSProperties = {\n    position: 'fixed',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    backgroundColor: 'white',\n    padding: '20px',\n    borderRadius: '4px',\n    boxShadow: '0 2px 10px rgba(0, 0, 0, 0.2)',\n    width: '80%',\n    maxWidth: '500px',\n    zIndex: 1000\n  };\n  \n  const importTitleStyle: React.CSSProperties = {\n    fontSize: '18px',\n    marginBottom: '20px',\n    textAlign: 'center'\n  };\n  \n  const importButtonsStyle: React.CSSProperties = {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: '10px'\n  };\n  \n  const buttonBaseStyle: React.CSSProperties = {\n    padding: '10px',\n    border: 'none',\n    borderRadius: '4px',\n    cursor: 'pointer',\n    fontSize: '14px'\n  };\n  \n  const downloadButtonStyle: React.CSSProperties = {\n    ...buttonBaseStyle,\n    backgroundColor: '#4A60DD',\n    color: 'white'\n  };\n  \n  const selectButtonStyle: React.CSSProperties = {\n    ...buttonBaseStyle,\n    backgroundColor: '#f1f1f1',\n    border: '1px solid #ddd',\n    color: '#333333'  // フォントカラーを濃い色に変更\n  };\n  \n  const closeButtonStyle: React.CSSProperties = {\n    ...buttonBaseStyle,\n    backgroundColor: '#6c757d',\n    color: 'white',\n    marginTop: '10px',\n    alignSelf: 'flex-end',\n    width: 'auto',\n    padding: '8px 15px'\n  };\n\n  return (\n    <div style={importContainerStyle}>\n      <h3 style={importTitleStyle}>納付金申告のインポート</h3>\n      \n      {importError && (\n        <div style={{ \n          backgroundColor: '#f8d7da', \n          color: '#721c24', \n          padding: '8px 12px', \n          borderRadius: '4px', \n          marginBottom: '1rem' \n        }}>\n          {importError}\n        </div>\n      )}\n      \n      <div style={importButtonsStyle}>\n        <button\n          onClick={handleDownloadTemplate}\n          style={downloadButtonStyle}\n          disabled={importing}\n        >\n          インポートテンプレートをダウンロード\n        </button>\n        \n        <button\n          onClick={handleFileSelect}\n          style={selectButtonStyle}\n          disabled={importing}\n        >\n          {importing ? 'インポート中...' : 'CSVファイルを選択'}\n        </button>\n        \n        {onClose && (\n          <button\n            onClick={onClose}\n            style={closeButtonStyle}\n            disabled={importing}\n          >\n            閉じる\n          </button>\n        )}\n      </div>\n    </div>\n  );\n};\n\ninterface HistoryTabProps {\n  fiscalYear: string;\n  reportData?: any;\n}\n\n// 表示用の履歴データ型定義\ninterface HistoryItem {\n  id: number;\n  year: string;\n  type: string;\n  amount: number;\n  applicationDate: string;\n  paymentDate: string;\n  status: string;\n}\n\nconst HistoryTab: React.FC<HistoryTabProps> = ({ fiscalYear }) => {\n  // API連携用の状態\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  \n  // 履歴データの状態\n  const [historyData, setHistoryData] = useState<HistoryItem[]>([\n    { \n      id: 1,\n      year: '2024年度', \n      type: '調整金', \n      amount: 533412, \n      applicationDate: '2025/05/14', \n      paymentDate: '2025/07/16', \n      status: '受取済' \n    },\n    { \n      id: 2,\n      year: '2023年度', \n      type: '調整金', \n      amount: 487200, \n      applicationDate: '2024/05/15', \n      paymentDate: '2024/07/22', \n      status: '受取済' \n    },\n    { \n      id: 3,\n      year: '2022年度', \n      type: '納付金', \n      amount: -240000, \n      applicationDate: '2023/05/12', \n      paymentDate: '2023/06/30', \n      status: '支払済' \n    },\n    { \n      id: 4,\n      year: '2021年度', \n      type: '納付金', \n      amount: -600000, \n      applicationDate: '2022/05/16', \n      paymentDate: '2022/07/05', \n      status: '支払済' \n    },\n    { \n      id: 5,\n      year: '2020年度', \n      type: '納付金', \n      amount: -840000, \n      applicationDate: '2021/05/14', \n      paymentDate: '2021/07/12', \n      status: '支払済' \n    }\n  ]);\n\n  // 日付フォーマット用のヘルパー関数\n  const formatDate = (dateString: string | undefined, addDays = 0) => {\n    if (!dateString) return '-';\n    \n    try {\n      const date = new Date(dateString);\n      if (addDays) {\n        date.setDate(date.getDate() + addDays);\n      }\n      return `${date.getFullYear()}/${(date.getMonth() + 1).toString().padStart(2, '0')}/${date.getDate().toString().padStart(2, '0')}`;\n    } catch (e) {\n      return '-';\n    }\n  };\n\n  // APIからデータを取得する関数を独立させる\n  const fetchPaymentReports = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      \n      // APIから納付金レポート履歴を取得\n      const reports = await paymentReportApi.getAllPaymentReports();\n      \n      // APIのレスポンスを表示用のフォーマットに変換\n      const formattedData: HistoryItem[] = reports.map((report) => {\n        // 拡張された型にキャスト\n        const extReport = report as ExtendedPaymentReport;\n        \n        // 種別を判定（納付金か調整金か）\n        const type = extReport.type || ((report.payment_amount ?? 0) < 0 ? '納付金' : '調整金');\n        \n        // 支払状態を判定\n        const status = report.status === '作成中' \n          ? '作成中'\n          : ((report.payment_amount ?? 0) < 0 ? '支払済' : '受取済');\n        \n        // 日付をフォーマット\n        const applicationDate = extReport.application_date || formatDate(report.updated_at);\n        const paymentDate = extReport.payment_date || (status !== '作成中' ? formatDate(report.updated_at, 45) : '-');\n        \n        // 金額のデフォルト値を設定\n        const amount = report.payment_amount ?? 0;\n        \n        return {\n          id: report.id || 0,\n          year: `${extReport.fiscal_year || report.year || new Date().getFullYear()}年度`,\n          type,\n          amount: amount,\n          applicationDate,\n          paymentDate,\n          status\n        };\n      });\n      \n      // データが取得できた場合、それを使用\n      if (formattedData.length > 0) {\n        setHistoryData(formattedData);\n      }\n      \n      setLoading(false);\n    } catch (err) {\n      setLoading(false);\n      setError(err instanceof Error ? err.message : '納付金レポート履歴の取得に失敗しました');\n      console.error('納付金レポート履歴の取得エラー:', err);\n    }\n  };\n\n  // APIからデータを取得\n  useEffect(() => {\n    fetchPaymentReports();\n  }, []);\n\n  // 状態管理\n  const [showImport, setShowImport] = useState(false);\n  \n  // インポート完了ハンドラ\n  const handleImportComplete = (importedData: any[]) => {\n    console.log('インポート完了', importedData);\n    // データの再読み込み\n    fetchPaymentReports();\n  };\n  \n  // インポートモーダルを閉じる\n  const handleCloseImport = () => {\n    setShowImport(false);\n  };\n\n  // 金額の表示フォーマット\n  const formatNumber = (num: number) => {\n    return num.toFixed(0).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n  };\n  \n  // 調整金・納付金の表示色\n  const getPaymentColor = (amount: number) => {\n    return amount >= 0 ? '#28a745' : '#dc3545';\n  };\n  \n  // ステータスバッジのスタイル\n  const getStatusStyle = (status: string) => {\n    const baseStyle = {\n      display: 'inline-block',\n      padding: '4px 8px',\n      borderRadius: '9999px',\n      fontSize: '12px'\n    };\n    \n    if (status === '受取済') {\n      return {\n        ...baseStyle,\n        backgroundColor: '#d1fae5',\n        color: '#065f46'\n      };\n    } else if (status === '支払済') {\n      return {\n        ...baseStyle,\n        backgroundColor: '#dbeafe',\n        color: '#1e40af'\n      };\n    } else {\n      return {\n        ...baseStyle,\n        backgroundColor: '#f3f4f6',\n        color: '#374151'\n      };\n    }\n  };\n  \n  // スタイル定義\n  const containerStyle: React.CSSProperties = {\n    position: 'relative',\n    padding: '20px'\n  };\n  \n  const headerStyle: React.CSSProperties = {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: '20px'\n  };\n  \n  const titleStyle: React.CSSProperties = {\n    fontSize: '18px',\n    fontWeight: 600\n  };\n  \n  const importBtnStyle: React.CSSProperties = {\n    backgroundColor: '#4A60DD',\n    color: 'white',\n    padding: '8px 15px',\n    border: 'none',\n    borderRadius: '4px',\n    cursor: 'pointer'\n  };\n  \n  const tableContainerStyle: React.CSSProperties = {\n    overflowX: 'auto'\n  };\n  \n  const tableStyle: React.CSSProperties = {\n    width: '100%',\n    borderCollapse: 'collapse'\n  };\n  \n  const thStyle: React.CSSProperties = {\n    padding: '12px',\n    border: '1px solid #e2e8f0',\n    textAlign: 'left',\n    backgroundColor: '#f8fafc',\n    fontWeight: 600\n  };\n  \n  const tdStyle: React.CSSProperties = {\n    padding: '12px',\n    border: '1px solid #e2e8f0',\n    textAlign: 'left'\n  };\n  \n  const amountCellStyle: React.CSSProperties = {\n    ...tdStyle,\n    textAlign: 'right'\n  };\n  \n  const overlayStyle: React.CSSProperties = {\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    width: '100%',\n    height: '100%',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    zIndex: 50\n  };\n  \n  const loadingStyle: React.CSSProperties = {\n    textAlign: 'center',\n    padding: '20px',\n    color: '#4A60DD'\n  };\n  \n  const errorStyle: React.CSSProperties = {\n    backgroundColor: '#fee2e2',\n    color: '#b91c1c',\n    padding: '10px',\n    borderRadius: '4px',\n    marginBottom: '15px'\n  };\n\n  return (\n    <div style={containerStyle}>\n      {/* ヘッダー部分 - CSVインポートボタンを右端に配置（青色背景） */}\n      <div style={headerStyle}>\n        <h3 style={titleStyle}>障害者雇用納付金・調整金申告履歴</h3>\n        <button \n          onClick={() => setShowImport(true)}\n          style={importBtnStyle}\n        >\n          CSVインポート\n        </button>\n      </div>\n      \n      {/* エラーメッセージ表示 */}\n      {error && (\n        <div style={errorStyle}>\n          {error}\n        </div>\n      )}\n      \n      {/* ローディング表示 */}\n      {loading ? (\n        <div style={loadingStyle}>\n          データを読み込み中...\n        </div>\n      ) : (\n        /* 履歴テーブル */\n        <div style={tableContainerStyle}>\n          <table style={tableStyle}>\n            <thead>\n              <tr>\n                <th style={thStyle}>年度</th>\n                <th style={thStyle}>種別</th>\n                <th style={thStyle}>金額</th>\n                <th style={thStyle}>申告日</th>\n                <th style={thStyle}>支払/受取日</th>\n                <th style={thStyle}>状態</th>\n              </tr>\n            </thead>\n            <tbody>\n              {historyData.length === 0 ? (\n                <tr>\n                  <td colSpan={6} style={{...tdStyle, textAlign: 'center'}}>\n                    申告履歴がありません\n                  </td>\n                </tr>\n              ) : (\n                historyData.map((item) => (\n                  <tr key={item.id}>\n                    <td style={tdStyle}>{item.year}</td>\n                    <td style={tdStyle}>{item.type}</td>\n                    <td style={{...amountCellStyle, color: getPaymentColor(item.amount)}}>\n                      {item.amount < 0 ? '-' : ''}{formatNumber(Math.abs(item.amount))}円\n                    </td>\n                    <td style={tdStyle}>{item.applicationDate}</td>\n                    <td style={tdStyle}>{item.paymentDate}</td>\n                    <td style={tdStyle}>\n                      <span style={getStatusStyle(item.status)}>\n                        {item.status}\n                      </span>\n                    </td>\n                  </tr>\n                ))\n              )}\n            </tbody>\n          </table>\n        </div>\n      )}\n      \n      {/* インポートモーダルのオーバーレイ */}\n      {showImport && (\n        <div style={overlayStyle}>\n          <ImportPaymentHistory \n            onImportComplete={handleImportComplete}\n            onClose={handleCloseImport}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default HistoryTab;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}