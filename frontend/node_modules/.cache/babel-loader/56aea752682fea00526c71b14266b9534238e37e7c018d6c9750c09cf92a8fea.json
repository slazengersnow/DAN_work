{"ast":null,"code":"/**\n * 月次報告・従業員詳細画面の表示修正スクリプト\n * 1. 月次報告画面の対象年度を非表示に\n * 2. 従業員詳細画面の対象年度を適切な位置に表示\n */\n(function () {\n  'use strict';\n\n  // デバッグログ用の関数\n  function log(message) {\n    console.log('[UI修正] ' + message);\n  }\n  log('UI修正スクリプトを開始します');\n\n  // 既存の監視を停止（存在する場合）\n  if (window._uiFixObserver && typeof window._uiFixObserver.disconnect === 'function') {\n    window._uiFixObserver.disconnect();\n    log('既存の監視を停止しました');\n  }\n\n  // テキスト内容で要素を検索するヘルパー関数\n  function findElementByText(selector, text) {\n    return Array.from(document.querySelectorAll(selector)).find(el => el.textContent && el.textContent.includes(text));\n  }\n\n  // 1. 月次報告の対象年度を非表示にする関数\n  function hideMonthlyReportYearSelector() {\n    log('月次報告の対象年度を非表示にします');\n\n    // 月次報告タイトルを検出\n    const monthlyTitle = findElementByText('h2, h3, h4', '月次報告');\n    if (!monthlyTitle) {\n      // 月次報告画面が表示されているか確認（別の方法）\n      const activeTab = document.querySelector('.nav-link.active');\n      if (!activeTab || !(activeTab.textContent && (activeTab.textContent.includes('月次報告') || activeTab.textContent.includes('月次詳細')))) {\n        log('月次報告画面が表示されていません');\n        return false;\n      }\n    }\n\n    // 検出方法1: 上部の年度セレクタを非表示\n    document.querySelectorAll('div.form-group, .row, .col').forEach(el => {\n      if (el.textContent && el.textContent.includes('年度:') && !el.querySelector('table')) {\n        el.style.cssText = 'display: none !important;';\n        log('上部の年度セレクタを非表示にしました');\n      }\n    });\n\n    // 検出方法2: 「対象年度」を含む要素を非表示\n    document.querySelectorAll('label, div, span').forEach(el => {\n      if (el.textContent && el.textContent.includes('対象年度')) {\n        const container = el.closest('.form-group, .row, .col, div');\n        if (container && !container.querySelector('table') && !container.classList.contains('employee-year-right')) {\n          container.style.cssText = 'display: none !important;';\n          log('対象年度を含む要素を非表示にしました');\n        }\n      }\n    });\n\n    // 検出方法3: 月次詳細タブの年度セレクタだけは表示する\n    document.querySelectorAll('.monthly-report-detail select#fiscal-year-select').forEach(el => {\n      el.style.cssText = 'display: inline-block !important; visibility: visible !important;';\n      log('月次詳細タブの年度セレクタを表示しました');\n    });\n\n    // 検出方法4: 月次報告コンテナの年度選択パネルを非表示\n    const topPanel = document.querySelector('.monthly-report-container > div > div:nth-child(3)');\n    if (topPanel) {\n      topPanel.style.cssText = 'display: none !important; visibility: hidden !important;';\n      log('月次報告の上部パネルを非表示にしました');\n    }\n    return true;\n  }\n\n  // 2. 従業員詳細の対象年度を適切な位置に表示する関数\n  function fixEmployeeDetailYearDisplay() {\n    log('従業員詳細の対象年度表示を修正します');\n\n    // 従業員詳細画面が表示されているか確認\n    const employeeDetailHeading = findElementByText('h2, h3, h4', '従業員詳細');\n    const activeTab = document.querySelector('.nav-link.active');\n    const isEmployeeDetail = activeTab && activeTab.textContent && activeTab.textContent.includes('従業員詳細') || employeeDetailHeading !== undefined;\n    if (!isEmployeeDetail) {\n      log('従業員詳細画面が表示されていません');\n      return false;\n    }\n\n    // すでに修正済みかチェック\n    if (document.querySelector('.employee-year-right')) {\n      log('従業員詳細の対象年度はすでに修正済みです');\n      return true;\n    }\n\n    // 既存の年度関連要素を非表示にする\n    document.querySelectorAll('label, div, span').forEach(el => {\n      if (el.textContent && (el.textContent.includes('年度:') || el.textContent.includes('対象年度'))) {\n        const container = el.closest('.form-group, .row, .col, div');\n        if (container && !container.classList.contains('employee-year-right')) {\n          container.style.cssText = 'display: none !important;';\n          log('既存の年度関連要素を非表示にしました');\n        }\n      }\n    });\n\n    // 従業員詳細のヘッダーエリアを検出\n    let employeeDetailHeader = null;\n\n    // 方法1: 見出しの親要素を検出\n    if (employeeDetailHeading) {\n      employeeDetailHeader = employeeDetailHeading.closest('.row, .container, .col');\n    }\n\n    // 方法2: 従業員詳細ヘッダークラスを検出\n    if (!employeeDetailHeader) {\n      employeeDetailHeader = document.querySelector('.employee-detail-header');\n    }\n\n    // 方法3: ボタングループの親要素を検出\n    if (!employeeDetailHeader) {\n      const btnGroup = document.querySelector('.btn-group');\n      if (btnGroup) {\n        employeeDetailHeader = btnGroup.closest('.row, .container');\n      }\n    }\n\n    // 方法4: 編集ボタンの親要素を検出\n    if (!employeeDetailHeader) {\n      const editButton = findElementByText('button', '編集');\n      if (editButton) {\n        employeeDetailHeader = editButton.closest('.row, .container, .col');\n      }\n    }\n    if (!employeeDetailHeader) {\n      log('従業員詳細のヘッダーエリアが見つかりません');\n      return false;\n    }\n\n    // 新しい対象年度表示を作成\n    const yearDisplay = document.createElement('div');\n    yearDisplay.className = 'employee-year-right';\n    yearDisplay.style.cssText = 'display: flex; justify-content: flex-end; align-items: center; margin-bottom: 10px;';\n\n    // 現在の年度を取得\n    const currentYear = new Date().getFullYear();\n\n    // 横並びの要素として構築\n    yearDisplay.innerHTML = `\n      <div style=\"margin-left: auto; display: flex; align-items: center;\">\n        <span style=\"font-weight: bold; margin-right: 5px;\">対象年度:</span>\n        <select class=\"form-control form-control-sm\" style=\"display: inline-block; width: auto; padding: 4px 8px; height: auto;\">\n          <option value=\"${currentYear - 2}\">${currentYear - 2}年度</option>\n          <option value=\"${currentYear - 1}\">${currentYear - 1}年度</option>\n          <option value=\"${currentYear}\" selected>${currentYear}年度</option>\n          <option value=\"${currentYear + 1}\">${currentYear + 1}年度</option>\n        </select>\n      </div>\n    `;\n\n    // ヘッダーエリアの後に挿入\n    employeeDetailHeader.parentNode.insertBefore(yearDisplay, employeeDetailHeader.nextSibling);\n    log('従業員詳細の対象年度表示を追加しました');\n\n    // イベントリスナーを追加\n    const select = yearDisplay.querySelector('select');\n    if (select) {\n      select.addEventListener('change', function (e) {\n        log(`年度が変更されました: ${e.target.value}`);\n\n        // 年度変更イベントの発行\n        const yearChangeEvent = new CustomEvent('employeeYearChanged', {\n          detail: {\n            year: parseInt(e.target.value, 10),\n            yearText: `${e.target.value}年度`\n          },\n          bubbles: true\n        });\n        document.dispatchEvent(yearChangeEvent);\n\n        // フィードバック表示\n        const feedbackText = document.createElement('span');\n        feedbackText.textContent = `${e.target.value}年度のデータを表示します`;\n        feedbackText.style.cssText = 'color: #3a66d4; margin-left: 10px; font-weight: normal; opacity: 0; transition: opacity 0.3s;';\n\n        // 既存の通知を削除\n        const existingFeedback = document.querySelector('.year-feedback');\n        if (existingFeedback) {\n          existingFeedback.remove();\n        }\n\n        // 新しい通知を追加\n        feedbackText.className = 'year-feedback';\n        yearDisplay.querySelector('div').appendChild(feedbackText);\n\n        // フェードイン・アウト効果\n        setTimeout(() => {\n          feedbackText.style.opacity = '1';\n          setTimeout(() => {\n            feedbackText.style.opacity = '0';\n            setTimeout(() => {\n              if (feedbackText.parentNode) {\n                feedbackText.parentNode.removeChild(feedbackText);\n              }\n            }, 300);\n          }, 3000);\n        }, 10);\n      });\n    }\n    return true;\n  }\n\n  // 初期実行\n  setTimeout(() => {\n    hideMonthlyReportYearSelector();\n    fixEmployeeDetailYearDisplay();\n  }, 500);\n\n  // MutationObserverの設定\n  let debounceTimer = null;\n  const observer = new MutationObserver(function (mutations) {\n    if (debounceTimer) {\n      clearTimeout(debounceTimer);\n    }\n    debounceTimer = setTimeout(() => {\n      // 重要な変更のみに反応\n      let shouldUpdate = false;\n      for (const mutation of mutations) {\n        // 要素追加の場合\n        if (mutation.type === 'childList' && mutation.addedNodes.length) {\n          for (const node of mutation.addedNodes) {\n            if (node.nodeType === Node.ELEMENT_NODE) {\n              var _node$classList, _node$querySelector;\n              // 重要な要素の追加\n              if (node.textContent && (node.textContent.includes('従業員詳細') || node.textContent.includes('月次報告')) || (_node$classList = node.classList) !== null && _node$classList !== void 0 && _node$classList.contains('tab-pane') || (_node$querySelector = node.querySelector) !== null && _node$querySelector !== void 0 && _node$querySelector.call(node, 'h2, h3, h4, button, .nav-tabs')) {\n                shouldUpdate = true;\n                break;\n              }\n            }\n          }\n        }\n        if (shouldUpdate) break;\n      }\n      if (shouldUpdate) {\n        log('重要なDOM変更を検出しました');\n        hideMonthlyReportYearSelector();\n        fixEmployeeDetailYearDisplay();\n      }\n    }, 300);\n  });\n\n  // 監視設定（最小限の設定で効率化）\n  observer.observe(document.body, {\n    childList: true,\n    subtree: true,\n    attributes: false\n  });\n\n  // グローバル変数に保存\n  window._uiFixObserver = observer;\n\n  // タブ切り替えイベントでの処理\n  document.addEventListener('click', function (e) {\n    var _e$target$classList;\n    if ((_e$target$classList = e.target.classList) !== null && _e$target$classList !== void 0 && _e$target$classList.contains('nav-link') || e.target.closest && e.target.closest('.nav-link')) {\n      log('タブ切り替えを検出しました');\n      setTimeout(() => {\n        const clickedTab = e.target.closest('.nav-link') || e.target;\n        const tabText = clickedTab.textContent || '';\n        if (tabText.includes('従業員詳細')) {\n          fixEmployeeDetailYearDisplay();\n        } else if (tabText.includes('月次') || tabText.includes('サマリー')) {\n          hideMonthlyReportYearSelector();\n        }\n      }, 300);\n    }\n  });\n\n  // URL変更の検出（ページ遷移）\n  let lastUrl = window.location.href;\n  new MutationObserver(() => {\n    const url = window.location.href;\n    if (url !== lastUrl) {\n      lastUrl = url;\n      log('URL変更を検出しました');\n      setTimeout(() => {\n        if (url.includes('employee') || url.includes('staff')) {\n          fixEmployeeDetailYearDisplay();\n        } else if (url.includes('monthly') || url.includes('report')) {\n          hideMonthlyReportYearSelector();\n        }\n      }, 500);\n    }\n  }).observe(document, {\n    subtree: true,\n    childList: true\n  });\n\n  // ページ読み込み完了時の処理\n  window.addEventListener('load', function () {\n    log('ページ読み込み完了');\n    setTimeout(() => {\n      hideMonthlyReportYearSelector();\n      fixEmployeeDetailYearDisplay();\n    }, 300);\n  });\n  log('UI修正スクリプトの設定が完了しました');\n})();","map":{"version":3,"names":["log","message","console","window","_uiFixObserver","disconnect","findElementByText","selector","text","Array","from","document","querySelectorAll","find","el","textContent","includes","hideMonthlyReportYearSelector","monthlyTitle","activeTab","querySelector","forEach","style","cssText","container","closest","classList","contains","topPanel","fixEmployeeDetailYearDisplay","employeeDetailHeading","isEmployeeDetail","undefined","employeeDetailHeader","btnGroup","editButton","yearDisplay","createElement","className","currentYear","Date","getFullYear","innerHTML","parentNode","insertBefore","nextSibling","select","addEventListener","e","target","value","yearChangeEvent","CustomEvent","detail","year","parseInt","yearText","bubbles","dispatchEvent","feedbackText","existingFeedback","remove","appendChild","setTimeout","opacity","removeChild","debounceTimer","observer","MutationObserver","mutations","clearTimeout","shouldUpdate","mutation","type","addedNodes","length","node","nodeType","Node","ELEMENT_NODE","_node$classList","_node$querySelector","call","observe","body","childList","subtree","attributes","_e$target$classList","clickedTab","tabText","lastUrl","location","href","url"],"sources":["/Users/gotouhiroaki/Programming/DAN_work/disability-employment-system/frontend/src/pages/UIFixer.js"],"sourcesContent":["/**\n * 月次報告・従業員詳細画面の表示修正スクリプト\n * 1. 月次報告画面の対象年度を非表示に\n * 2. 従業員詳細画面の対象年度を適切な位置に表示\n */\n(function() {\n  'use strict';\n  \n  // デバッグログ用の関数\n  function log(message) {\n    console.log('[UI修正] ' + message);\n  }\n\n  log('UI修正スクリプトを開始します');\n\n  // 既存の監視を停止（存在する場合）\n  if (window._uiFixObserver && typeof window._uiFixObserver.disconnect === 'function') {\n    window._uiFixObserver.disconnect();\n    log('既存の監視を停止しました');\n  }\n\n  // テキスト内容で要素を検索するヘルパー関数\n  function findElementByText(selector, text) {\n    return Array.from(document.querySelectorAll(selector)).find(el => \n      el.textContent && el.textContent.includes(text));\n  }\n\n  // 1. 月次報告の対象年度を非表示にする関数\n  function hideMonthlyReportYearSelector() {\n    log('月次報告の対象年度を非表示にします');\n    \n    // 月次報告タイトルを検出\n    const monthlyTitle = findElementByText('h2, h3, h4', '月次報告');\n      \n    if (!monthlyTitle) {\n      // 月次報告画面が表示されているか確認（別の方法）\n      const activeTab = document.querySelector('.nav-link.active');\n      if (!activeTab || !(activeTab.textContent && \n          (activeTab.textContent.includes('月次報告') || \n           activeTab.textContent.includes('月次詳細')))) {\n        log('月次報告画面が表示されていません');\n        return false;\n      }\n    }\n    \n    // 検出方法1: 上部の年度セレクタを非表示\n    document.querySelectorAll('div.form-group, .row, .col').forEach(el => {\n      if (el.textContent && el.textContent.includes('年度:') && !el.querySelector('table')) {\n        el.style.cssText = 'display: none !important;';\n        log('上部の年度セレクタを非表示にしました');\n      }\n    });\n    \n    // 検出方法2: 「対象年度」を含む要素を非表示\n    document.querySelectorAll('label, div, span').forEach(el => {\n      if (el.textContent && el.textContent.includes('対象年度')) {\n        const container = el.closest('.form-group, .row, .col, div');\n        if (container && !container.querySelector('table') && !container.classList.contains('employee-year-right')) {\n          container.style.cssText = 'display: none !important;';\n          log('対象年度を含む要素を非表示にしました');\n        }\n      }\n    });\n    \n    // 検出方法3: 月次詳細タブの年度セレクタだけは表示する\n    document.querySelectorAll('.monthly-report-detail select#fiscal-year-select').forEach(el => {\n      el.style.cssText = 'display: inline-block !important; visibility: visible !important;';\n      log('月次詳細タブの年度セレクタを表示しました');\n    });\n    \n    // 検出方法4: 月次報告コンテナの年度選択パネルを非表示\n    const topPanel = document.querySelector('.monthly-report-container > div > div:nth-child(3)');\n    if (topPanel) {\n      topPanel.style.cssText = 'display: none !important; visibility: hidden !important;';\n      log('月次報告の上部パネルを非表示にしました');\n    }\n    \n    return true;\n  }\n\n  // 2. 従業員詳細の対象年度を適切な位置に表示する関数\n  function fixEmployeeDetailYearDisplay() {\n    log('従業員詳細の対象年度表示を修正します');\n    \n    // 従業員詳細画面が表示されているか確認\n    const employeeDetailHeading = findElementByText('h2, h3, h4', '従業員詳細');\n    const activeTab = document.querySelector('.nav-link.active');\n    const isEmployeeDetail = (activeTab && activeTab.textContent && activeTab.textContent.includes('従業員詳細')) || \n                            employeeDetailHeading !== undefined;\n    \n    if (!isEmployeeDetail) {\n      log('従業員詳細画面が表示されていません');\n      return false;\n    }\n    \n    // すでに修正済みかチェック\n    if (document.querySelector('.employee-year-right')) {\n      log('従業員詳細の対象年度はすでに修正済みです');\n      return true;\n    }\n    \n    // 既存の年度関連要素を非表示にする\n    document.querySelectorAll('label, div, span').forEach(el => {\n      if (el.textContent && (el.textContent.includes('年度:') || el.textContent.includes('対象年度'))) {\n        const container = el.closest('.form-group, .row, .col, div');\n        if (container && !container.classList.contains('employee-year-right')) {\n          container.style.cssText = 'display: none !important;';\n          log('既存の年度関連要素を非表示にしました');\n        }\n      }\n    });\n    \n    // 従業員詳細のヘッダーエリアを検出\n    let employeeDetailHeader = null;\n    \n    // 方法1: 見出しの親要素を検出\n    if (employeeDetailHeading) {\n      employeeDetailHeader = employeeDetailHeading.closest('.row, .container, .col');\n    }\n    \n    // 方法2: 従業員詳細ヘッダークラスを検出\n    if (!employeeDetailHeader) {\n      employeeDetailHeader = document.querySelector('.employee-detail-header');\n    }\n    \n    // 方法3: ボタングループの親要素を検出\n    if (!employeeDetailHeader) {\n      const btnGroup = document.querySelector('.btn-group');\n      if (btnGroup) {\n        employeeDetailHeader = btnGroup.closest('.row, .container');\n      }\n    }\n    \n    // 方法4: 編集ボタンの親要素を検出\n    if (!employeeDetailHeader) {\n      const editButton = findElementByText('button', '編集');\n      if (editButton) {\n        employeeDetailHeader = editButton.closest('.row, .container, .col');\n      }\n    }\n    \n    if (!employeeDetailHeader) {\n      log('従業員詳細のヘッダーエリアが見つかりません');\n      return false;\n    }\n    \n    // 新しい対象年度表示を作成\n    const yearDisplay = document.createElement('div');\n    yearDisplay.className = 'employee-year-right';\n    yearDisplay.style.cssText = 'display: flex; justify-content: flex-end; align-items: center; margin-bottom: 10px;';\n    \n    // 現在の年度を取得\n    const currentYear = new Date().getFullYear();\n    \n    // 横並びの要素として構築\n    yearDisplay.innerHTML = `\n      <div style=\"margin-left: auto; display: flex; align-items: center;\">\n        <span style=\"font-weight: bold; margin-right: 5px;\">対象年度:</span>\n        <select class=\"form-control form-control-sm\" style=\"display: inline-block; width: auto; padding: 4px 8px; height: auto;\">\n          <option value=\"${currentYear-2}\">${currentYear-2}年度</option>\n          <option value=\"${currentYear-1}\">${currentYear-1}年度</option>\n          <option value=\"${currentYear}\" selected>${currentYear}年度</option>\n          <option value=\"${currentYear+1}\">${currentYear+1}年度</option>\n        </select>\n      </div>\n    `;\n    \n    // ヘッダーエリアの後に挿入\n    employeeDetailHeader.parentNode.insertBefore(yearDisplay, employeeDetailHeader.nextSibling);\n    log('従業員詳細の対象年度表示を追加しました');\n    \n    // イベントリスナーを追加\n    const select = yearDisplay.querySelector('select');\n    if (select) {\n      select.addEventListener('change', function(e) {\n        log(`年度が変更されました: ${e.target.value}`);\n        \n        // 年度変更イベントの発行\n        const yearChangeEvent = new CustomEvent('employeeYearChanged', {\n          detail: { \n            year: parseInt(e.target.value, 10),\n            yearText: `${e.target.value}年度`\n          },\n          bubbles: true\n        });\n        document.dispatchEvent(yearChangeEvent);\n        \n        // フィードバック表示\n        const feedbackText = document.createElement('span');\n        feedbackText.textContent = `${e.target.value}年度のデータを表示します`;\n        feedbackText.style.cssText = 'color: #3a66d4; margin-left: 10px; font-weight: normal; opacity: 0; transition: opacity 0.3s;';\n        \n        // 既存の通知を削除\n        const existingFeedback = document.querySelector('.year-feedback');\n        if (existingFeedback) {\n          existingFeedback.remove();\n        }\n        \n        // 新しい通知を追加\n        feedbackText.className = 'year-feedback';\n        yearDisplay.querySelector('div').appendChild(feedbackText);\n        \n        // フェードイン・アウト効果\n        setTimeout(() => {\n          feedbackText.style.opacity = '1';\n          \n          setTimeout(() => {\n            feedbackText.style.opacity = '0';\n            \n            setTimeout(() => {\n              if (feedbackText.parentNode) {\n                feedbackText.parentNode.removeChild(feedbackText);\n              }\n            }, 300);\n          }, 3000);\n        }, 10);\n      });\n    }\n    \n    return true;\n  }\n\n  // 初期実行\n  setTimeout(() => {\n    hideMonthlyReportYearSelector();\n    fixEmployeeDetailYearDisplay();\n  }, 500);\n\n  // MutationObserverの設定\n  let debounceTimer = null;\n  \n  const observer = new MutationObserver(function(mutations) {\n    if (debounceTimer) {\n      clearTimeout(debounceTimer);\n    }\n    \n    debounceTimer = setTimeout(() => {\n      // 重要な変更のみに反応\n      let shouldUpdate = false;\n      \n      for (const mutation of mutations) {\n        // 要素追加の場合\n        if (mutation.type === 'childList' && mutation.addedNodes.length) {\n          for (const node of mutation.addedNodes) {\n            if (node.nodeType === Node.ELEMENT_NODE) {\n              // 重要な要素の追加\n              if (\n                (node.textContent && (\n                  node.textContent.includes('従業員詳細') || \n                  node.textContent.includes('月次報告')\n                )) ||\n                node.classList?.contains('tab-pane') ||\n                node.querySelector?.('h2, h3, h4, button, .nav-tabs')\n              ) {\n                shouldUpdate = true;\n                break;\n              }\n            }\n          }\n        }\n        \n        if (shouldUpdate) break;\n      }\n      \n      if (shouldUpdate) {\n        log('重要なDOM変更を検出しました');\n        hideMonthlyReportYearSelector();\n        fixEmployeeDetailYearDisplay();\n      }\n    }, 300);\n  });\n\n  // 監視設定（最小限の設定で効率化）\n  observer.observe(document.body, {\n    childList: true,\n    subtree: true,\n    attributes: false\n  });\n\n  // グローバル変数に保存\n  window._uiFixObserver = observer;\n  \n  // タブ切り替えイベントでの処理\n  document.addEventListener('click', function(e) {\n    if (e.target.classList?.contains('nav-link') || \n        (e.target.closest && e.target.closest('.nav-link'))) {\n      log('タブ切り替えを検出しました');\n      \n      setTimeout(() => {\n        const clickedTab = e.target.closest('.nav-link') || e.target;\n        const tabText = clickedTab.textContent || '';\n        \n        if (tabText.includes('従業員詳細')) {\n          fixEmployeeDetailYearDisplay();\n        } else if (tabText.includes('月次') || tabText.includes('サマリー')) {\n          hideMonthlyReportYearSelector();\n        }\n      }, 300);\n    }\n  });\n  \n  // URL変更の検出（ページ遷移）\n  let lastUrl = window.location.href;\n  new MutationObserver(() => {\n    const url = window.location.href;\n    if (url !== lastUrl) {\n      lastUrl = url;\n      log('URL変更を検出しました');\n      \n      setTimeout(() => {\n        if (url.includes('employee') || url.includes('staff')) {\n          fixEmployeeDetailYearDisplay();\n        } else if (url.includes('monthly') || url.includes('report')) {\n          hideMonthlyReportYearSelector();\n        }\n      }, 500);\n    }\n  }).observe(document, {subtree: true, childList: true});\n  \n  // ページ読み込み完了時の処理\n  window.addEventListener('load', function() {\n    log('ページ読み込み完了');\n    setTimeout(() => {\n      hideMonthlyReportYearSelector();\n      fixEmployeeDetailYearDisplay();\n    }, 300);\n  });\n\n  log('UI修正スクリプトの設定が完了しました');\n})();"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}