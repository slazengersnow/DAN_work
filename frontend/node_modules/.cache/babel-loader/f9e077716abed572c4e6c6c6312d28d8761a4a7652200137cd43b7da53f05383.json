{"ast":null,"code":"var _jsxFileName = \"/Users/gotouhiroaki/Programming/DAN_work/disability-employment-system/frontend/src/pages/Settings/Settings.tsx\",\n  _s = $RefreshSig$();\n// src/pages/Settings/Settings.tsx\n\nimport React, { useState, useEffect } from 'react';\nimport settingsApi from '../../api/settingsApi';\nimport BasicSettings from './BasicSettings';\nimport CompanyInfo from './CompanyInfo';\n// 不要なインポートを削除\n// import EmploymentGoals from './EmploymentGoals';\n// import JobAnalysis from './JobAnalysis';\n\nimport './Settings.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Settings = () => {\n  _s();\n  const [activeTab, setActiveTab] = useState('basic');\n  const [settings, setSettings] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // 設定の読み込み\n  useEffect(() => {\n    const loadSettings = async () => {\n      try {\n        setLoading(true);\n        const data = await settingsApi.getCompanySettings();\n\n        // 必須プロパティが欠けている場合は確実に含める\n        const completeSettings = {\n          ...data,\n          // 必須プロパティの存在確認とデフォルト値の設定\n          payment_report_reminder: data.payment_report_reminder !== undefined ? data.payment_report_reminder : true,\n          monthly_report_reminder: data.monthly_report_reminder !== undefined ? data.monthly_report_reminder : true,\n          legal_rate_alert: data.legal_rate_alert !== undefined ? data.legal_rate_alert : true\n        };\n        setSettings(completeSettings);\n        setError(null);\n      } catch (err) {\n        setError('設定データの読み込み中にエラーが発生しました');\n        console.error('設定読み込みエラー:', err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadSettings();\n  }, []);\n\n  // 設定の保存\n  const handleSaveSettings = async updatedSettings => {\n    try {\n      var _settings$payment_rep, _settings$monthly_rep, _settings$legal_rate_;\n      setLoading(true);\n\n      // 必須プロパティが欠けている場合は追加\n      const completeSettings = {\n        ...updatedSettings,\n        // 現在の設定から復元するか、デフォルト値を設定\n        payment_report_reminder: updatedSettings.payment_report_reminder !== undefined ? updatedSettings.payment_report_reminder : (_settings$payment_rep = settings === null || settings === void 0 ? void 0 : settings.payment_report_reminder) !== null && _settings$payment_rep !== void 0 ? _settings$payment_rep : true,\n        monthly_report_reminder: updatedSettings.monthly_report_reminder !== undefined ? updatedSettings.monthly_report_reminder : (_settings$monthly_rep = settings === null || settings === void 0 ? void 0 : settings.monthly_report_reminder) !== null && _settings$monthly_rep !== void 0 ? _settings$monthly_rep : true,\n        legal_rate_alert: updatedSettings.legal_rate_alert !== undefined ? updatedSettings.legal_rate_alert : (_settings$legal_rate_ = settings === null || settings === void 0 ? void 0 : settings.legal_rate_alert) !== null && _settings$legal_rate_ !== void 0 ? _settings$legal_rate_ : true\n      };\n      await settingsApi.updateCompanySettings(completeSettings);\n      setSettings(completeSettings);\n      alert('設定を保存しました');\n    } catch (err) {\n      setError('設定の保存中にエラーが発生しました');\n      console.error('設定保存エラー:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"settings-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u8A2D\\u5B9A\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tabs\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: activeTab === 'basic' ? 'tab-active' : 'tab',\n        onClick: () => setActiveTab('basic'),\n        children: \"\\u57FA\\u672C\\u8A2D\\u5B9A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: activeTab === 'company' ? 'tab-active' : 'tab',\n        onClick: () => setActiveTab('company'),\n        children: \"\\u4F1A\\u793E\\u60C5\\u5831\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"\\u8AAD\\u307F\\u8FBC\\u307F\\u4E2D...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tab-content\",\n      children: [activeTab === 'basic' && settings && /*#__PURE__*/_jsxDEV(BasicSettings, {\n        settings: settings,\n        onSave: handleSaveSettings\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }, this), activeTab === 'company' && settings && /*#__PURE__*/_jsxDEV(CompanyInfo, {\n        settings: settings,\n        onSave: handleSaveSettings\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s(Settings, \"3llQt99YZU2uPVHdJd2q/uAkEpI=\");\n_c = Settings;\nexport default Settings;\nvar _c;\n$RefreshReg$(_c, \"Settings\");","map":{"version":3,"names":["React","useState","useEffect","settingsApi","BasicSettings","CompanyInfo","jsxDEV","_jsxDEV","Settings","_s","activeTab","setActiveTab","settings","setSettings","loading","setLoading","error","setError","loadSettings","data","getCompanySettings","completeSettings","payment_report_reminder","undefined","monthly_report_reminder","legal_rate_alert","err","console","handleSaveSettings","updatedSettings","_settings$payment_rep","_settings$monthly_rep","_settings$legal_rate_","updateCompanySettings","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSave","_c","$RefreshReg$"],"sources":["/Users/gotouhiroaki/Programming/DAN_work/disability-employment-system/frontend/src/pages/Settings/Settings.tsx"],"sourcesContent":["// src/pages/Settings/Settings.tsx\n\nimport React, { useState, useEffect } from 'react';\nimport settingsApi, { CompanySettings } from '../../api/settingsApi';\nimport BasicSettings from './BasicSettings';\nimport CompanyInfo from './CompanyInfo';\n// 不要なインポートを削除\n// import EmploymentGoals from './EmploymentGoals';\n// import JobAnalysis from './JobAnalysis';\n\nimport './Settings.css';\n\nconst Settings: React.FC = () => {\n  const [activeTab, setActiveTab] = useState<string>('basic');\n  const [settings, setSettings] = useState<CompanySettings | null>(null);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [error, setError] = useState<string | null>(null);\n\n  // 設定の読み込み\n  useEffect(() => {\n    const loadSettings = async () => {\n      try {\n        setLoading(true);\n        const data = await settingsApi.getCompanySettings();\n        \n        // 必須プロパティが欠けている場合は確実に含める\n        const completeSettings: CompanySettings = {\n          ...data,\n          // 必須プロパティの存在確認とデフォルト値の設定\n          payment_report_reminder: data.payment_report_reminder !== undefined ? \n            data.payment_report_reminder : true,\n          monthly_report_reminder: data.monthly_report_reminder !== undefined ? \n            data.monthly_report_reminder : true,\n          legal_rate_alert: data.legal_rate_alert !== undefined ? \n            data.legal_rate_alert : true\n        };\n        \n        setSettings(completeSettings);\n        setError(null);\n      } catch (err) {\n        setError('設定データの読み込み中にエラーが発生しました');\n        console.error('設定読み込みエラー:', err);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    loadSettings();\n  }, []);\n\n  // 設定の保存\n  const handleSaveSettings = async (updatedSettings: CompanySettings) => {\n    try {\n      setLoading(true);\n      \n      // 必須プロパティが欠けている場合は追加\n      const completeSettings: CompanySettings = {\n        ...updatedSettings,\n        // 現在の設定から復元するか、デフォルト値を設定\n        payment_report_reminder: updatedSettings.payment_report_reminder !== undefined ? \n          updatedSettings.payment_report_reminder : \n          (settings?.payment_report_reminder ?? true),\n        monthly_report_reminder: updatedSettings.monthly_report_reminder !== undefined ? \n          updatedSettings.monthly_report_reminder : \n          (settings?.monthly_report_reminder ?? true),\n        legal_rate_alert: updatedSettings.legal_rate_alert !== undefined ? \n          updatedSettings.legal_rate_alert : \n          (settings?.legal_rate_alert ?? true)\n      };\n      \n      await settingsApi.updateCompanySettings(completeSettings);\n      setSettings(completeSettings);\n      alert('設定を保存しました');\n    } catch (err) {\n      setError('設定の保存中にエラーが発生しました');\n      console.error('設定保存エラー:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"settings-container\">\n      \n      <h1>設定</h1>\n      \n      <div className=\"tabs\">\n        <button \n          className={activeTab === 'basic' ? 'tab-active' : 'tab'} \n          onClick={() => setActiveTab('basic')}\n        >\n          基本設定\n        </button>\n        <button \n          className={activeTab === 'company' ? 'tab-active' : 'tab'} \n          onClick={() => setActiveTab('company')}\n        >\n          会社情報\n        </button>\n        {/* 不要なタブを削除\n        <button \n          className={activeTab === 'employment' ? 'tab-active' : 'tab'} \n          onClick={() => setActiveTab('employment')}\n        >\n          雇用目標\n        </button>\n        <button \n          className={activeTab === 'job' ? 'tab-active' : 'tab'} \n          onClick={() => setActiveTab('job')}\n        >\n          業務分析\n        </button>\n        */}\n      </div>\n\n      {loading ? (\n        <div className=\"loading\">読み込み中...</div>\n      ) : error ? (\n        <div className=\"error\">{error}</div>\n      ) : (\n        <div className=\"tab-content\">\n          {activeTab === 'basic' && settings && (\n            <BasicSettings \n              settings={settings} \n              onSave={handleSaveSettings} \n            />\n          )}\n          {activeTab === 'company' && settings && (\n            <CompanyInfo \n              settings={settings} \n              onSave={handleSaveSettings} \n            />\n          )}\n          {/* 不要なタブのコンテンツを削除\n          {activeTab === 'employment' && settings && (\n            <EmploymentGoals \n              settings={settings} \n              onSave={handleSaveSettings} \n            />\n          )}\n          {activeTab === 'job' && settings && (\n            <JobAnalysis \n              settings={settings} \n              onSave={handleSaveSettings} \n            />\n          )}\n          */}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Settings;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}